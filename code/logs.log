2024-04-13 19:14:03,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 19:14:03,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 19:14:03,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 19:14:03,349:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-13 19:26:12,840:INFO:PyCaret ClassificationExperiment
2024-04-13 19:26:12,841:INFO:Logging name: clf-default-name
2024-04-13 19:26:12,841:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:26:12,841:INFO:version 3.3.0
2024-04-13 19:26:12,841:INFO:Initializing setup()
2024-04-13 19:26:12,841:INFO:self.USI: ba97
2024-04-13 19:26:12,841:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:26:12,841:INFO:Checking environment
2024-04-13 19:26:12,841:INFO:python_version: 3.10.14
2024-04-13 19:26:12,841:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:26:12,841:INFO:machine: AMD64
2024-04-13 19:26:12,841:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:26:12,844:INFO:Memory: svmem(total=34280943616, available=25724395520, percent=25.0, used=8556548096, free=25724395520)
2024-04-13 19:26:12,844:INFO:Physical Core: 8
2024-04-13 19:26:12,844:INFO:Logical Core: 16
2024-04-13 19:26:12,844:INFO:Checking libraries
2024-04-13 19:26:12,844:INFO:System:
2024-04-13 19:26:12,844:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:26:12,844:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:26:12,844:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:26:12,844:INFO:PyCaret required dependencies:
2024-04-13 19:26:12,888:INFO:                 pip: 23.3.1
2024-04-13 19:26:12,888:INFO:          setuptools: 68.2.2
2024-04-13 19:26:12,888:INFO:             pycaret: 3.3.0
2024-04-13 19:26:12,888:INFO:             IPython: 8.23.0
2024-04-13 19:26:12,888:INFO:          ipywidgets: 8.1.2
2024-04-13 19:26:12,888:INFO:                tqdm: 4.66.2
2024-04-13 19:26:12,888:INFO:               numpy: 1.26.4
2024-04-13 19:26:12,888:INFO:              pandas: 2.1.4
2024-04-13 19:26:12,888:INFO:              jinja2: 3.1.3
2024-04-13 19:26:12,888:INFO:               scipy: 1.11.4
2024-04-13 19:26:12,888:INFO:              joblib: 1.3.0
2024-04-13 19:26:12,888:INFO:             sklearn: 1.4.2
2024-04-13 19:26:12,888:INFO:                pyod: 1.1.3
2024-04-13 19:26:12,888:INFO:            imblearn: 0.12.2
2024-04-13 19:26:12,888:INFO:   category_encoders: 2.6.3
2024-04-13 19:26:12,888:INFO:            lightgbm: 4.3.0
2024-04-13 19:26:12,888:INFO:               numba: 0.59.1
2024-04-13 19:26:12,888:INFO:            requests: 2.31.0
2024-04-13 19:26:12,888:INFO:          matplotlib: 3.7.5
2024-04-13 19:26:12,888:INFO:          scikitplot: 0.3.7
2024-04-13 19:26:12,888:INFO:         yellowbrick: 1.5
2024-04-13 19:26:12,888:INFO:              plotly: 5.20.0
2024-04-13 19:26:12,888:INFO:    plotly-resampler: Not installed
2024-04-13 19:26:12,888:INFO:             kaleido: 0.2.1
2024-04-13 19:26:12,888:INFO:           schemdraw: 0.15
2024-04-13 19:26:12,888:INFO:         statsmodels: 0.14.1
2024-04-13 19:26:12,888:INFO:              sktime: 0.28.0
2024-04-13 19:26:12,888:INFO:               tbats: 1.1.3
2024-04-13 19:26:12,888:INFO:            pmdarima: 2.0.4
2024-04-13 19:26:12,888:INFO:              psutil: 5.9.8
2024-04-13 19:26:12,889:INFO:          markupsafe: 2.1.5
2024-04-13 19:26:12,889:INFO:             pickle5: Not installed
2024-04-13 19:26:12,889:INFO:         cloudpickle: 3.0.0
2024-04-13 19:26:12,889:INFO:         deprecation: 2.1.0
2024-04-13 19:26:12,889:INFO:              xxhash: 3.4.1
2024-04-13 19:26:12,889:INFO:           wurlitzer: Not installed
2024-04-13 19:26:12,889:INFO:PyCaret optional dependencies:
2024-04-13 19:26:12,897:INFO:                shap: Not installed
2024-04-13 19:26:12,897:INFO:           interpret: Not installed
2024-04-13 19:26:12,897:INFO:                umap: Not installed
2024-04-13 19:26:12,897:INFO:     ydata_profiling: Not installed
2024-04-13 19:26:12,897:INFO:  explainerdashboard: Not installed
2024-04-13 19:26:12,897:INFO:             autoviz: Not installed
2024-04-13 19:26:12,897:INFO:           fairlearn: Not installed
2024-04-13 19:26:12,897:INFO:          deepchecks: Not installed
2024-04-13 19:26:12,897:INFO:             xgboost: Not installed
2024-04-13 19:26:12,897:INFO:            catboost: Not installed
2024-04-13 19:26:12,897:INFO:              kmodes: Not installed
2024-04-13 19:26:12,898:INFO:             mlxtend: Not installed
2024-04-13 19:26:12,898:INFO:       statsforecast: Not installed
2024-04-13 19:26:12,898:INFO:        tune_sklearn: Not installed
2024-04-13 19:26:12,898:INFO:                 ray: Not installed
2024-04-13 19:26:12,898:INFO:            hyperopt: Not installed
2024-04-13 19:26:12,898:INFO:              optuna: Not installed
2024-04-13 19:26:12,898:INFO:               skopt: Not installed
2024-04-13 19:26:12,898:INFO:              mlflow: 2.11.3
2024-04-13 19:26:12,898:INFO:              gradio: Not installed
2024-04-13 19:26:12,898:INFO:             fastapi: Not installed
2024-04-13 19:26:12,898:INFO:             uvicorn: Not installed
2024-04-13 19:26:12,898:INFO:              m2cgen: Not installed
2024-04-13 19:26:12,898:INFO:           evidently: Not installed
2024-04-13 19:26:12,898:INFO:               fugue: Not installed
2024-04-13 19:26:12,898:INFO:           streamlit: Not installed
2024-04-13 19:26:12,898:INFO:             prophet: Not installed
2024-04-13 19:26:12,898:INFO:None
2024-04-13 19:26:12,898:INFO:Set up data.
2024-04-13 19:26:12,903:INFO:Set up folding strategy.
2024-04-13 19:26:12,903:INFO:Set up train/test split.
2024-04-13 19:26:12,903:INFO:Set up data.
2024-04-13 19:26:12,906:INFO:Set up index.
2024-04-13 19:26:12,906:INFO:Assigning column types.
2024-04-13 19:26:12,909:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:26:12,942:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:26:12,944:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:26:12,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:12,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,002:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:26:13,002:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:26:13,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,024:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:26:13,057:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:26:13,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,112:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:26:13,132:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,132:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,132:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:26:13,186:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,186:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:26:13,241:INFO:Preparing preprocessing pipeline...
2024-04-13 19:26:13,242:INFO:Set up label encoding.
2024-04-13 19:26:13,242:INFO:Set up simple imputation.
2024-04-13 19:26:13,242:INFO:Set up feature normalization.
2024-04-13 19:26:13,268:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:26:13,272:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:26:13,273:INFO:Creating final display dataframe.
2024-04-13 19:27:00,466:INFO:PyCaret ClassificationExperiment
2024-04-13 19:27:00,466:INFO:Logging name: clf-default-name
2024-04-13 19:27:00,466:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:27:00,466:INFO:version 3.3.0
2024-04-13 19:27:00,466:INFO:Initializing setup()
2024-04-13 19:27:00,466:INFO:self.USI: 0772
2024-04-13 19:27:00,466:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:27:00,466:INFO:Checking environment
2024-04-13 19:27:00,466:INFO:python_version: 3.10.14
2024-04-13 19:27:00,466:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:27:00,466:INFO:machine: AMD64
2024-04-13 19:27:00,466:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:27:00,469:INFO:Memory: svmem(total=34280943616, available=25713049600, percent=25.0, used=8567894016, free=25713049600)
2024-04-13 19:27:00,469:INFO:Physical Core: 8
2024-04-13 19:27:00,469:INFO:Logical Core: 16
2024-04-13 19:27:00,469:INFO:Checking libraries
2024-04-13 19:27:00,469:INFO:System:
2024-04-13 19:27:00,469:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:27:00,469:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:27:00,469:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:27:00,470:INFO:PyCaret required dependencies:
2024-04-13 19:27:00,470:INFO:                 pip: 23.3.1
2024-04-13 19:27:00,470:INFO:          setuptools: 68.2.2
2024-04-13 19:27:00,470:INFO:             pycaret: 3.3.0
2024-04-13 19:27:00,470:INFO:             IPython: 8.23.0
2024-04-13 19:27:00,470:INFO:          ipywidgets: 8.1.2
2024-04-13 19:27:00,470:INFO:                tqdm: 4.66.2
2024-04-13 19:27:00,470:INFO:               numpy: 1.26.4
2024-04-13 19:27:00,470:INFO:              pandas: 2.1.4
2024-04-13 19:27:00,470:INFO:              jinja2: 3.1.3
2024-04-13 19:27:00,470:INFO:               scipy: 1.11.4
2024-04-13 19:27:00,470:INFO:              joblib: 1.3.0
2024-04-13 19:27:00,470:INFO:             sklearn: 1.4.2
2024-04-13 19:27:00,470:INFO:                pyod: 1.1.3
2024-04-13 19:27:00,470:INFO:            imblearn: 0.12.2
2024-04-13 19:27:00,470:INFO:   category_encoders: 2.6.3
2024-04-13 19:27:00,470:INFO:            lightgbm: 4.3.0
2024-04-13 19:27:00,470:INFO:               numba: 0.59.1
2024-04-13 19:27:00,470:INFO:            requests: 2.31.0
2024-04-13 19:27:00,470:INFO:          matplotlib: 3.7.5
2024-04-13 19:27:00,470:INFO:          scikitplot: 0.3.7
2024-04-13 19:27:00,470:INFO:         yellowbrick: 1.5
2024-04-13 19:27:00,470:INFO:              plotly: 5.20.0
2024-04-13 19:27:00,470:INFO:    plotly-resampler: Not installed
2024-04-13 19:27:00,470:INFO:             kaleido: 0.2.1
2024-04-13 19:27:00,470:INFO:           schemdraw: 0.15
2024-04-13 19:27:00,470:INFO:         statsmodels: 0.14.1
2024-04-13 19:27:00,470:INFO:              sktime: 0.28.0
2024-04-13 19:27:00,470:INFO:               tbats: 1.1.3
2024-04-13 19:27:00,470:INFO:            pmdarima: 2.0.4
2024-04-13 19:27:00,470:INFO:              psutil: 5.9.8
2024-04-13 19:27:00,470:INFO:          markupsafe: 2.1.5
2024-04-13 19:27:00,470:INFO:             pickle5: Not installed
2024-04-13 19:27:00,471:INFO:         cloudpickle: 3.0.0
2024-04-13 19:27:00,471:INFO:         deprecation: 2.1.0
2024-04-13 19:27:00,471:INFO:              xxhash: 3.4.1
2024-04-13 19:27:00,471:INFO:           wurlitzer: Not installed
2024-04-13 19:27:00,471:INFO:PyCaret optional dependencies:
2024-04-13 19:27:00,471:INFO:                shap: Not installed
2024-04-13 19:27:00,471:INFO:           interpret: Not installed
2024-04-13 19:27:00,471:INFO:                umap: Not installed
2024-04-13 19:27:00,471:INFO:     ydata_profiling: Not installed
2024-04-13 19:27:00,471:INFO:  explainerdashboard: Not installed
2024-04-13 19:27:00,471:INFO:             autoviz: Not installed
2024-04-13 19:27:00,471:INFO:           fairlearn: Not installed
2024-04-13 19:27:00,471:INFO:          deepchecks: Not installed
2024-04-13 19:27:00,471:INFO:             xgboost: Not installed
2024-04-13 19:27:00,471:INFO:            catboost: Not installed
2024-04-13 19:27:00,471:INFO:              kmodes: Not installed
2024-04-13 19:27:00,471:INFO:             mlxtend: Not installed
2024-04-13 19:27:00,471:INFO:       statsforecast: Not installed
2024-04-13 19:27:00,471:INFO:        tune_sklearn: Not installed
2024-04-13 19:27:00,471:INFO:                 ray: Not installed
2024-04-13 19:27:00,471:INFO:            hyperopt: Not installed
2024-04-13 19:27:00,471:INFO:              optuna: Not installed
2024-04-13 19:27:00,471:INFO:               skopt: Not installed
2024-04-13 19:27:00,471:INFO:              mlflow: 2.11.3
2024-04-13 19:27:00,471:INFO:              gradio: Not installed
2024-04-13 19:27:00,471:INFO:             fastapi: Not installed
2024-04-13 19:27:00,471:INFO:             uvicorn: Not installed
2024-04-13 19:27:00,471:INFO:              m2cgen: Not installed
2024-04-13 19:27:00,471:INFO:           evidently: Not installed
2024-04-13 19:27:00,471:INFO:               fugue: Not installed
2024-04-13 19:27:00,471:INFO:           streamlit: Not installed
2024-04-13 19:27:00,471:INFO:             prophet: Not installed
2024-04-13 19:27:00,472:INFO:None
2024-04-13 19:27:00,472:INFO:Set up data.
2024-04-13 19:27:00,475:INFO:Set up folding strategy.
2024-04-13 19:27:00,475:INFO:Set up train/test split.
2024-04-13 19:27:00,475:INFO:Set up data.
2024-04-13 19:27:00,478:INFO:Set up index.
2024-04-13 19:27:00,478:INFO:Assigning column types.
2024-04-13 19:27:00,481:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:27:00,514:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:27:00,515:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:27:00,535:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,568:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:27:00,569:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:27:00,590:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,590:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:27:00,624:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:27:00,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,678:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:27:00,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,699:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:27:00,752:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:27:00,807:INFO:Preparing preprocessing pipeline...
2024-04-13 19:27:00,808:INFO:Set up label encoding.
2024-04-13 19:27:00,808:INFO:Set up simple imputation.
2024-04-13 19:27:00,808:INFO:Set up feature normalization.
2024-04-13 19:27:00,834:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:27:00,838:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:27:00,838:INFO:Creating final display dataframe.
2024-04-13 19:28:12,759:INFO:PyCaret ClassificationExperiment
2024-04-13 19:28:12,759:INFO:Logging name: clf-default-name
2024-04-13 19:28:12,759:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:28:12,759:INFO:version 3.3.0
2024-04-13 19:28:12,759:INFO:Initializing setup()
2024-04-13 19:28:12,759:INFO:self.USI: 6e34
2024-04-13 19:28:12,759:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:28:12,759:INFO:Checking environment
2024-04-13 19:28:12,759:INFO:python_version: 3.10.14
2024-04-13 19:28:12,760:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:28:12,760:INFO:machine: AMD64
2024-04-13 19:28:12,760:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:28:12,762:INFO:Memory: svmem(total=34280943616, available=25539715072, percent=25.5, used=8741228544, free=25539715072)
2024-04-13 19:28:12,762:INFO:Physical Core: 8
2024-04-13 19:28:12,762:INFO:Logical Core: 16
2024-04-13 19:28:12,762:INFO:Checking libraries
2024-04-13 19:28:12,762:INFO:System:
2024-04-13 19:28:12,762:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:28:12,762:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:28:12,762:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:28:12,762:INFO:PyCaret required dependencies:
2024-04-13 19:28:12,762:INFO:                 pip: 23.3.1
2024-04-13 19:28:12,762:INFO:          setuptools: 68.2.2
2024-04-13 19:28:12,762:INFO:             pycaret: 3.3.0
2024-04-13 19:28:12,763:INFO:             IPython: 8.23.0
2024-04-13 19:28:12,763:INFO:          ipywidgets: 8.1.2
2024-04-13 19:28:12,763:INFO:                tqdm: 4.66.2
2024-04-13 19:28:12,763:INFO:               numpy: 1.26.4
2024-04-13 19:28:12,763:INFO:              pandas: 2.1.4
2024-04-13 19:28:12,763:INFO:              jinja2: 3.1.3
2024-04-13 19:28:12,763:INFO:               scipy: 1.11.4
2024-04-13 19:28:12,763:INFO:              joblib: 1.3.0
2024-04-13 19:28:12,763:INFO:             sklearn: 1.4.2
2024-04-13 19:28:12,763:INFO:                pyod: 1.1.3
2024-04-13 19:28:12,763:INFO:            imblearn: 0.12.2
2024-04-13 19:28:12,763:INFO:   category_encoders: 2.6.3
2024-04-13 19:28:12,763:INFO:            lightgbm: 4.3.0
2024-04-13 19:28:12,763:INFO:               numba: 0.59.1
2024-04-13 19:28:12,763:INFO:            requests: 2.31.0
2024-04-13 19:28:12,763:INFO:          matplotlib: 3.7.5
2024-04-13 19:28:12,763:INFO:          scikitplot: 0.3.7
2024-04-13 19:28:12,763:INFO:         yellowbrick: 1.5
2024-04-13 19:28:12,763:INFO:              plotly: 5.20.0
2024-04-13 19:28:12,763:INFO:    plotly-resampler: Not installed
2024-04-13 19:28:12,763:INFO:             kaleido: 0.2.1
2024-04-13 19:28:12,763:INFO:           schemdraw: 0.15
2024-04-13 19:28:12,763:INFO:         statsmodels: 0.14.1
2024-04-13 19:28:12,763:INFO:              sktime: 0.28.0
2024-04-13 19:28:12,763:INFO:               tbats: 1.1.3
2024-04-13 19:28:12,763:INFO:            pmdarima: 2.0.4
2024-04-13 19:28:12,763:INFO:              psutil: 5.9.8
2024-04-13 19:28:12,763:INFO:          markupsafe: 2.1.5
2024-04-13 19:28:12,763:INFO:             pickle5: Not installed
2024-04-13 19:28:12,763:INFO:         cloudpickle: 3.0.0
2024-04-13 19:28:12,763:INFO:         deprecation: 2.1.0
2024-04-13 19:28:12,763:INFO:              xxhash: 3.4.1
2024-04-13 19:28:12,763:INFO:           wurlitzer: Not installed
2024-04-13 19:28:12,763:INFO:PyCaret optional dependencies:
2024-04-13 19:28:12,763:INFO:                shap: Not installed
2024-04-13 19:28:12,764:INFO:           interpret: Not installed
2024-04-13 19:28:12,764:INFO:                umap: Not installed
2024-04-13 19:28:12,764:INFO:     ydata_profiling: Not installed
2024-04-13 19:28:12,764:INFO:  explainerdashboard: Not installed
2024-04-13 19:28:12,764:INFO:             autoviz: Not installed
2024-04-13 19:28:12,764:INFO:           fairlearn: Not installed
2024-04-13 19:28:12,764:INFO:          deepchecks: Not installed
2024-04-13 19:28:12,764:INFO:             xgboost: Not installed
2024-04-13 19:28:12,764:INFO:            catboost: Not installed
2024-04-13 19:28:12,764:INFO:              kmodes: Not installed
2024-04-13 19:28:12,764:INFO:             mlxtend: Not installed
2024-04-13 19:28:12,764:INFO:       statsforecast: Not installed
2024-04-13 19:28:12,764:INFO:        tune_sklearn: Not installed
2024-04-13 19:28:12,764:INFO:                 ray: Not installed
2024-04-13 19:28:12,764:INFO:            hyperopt: Not installed
2024-04-13 19:28:12,764:INFO:              optuna: Not installed
2024-04-13 19:28:12,764:INFO:               skopt: Not installed
2024-04-13 19:28:12,764:INFO:              mlflow: 2.11.3
2024-04-13 19:28:12,764:INFO:              gradio: Not installed
2024-04-13 19:28:12,764:INFO:             fastapi: Not installed
2024-04-13 19:28:12,764:INFO:             uvicorn: Not installed
2024-04-13 19:28:12,764:INFO:              m2cgen: Not installed
2024-04-13 19:28:12,764:INFO:           evidently: Not installed
2024-04-13 19:28:12,764:INFO:               fugue: Not installed
2024-04-13 19:28:12,764:INFO:           streamlit: Not installed
2024-04-13 19:28:12,764:INFO:             prophet: Not installed
2024-04-13 19:28:12,764:INFO:None
2024-04-13 19:28:12,764:INFO:Set up data.
2024-04-13 19:28:12,768:INFO:Set up folding strategy.
2024-04-13 19:28:12,768:INFO:Set up train/test split.
2024-04-13 19:28:12,768:INFO:Set up data.
2024-04-13 19:28:12,770:INFO:Set up index.
2024-04-13 19:28:12,771:INFO:Assigning column types.
2024-04-13 19:28:12,774:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:28:12,807:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:28:12,808:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:28:12,828:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:12,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:12,861:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:28:12,862:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:28:12,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:12,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:12,882:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:28:12,916:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:28:12,936:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:12,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:12,971:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:28:12,991:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:12,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:12,991:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:28:13,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:13,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:13,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:13,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:13,100:INFO:Preparing preprocessing pipeline...
2024-04-13 19:28:13,102:INFO:Set up label encoding.
2024-04-13 19:28:13,102:INFO:Set up simple imputation.
2024-04-13 19:28:13,102:INFO:Set up feature normalization.
2024-04-13 19:28:13,126:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:28:13,130:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:28:13,130:INFO:Creating final display dataframe.
2024-04-13 19:28:36,726:INFO:PyCaret ClassificationExperiment
2024-04-13 19:28:36,726:INFO:Logging name: clf-default-name
2024-04-13 19:28:36,726:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:28:36,726:INFO:version 3.3.0
2024-04-13 19:28:36,726:INFO:Initializing setup()
2024-04-13 19:28:36,726:INFO:self.USI: 057a
2024-04-13 19:28:36,726:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:28:36,726:INFO:Checking environment
2024-04-13 19:28:36,726:INFO:python_version: 3.10.14
2024-04-13 19:28:36,726:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:28:36,726:INFO:machine: AMD64
2024-04-13 19:28:36,726:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:28:36,729:INFO:Memory: svmem(total=34280943616, available=25535397888, percent=25.5, used=8745545728, free=25535397888)
2024-04-13 19:28:36,729:INFO:Physical Core: 8
2024-04-13 19:28:36,729:INFO:Logical Core: 16
2024-04-13 19:28:36,729:INFO:Checking libraries
2024-04-13 19:28:36,729:INFO:System:
2024-04-13 19:28:36,729:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:28:36,729:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:28:36,729:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:28:36,729:INFO:PyCaret required dependencies:
2024-04-13 19:28:36,729:INFO:                 pip: 23.3.1
2024-04-13 19:28:36,729:INFO:          setuptools: 68.2.2
2024-04-13 19:28:36,729:INFO:             pycaret: 3.3.0
2024-04-13 19:28:36,729:INFO:             IPython: 8.23.0
2024-04-13 19:28:36,730:INFO:          ipywidgets: 8.1.2
2024-04-13 19:28:36,730:INFO:                tqdm: 4.66.2
2024-04-13 19:28:36,730:INFO:               numpy: 1.26.4
2024-04-13 19:28:36,730:INFO:              pandas: 2.1.4
2024-04-13 19:28:36,730:INFO:              jinja2: 3.1.3
2024-04-13 19:28:36,730:INFO:               scipy: 1.11.4
2024-04-13 19:28:36,730:INFO:              joblib: 1.3.0
2024-04-13 19:28:36,730:INFO:             sklearn: 1.4.2
2024-04-13 19:28:36,730:INFO:                pyod: 1.1.3
2024-04-13 19:28:36,730:INFO:            imblearn: 0.12.2
2024-04-13 19:28:36,730:INFO:   category_encoders: 2.6.3
2024-04-13 19:28:36,730:INFO:            lightgbm: 4.3.0
2024-04-13 19:28:36,730:INFO:               numba: 0.59.1
2024-04-13 19:28:36,730:INFO:            requests: 2.31.0
2024-04-13 19:28:36,730:INFO:          matplotlib: 3.7.5
2024-04-13 19:28:36,730:INFO:          scikitplot: 0.3.7
2024-04-13 19:28:36,730:INFO:         yellowbrick: 1.5
2024-04-13 19:28:36,730:INFO:              plotly: 5.20.0
2024-04-13 19:28:36,730:INFO:    plotly-resampler: Not installed
2024-04-13 19:28:36,730:INFO:             kaleido: 0.2.1
2024-04-13 19:28:36,730:INFO:           schemdraw: 0.15
2024-04-13 19:28:36,730:INFO:         statsmodels: 0.14.1
2024-04-13 19:28:36,730:INFO:              sktime: 0.28.0
2024-04-13 19:28:36,730:INFO:               tbats: 1.1.3
2024-04-13 19:28:36,730:INFO:            pmdarima: 2.0.4
2024-04-13 19:28:36,730:INFO:              psutil: 5.9.8
2024-04-13 19:28:36,730:INFO:          markupsafe: 2.1.5
2024-04-13 19:28:36,730:INFO:             pickle5: Not installed
2024-04-13 19:28:36,730:INFO:         cloudpickle: 3.0.0
2024-04-13 19:28:36,730:INFO:         deprecation: 2.1.0
2024-04-13 19:28:36,730:INFO:              xxhash: 3.4.1
2024-04-13 19:28:36,730:INFO:           wurlitzer: Not installed
2024-04-13 19:28:36,730:INFO:PyCaret optional dependencies:
2024-04-13 19:28:36,731:INFO:                shap: Not installed
2024-04-13 19:28:36,731:INFO:           interpret: Not installed
2024-04-13 19:28:36,731:INFO:                umap: Not installed
2024-04-13 19:28:36,731:INFO:     ydata_profiling: Not installed
2024-04-13 19:28:36,731:INFO:  explainerdashboard: Not installed
2024-04-13 19:28:36,731:INFO:             autoviz: Not installed
2024-04-13 19:28:36,731:INFO:           fairlearn: Not installed
2024-04-13 19:28:36,731:INFO:          deepchecks: Not installed
2024-04-13 19:28:36,731:INFO:             xgboost: Not installed
2024-04-13 19:28:36,731:INFO:            catboost: Not installed
2024-04-13 19:28:36,731:INFO:              kmodes: Not installed
2024-04-13 19:28:36,731:INFO:             mlxtend: Not installed
2024-04-13 19:28:36,731:INFO:       statsforecast: Not installed
2024-04-13 19:28:36,731:INFO:        tune_sklearn: Not installed
2024-04-13 19:28:36,731:INFO:                 ray: Not installed
2024-04-13 19:28:36,731:INFO:            hyperopt: Not installed
2024-04-13 19:28:36,731:INFO:              optuna: Not installed
2024-04-13 19:28:36,731:INFO:               skopt: Not installed
2024-04-13 19:28:36,731:INFO:              mlflow: 2.11.3
2024-04-13 19:28:36,731:INFO:              gradio: Not installed
2024-04-13 19:28:36,731:INFO:             fastapi: Not installed
2024-04-13 19:28:36,731:INFO:             uvicorn: Not installed
2024-04-13 19:28:36,731:INFO:              m2cgen: Not installed
2024-04-13 19:28:36,731:INFO:           evidently: Not installed
2024-04-13 19:28:36,731:INFO:               fugue: Not installed
2024-04-13 19:28:36,731:INFO:           streamlit: Not installed
2024-04-13 19:28:36,731:INFO:             prophet: Not installed
2024-04-13 19:28:36,731:INFO:None
2024-04-13 19:28:36,731:INFO:Set up data.
2024-04-13 19:28:36,735:INFO:Set up folding strategy.
2024-04-13 19:28:36,736:INFO:Set up train/test split.
2024-04-13 19:28:36,736:INFO:Set up data.
2024-04-13 19:28:36,738:INFO:Set up index.
2024-04-13 19:28:36,739:INFO:Assigning column types.
2024-04-13 19:28:36,742:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:28:36,775:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:28:36,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:28:36,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:36,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:36,829:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:28:36,830:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:28:36,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:36,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:36,852:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:28:36,890:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:28:36,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:36,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:36,945:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:28:36,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:36,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:36,966:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:28:37,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:37,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:37,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:37,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:37,076:INFO:Preparing preprocessing pipeline...
2024-04-13 19:28:37,077:INFO:Set up label encoding.
2024-04-13 19:28:37,077:INFO:Set up simple imputation.
2024-04-13 19:28:37,077:INFO:Set up feature normalization.
2024-04-13 19:28:37,102:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:28:37,106:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:28:37,106:INFO:Creating final display dataframe.
2024-04-13 19:28:37,180:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                5982  
1                                       shot_distance  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                          (20285, 7)  
5                                          (20285, 7)  
6                                          (16228, 7)  
7                                           (4057, 7)  
8                                                   6  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               057a  
2024-04-13 19:28:37,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:37,238:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:37,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:37,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:28:37,293:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:28:37,294:INFO:setup() successfully completed in 0.57s...............
2024-04-13 19:28:37,294:INFO:Initializing compare_models()
2024-04-13 19:28:37,294:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F6E00>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F6E00>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:28:37,294:INFO:Checking exceptions
2024-04-13 19:28:37,298:INFO:Preparing display monitor
2024-04-13 19:28:37,313:INFO:Initializing Logistic Regression
2024-04-13 19:28:37,314:INFO:Total runtime is 1.6673405965169272e-05 minutes
2024-04-13 19:28:37,316:INFO:SubProcess create_model() called ==================================
2024-04-13 19:28:37,316:INFO:Initializing create_model()
2024-04-13 19:28:37,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F6E00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC65D8D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:28:37,316:INFO:Checking exceptions
2024-04-13 19:28:37,316:INFO:Importing libraries
2024-04-13 19:28:37,316:INFO:Copying training dataset
2024-04-13 19:28:37,322:INFO:Defining folds
2024-04-13 19:28:37,322:INFO:Declaring metric variables
2024-04-13 19:28:37,324:INFO:Importing untrained model
2024-04-13 19:28:37,327:INFO:Logistic Regression Imported successfully
2024-04-13 19:28:37,331:INFO:Starting cross validation
2024-04-13 19:28:37,332:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:28:37,339:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:28:40,939:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:40,941:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:40,942:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:40,943:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:40,944:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:40,946:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:40,947:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:40,961:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:28:40,965:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:28:40,965:INFO:Initializing create_model()
2024-04-13 19:28:40,965:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F6E00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC65D8D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:28:40,965:INFO:Checking exceptions
2024-04-13 19:28:40,965:INFO:Importing libraries
2024-04-13 19:28:40,965:INFO:Copying training dataset
2024-04-13 19:28:40,972:INFO:Defining folds
2024-04-13 19:28:40,972:INFO:Declaring metric variables
2024-04-13 19:28:40,974:INFO:Importing untrained model
2024-04-13 19:28:40,977:INFO:Logistic Regression Imported successfully
2024-04-13 19:28:40,981:INFO:Starting cross validation
2024-04-13 19:28:40,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:28:40,985:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:28:44,457:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:44,461:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,467:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,470:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,472:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,474:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,574:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:44,576:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,578:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,579:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,579:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:44,581:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,582:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,584:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,585:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,586:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,588:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,589:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,597:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:44,599:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,600:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,601:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,602:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,603:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,604:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,606:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:44,606:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:44,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,608:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,609:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,609:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,610:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,610:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,611:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,611:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,612:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,612:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:44,613:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,613:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:44,687:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-13 19:28:44,688:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:28:44,688:INFO:Initializing Decision Tree Classifier
2024-04-13 19:28:44,688:INFO:Total runtime is 0.12291762034098308 minutes
2024-04-13 19:28:44,691:INFO:SubProcess create_model() called ==================================
2024-04-13 19:28:44,691:INFO:Initializing create_model()
2024-04-13 19:28:44,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F6E00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC65D8D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:28:44,692:INFO:Checking exceptions
2024-04-13 19:28:44,692:INFO:Importing libraries
2024-04-13 19:28:44,692:INFO:Copying training dataset
2024-04-13 19:28:44,699:INFO:Defining folds
2024-04-13 19:28:44,699:INFO:Declaring metric variables
2024-04-13 19:28:44,702:INFO:Importing untrained model
2024-04-13 19:28:44,704:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:28:44,709:INFO:Starting cross validation
2024-04-13 19:28:44,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:28:44,713:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:28:47,195:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:47,198:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,200:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,202:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,203:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,205:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,207:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,234:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:47,237:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,239:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,242:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,243:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,245:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,246:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,263:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:47,263:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:47,265:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,265:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,266:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,266:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,268:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,268:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,269:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,269:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,270:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,270:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,271:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,272:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,275:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:47,275:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:47,277:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,278:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,279:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,280:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,280:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,281:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,282:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,283:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,284:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,284:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,285:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,285:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:47,285:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,285:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:47,288:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,288:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,289:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,290:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,290:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,291:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,292:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,293:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,293:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,294:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,294:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:47,295:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:47,500:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:28:47,501:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:28:47,501:INFO:Initializing create_model()
2024-04-13 19:28:47,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F6E00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC65D8D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:28:47,501:INFO:Checking exceptions
2024-04-13 19:28:47,501:INFO:Importing libraries
2024-04-13 19:28:47,501:INFO:Copying training dataset
2024-04-13 19:28:47,508:INFO:Defining folds
2024-04-13 19:28:47,508:INFO:Declaring metric variables
2024-04-13 19:28:47,511:INFO:Importing untrained model
2024-04-13 19:28:47,514:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:28:47,518:INFO:Starting cross validation
2024-04-13 19:28:47,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:28:47,523:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:28:50,019:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:50,021:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,022:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,023:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,024:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,026:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,027:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,049:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:50,052:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,054:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,056:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,057:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,059:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,061:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,080:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:50,082:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:50,083:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,085:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,085:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,086:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,087:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:50,087:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,087:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,088:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:50,089:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,089:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,090:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,091:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,091:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,092:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,093:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,093:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,094:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,095:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,096:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:50,096:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,097:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,098:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,099:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,101:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,101:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:28:50,102:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,103:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,104:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,104:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,105:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,106:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,107:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,109:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:28:50,110:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:28:50,268:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-04-13 19:28:50,268:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:28:50,277:INFO:_master_model_container: 0
2024-04-13 19:28:50,277:INFO:_display_container: 2
2024-04-13 19:28:50,278:INFO:[]
2024-04-13 19:28:50,278:INFO:compare_models() successfully completed......................................
2024-04-13 19:30:02,804:INFO:PyCaret ClassificationExperiment
2024-04-13 19:30:02,804:INFO:Logging name: clf-default-name
2024-04-13 19:30:02,804:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:30:02,804:INFO:version 3.3.0
2024-04-13 19:30:02,804:INFO:Initializing setup()
2024-04-13 19:30:02,804:INFO:self.USI: c268
2024-04-13 19:30:02,804:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:30:02,804:INFO:Checking environment
2024-04-13 19:30:02,804:INFO:python_version: 3.10.14
2024-04-13 19:30:02,804:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:30:02,804:INFO:machine: AMD64
2024-04-13 19:30:02,804:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:30:02,807:INFO:Memory: svmem(total=34280943616, available=25513119744, percent=25.6, used=8767823872, free=25513119744)
2024-04-13 19:30:02,807:INFO:Physical Core: 8
2024-04-13 19:30:02,807:INFO:Logical Core: 16
2024-04-13 19:30:02,808:INFO:Checking libraries
2024-04-13 19:30:02,808:INFO:System:
2024-04-13 19:30:02,808:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:30:02,808:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:30:02,808:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:30:02,808:INFO:PyCaret required dependencies:
2024-04-13 19:30:02,808:INFO:                 pip: 23.3.1
2024-04-13 19:30:02,808:INFO:          setuptools: 68.2.2
2024-04-13 19:30:02,808:INFO:             pycaret: 3.3.0
2024-04-13 19:30:02,808:INFO:             IPython: 8.23.0
2024-04-13 19:30:02,808:INFO:          ipywidgets: 8.1.2
2024-04-13 19:30:02,808:INFO:                tqdm: 4.66.2
2024-04-13 19:30:02,808:INFO:               numpy: 1.26.4
2024-04-13 19:30:02,808:INFO:              pandas: 2.1.4
2024-04-13 19:30:02,808:INFO:              jinja2: 3.1.3
2024-04-13 19:30:02,808:INFO:               scipy: 1.11.4
2024-04-13 19:30:02,808:INFO:              joblib: 1.3.0
2024-04-13 19:30:02,808:INFO:             sklearn: 1.4.2
2024-04-13 19:30:02,808:INFO:                pyod: 1.1.3
2024-04-13 19:30:02,808:INFO:            imblearn: 0.12.2
2024-04-13 19:30:02,808:INFO:   category_encoders: 2.6.3
2024-04-13 19:30:02,808:INFO:            lightgbm: 4.3.0
2024-04-13 19:30:02,808:INFO:               numba: 0.59.1
2024-04-13 19:30:02,808:INFO:            requests: 2.31.0
2024-04-13 19:30:02,808:INFO:          matplotlib: 3.7.5
2024-04-13 19:30:02,808:INFO:          scikitplot: 0.3.7
2024-04-13 19:30:02,808:INFO:         yellowbrick: 1.5
2024-04-13 19:30:02,808:INFO:              plotly: 5.20.0
2024-04-13 19:30:02,808:INFO:    plotly-resampler: Not installed
2024-04-13 19:30:02,808:INFO:             kaleido: 0.2.1
2024-04-13 19:30:02,808:INFO:           schemdraw: 0.15
2024-04-13 19:30:02,808:INFO:         statsmodels: 0.14.1
2024-04-13 19:30:02,809:INFO:              sktime: 0.28.0
2024-04-13 19:30:02,809:INFO:               tbats: 1.1.3
2024-04-13 19:30:02,809:INFO:            pmdarima: 2.0.4
2024-04-13 19:30:02,809:INFO:              psutil: 5.9.8
2024-04-13 19:30:02,809:INFO:          markupsafe: 2.1.5
2024-04-13 19:30:02,809:INFO:             pickle5: Not installed
2024-04-13 19:30:02,809:INFO:         cloudpickle: 3.0.0
2024-04-13 19:30:02,809:INFO:         deprecation: 2.1.0
2024-04-13 19:30:02,809:INFO:              xxhash: 3.4.1
2024-04-13 19:30:02,809:INFO:           wurlitzer: Not installed
2024-04-13 19:30:02,809:INFO:PyCaret optional dependencies:
2024-04-13 19:30:02,809:INFO:                shap: Not installed
2024-04-13 19:30:02,809:INFO:           interpret: Not installed
2024-04-13 19:30:02,809:INFO:                umap: Not installed
2024-04-13 19:30:02,809:INFO:     ydata_profiling: Not installed
2024-04-13 19:30:02,809:INFO:  explainerdashboard: Not installed
2024-04-13 19:30:02,809:INFO:             autoviz: Not installed
2024-04-13 19:30:02,809:INFO:           fairlearn: Not installed
2024-04-13 19:30:02,809:INFO:          deepchecks: Not installed
2024-04-13 19:30:02,809:INFO:             xgboost: Not installed
2024-04-13 19:30:02,809:INFO:            catboost: Not installed
2024-04-13 19:30:02,809:INFO:              kmodes: Not installed
2024-04-13 19:30:02,809:INFO:             mlxtend: Not installed
2024-04-13 19:30:02,809:INFO:       statsforecast: Not installed
2024-04-13 19:30:02,809:INFO:        tune_sklearn: Not installed
2024-04-13 19:30:02,809:INFO:                 ray: Not installed
2024-04-13 19:30:02,809:INFO:            hyperopt: Not installed
2024-04-13 19:30:02,809:INFO:              optuna: Not installed
2024-04-13 19:30:02,809:INFO:               skopt: Not installed
2024-04-13 19:30:02,809:INFO:              mlflow: 2.11.3
2024-04-13 19:30:02,809:INFO:              gradio: Not installed
2024-04-13 19:30:02,809:INFO:             fastapi: Not installed
2024-04-13 19:30:02,810:INFO:             uvicorn: Not installed
2024-04-13 19:30:02,810:INFO:              m2cgen: Not installed
2024-04-13 19:30:02,810:INFO:           evidently: Not installed
2024-04-13 19:30:02,810:INFO:               fugue: Not installed
2024-04-13 19:30:02,810:INFO:           streamlit: Not installed
2024-04-13 19:30:02,810:INFO:             prophet: Not installed
2024-04-13 19:30:02,810:INFO:None
2024-04-13 19:30:02,810:INFO:Set up data.
2024-04-13 19:30:02,813:INFO:Set up folding strategy.
2024-04-13 19:30:02,813:INFO:Set up train/test split.
2024-04-13 19:30:02,813:INFO:Set up data.
2024-04-13 19:30:02,816:INFO:Set up index.
2024-04-13 19:30:02,816:INFO:Assigning column types.
2024-04-13 19:30:02,819:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:30:02,852:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:30:02,852:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:30:02,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:02,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:02,905:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:30:02,906:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:30:02,926:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:02,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:02,927:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:30:02,960:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:30:02,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:02,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,013:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:30:03,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,034:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:30:03,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,143:INFO:Preparing preprocessing pipeline...
2024-04-13 19:30:03,144:INFO:Set up label encoding.
2024-04-13 19:30:03,144:INFO:Set up simple imputation.
2024-04-13 19:30:03,144:INFO:Set up feature normalization.
2024-04-13 19:30:03,168:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:30:03,172:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:30:03,172:INFO:Creating final display dataframe.
2024-04-13 19:30:03,244:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                 914  
1                                       shot_distance  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                          (20285, 7)  
5                                          (20285, 7)  
6                                          (16228, 7)  
7                                           (4057, 7)  
8                                                   6  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               c268  
2024-04-13 19:30:03,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:30:03,359:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:30:03,359:INFO:setup() successfully completed in 0.56s...............
2024-04-13 19:30:03,360:INFO:Initializing compare_models()
2024-04-13 19:30:03,360:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F7520>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F7520>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:30:03,360:INFO:Checking exceptions
2024-04-13 19:30:03,364:INFO:Preparing display monitor
2024-04-13 19:30:03,378:INFO:Initializing Logistic Regression
2024-04-13 19:30:03,378:INFO:Total runtime is 0.0 minutes
2024-04-13 19:30:03,380:INFO:SubProcess create_model() called ==================================
2024-04-13 19:30:03,380:INFO:Initializing create_model()
2024-04-13 19:30:03,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F7520>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC879210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:30:03,381:INFO:Checking exceptions
2024-04-13 19:30:03,381:INFO:Importing libraries
2024-04-13 19:30:03,381:INFO:Copying training dataset
2024-04-13 19:30:03,387:INFO:Defining folds
2024-04-13 19:30:03,387:INFO:Declaring metric variables
2024-04-13 19:30:03,390:INFO:Importing untrained model
2024-04-13 19:30:03,392:INFO:Logistic Regression Imported successfully
2024-04-13 19:30:03,398:INFO:Starting cross validation
2024-04-13 19:30:03,399:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:30:03,405:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:30:06,891:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:06,897:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:06,899:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:06,902:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:06,906:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:06,908:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:06,910:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:06,936:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:06,939:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:06,941:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:06,942:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:06,944:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:06,946:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:06,947:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:07,069:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:07,071:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:07,072:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:07,073:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:07,074:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:07,076:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:07,077:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:07,110:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:30:07,111:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:30:07,111:INFO:Initializing create_model()
2024-04-13 19:30:07,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F7520>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC879210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:30:07,111:INFO:Checking exceptions
2024-04-13 19:30:07,112:INFO:Importing libraries
2024-04-13 19:30:07,112:INFO:Copying training dataset
2024-04-13 19:30:07,119:INFO:Defining folds
2024-04-13 19:30:07,119:INFO:Declaring metric variables
2024-04-13 19:30:07,121:INFO:Importing untrained model
2024-04-13 19:30:07,124:INFO:Logistic Regression Imported successfully
2024-04-13 19:30:07,128:INFO:Starting cross validation
2024-04-13 19:30:07,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:30:07,133:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:30:10,707:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:10,707:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,723:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,723:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,723:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,723:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,739:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,739:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:10,754:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,754:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,754:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,761:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,761:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,761:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,770:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:10,786:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,786:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,786:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,786:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,786:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,786:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,874:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:10,874:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,874:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,874:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,874:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,874:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:10,874:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:10,936:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-13 19:30:10,936:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:30:10,936:INFO:Initializing Decision Tree Classifier
2024-04-13 19:30:10,936:INFO:Total runtime is 0.1259738763173421 minutes
2024-04-13 19:30:10,952:INFO:SubProcess create_model() called ==================================
2024-04-13 19:30:10,952:INFO:Initializing create_model()
2024-04-13 19:30:10,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F7520>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC879210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:30:10,952:INFO:Checking exceptions
2024-04-13 19:30:10,952:INFO:Importing libraries
2024-04-13 19:30:10,952:INFO:Copying training dataset
2024-04-13 19:30:10,961:INFO:Defining folds
2024-04-13 19:30:10,961:INFO:Declaring metric variables
2024-04-13 19:30:10,965:INFO:Importing untrained model
2024-04-13 19:30:10,965:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:30:10,972:INFO:Starting cross validation
2024-04-13 19:30:10,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:30:10,973:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:30:13,527:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:13,529:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,530:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,532:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,533:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,534:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,535:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,538:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:13,541:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,542:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,543:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,544:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,545:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,546:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,559:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:13,561:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,562:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,565:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,566:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,568:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:13,568:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,569:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,570:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,570:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:13,571:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,571:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:13,572:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,573:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,573:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,574:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,575:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,575:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,576:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,576:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,577:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,577:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,578:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,578:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,580:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,581:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,582:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,583:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:13,586:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,587:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,589:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,590:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,591:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:13,592:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:13,719:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:30:13,719:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:30:13,719:INFO:Initializing create_model()
2024-04-13 19:30:13,720:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA0F7520>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC879210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:30:13,720:INFO:Checking exceptions
2024-04-13 19:30:13,720:INFO:Importing libraries
2024-04-13 19:30:13,720:INFO:Copying training dataset
2024-04-13 19:30:13,726:INFO:Defining folds
2024-04-13 19:30:13,726:INFO:Declaring metric variables
2024-04-13 19:30:13,729:INFO:Importing untrained model
2024-04-13 19:30:13,732:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:30:13,736:INFO:Starting cross validation
2024-04-13 19:30:13,737:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:30:13,741:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:30:16,173:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:16,173:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,173:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,173:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:16,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,204:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,204:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,204:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:16,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,282:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:16,282:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,282:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,282:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,282:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,282:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,282:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:30:16,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:30:16,463:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-04-13 19:30:16,464:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:30:16,473:INFO:_master_model_container: 0
2024-04-13 19:30:16,473:INFO:_display_container: 2
2024-04-13 19:30:16,473:INFO:[]
2024-04-13 19:30:16,473:INFO:compare_models() successfully completed......................................
2024-04-13 19:31:22,597:INFO:PyCaret ClassificationExperiment
2024-04-13 19:31:22,597:INFO:Logging name: clf-default-name
2024-04-13 19:31:22,597:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:31:22,597:INFO:version 3.3.0
2024-04-13 19:31:22,597:INFO:Initializing setup()
2024-04-13 19:31:22,597:INFO:self.USI: cf97
2024-04-13 19:31:22,597:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:31:22,597:INFO:Checking environment
2024-04-13 19:31:22,597:INFO:python_version: 3.10.14
2024-04-13 19:31:22,597:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:31:22,597:INFO:machine: AMD64
2024-04-13 19:31:22,597:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:31:22,597:INFO:Memory: svmem(total=34280943616, available=24850210816, percent=27.5, used=9430732800, free=24850210816)
2024-04-13 19:31:22,597:INFO:Physical Core: 8
2024-04-13 19:31:22,597:INFO:Logical Core: 16
2024-04-13 19:31:22,597:INFO:Checking libraries
2024-04-13 19:31:22,597:INFO:System:
2024-04-13 19:31:22,597:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:31:22,597:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:31:22,597:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:31:22,597:INFO:PyCaret required dependencies:
2024-04-13 19:31:22,597:INFO:                 pip: 23.3.1
2024-04-13 19:31:22,597:INFO:          setuptools: 68.2.2
2024-04-13 19:31:22,597:INFO:             pycaret: 3.3.0
2024-04-13 19:31:22,597:INFO:             IPython: 8.23.0
2024-04-13 19:31:22,597:INFO:          ipywidgets: 8.1.2
2024-04-13 19:31:22,597:INFO:                tqdm: 4.66.2
2024-04-13 19:31:22,597:INFO:               numpy: 1.26.4
2024-04-13 19:31:22,597:INFO:              pandas: 2.1.4
2024-04-13 19:31:22,597:INFO:              jinja2: 3.1.3
2024-04-13 19:31:22,597:INFO:               scipy: 1.11.4
2024-04-13 19:31:22,597:INFO:              joblib: 1.3.0
2024-04-13 19:31:22,597:INFO:             sklearn: 1.4.2
2024-04-13 19:31:22,597:INFO:                pyod: 1.1.3
2024-04-13 19:31:22,597:INFO:            imblearn: 0.12.2
2024-04-13 19:31:22,597:INFO:   category_encoders: 2.6.3
2024-04-13 19:31:22,597:INFO:            lightgbm: 4.3.0
2024-04-13 19:31:22,597:INFO:               numba: 0.59.1
2024-04-13 19:31:22,597:INFO:            requests: 2.31.0
2024-04-13 19:31:22,597:INFO:          matplotlib: 3.7.5
2024-04-13 19:31:22,597:INFO:          scikitplot: 0.3.7
2024-04-13 19:31:22,597:INFO:         yellowbrick: 1.5
2024-04-13 19:31:22,597:INFO:              plotly: 5.20.0
2024-04-13 19:31:22,597:INFO:    plotly-resampler: Not installed
2024-04-13 19:31:22,597:INFO:             kaleido: 0.2.1
2024-04-13 19:31:22,597:INFO:           schemdraw: 0.15
2024-04-13 19:31:22,597:INFO:         statsmodels: 0.14.1
2024-04-13 19:31:22,597:INFO:              sktime: 0.28.0
2024-04-13 19:31:22,597:INFO:               tbats: 1.1.3
2024-04-13 19:31:22,597:INFO:            pmdarima: 2.0.4
2024-04-13 19:31:22,597:INFO:              psutil: 5.9.8
2024-04-13 19:31:22,597:INFO:          markupsafe: 2.1.5
2024-04-13 19:31:22,597:INFO:             pickle5: Not installed
2024-04-13 19:31:22,597:INFO:         cloudpickle: 3.0.0
2024-04-13 19:31:22,597:INFO:         deprecation: 2.1.0
2024-04-13 19:31:22,597:INFO:              xxhash: 3.4.1
2024-04-13 19:31:22,597:INFO:           wurlitzer: Not installed
2024-04-13 19:31:22,597:INFO:PyCaret optional dependencies:
2024-04-13 19:31:22,603:INFO:                shap: Not installed
2024-04-13 19:31:22,603:INFO:           interpret: Not installed
2024-04-13 19:31:22,603:INFO:                umap: Not installed
2024-04-13 19:31:22,603:INFO:     ydata_profiling: Not installed
2024-04-13 19:31:22,603:INFO:  explainerdashboard: Not installed
2024-04-13 19:31:22,603:INFO:             autoviz: Not installed
2024-04-13 19:31:22,603:INFO:           fairlearn: Not installed
2024-04-13 19:31:22,603:INFO:          deepchecks: Not installed
2024-04-13 19:31:22,603:INFO:             xgboost: Not installed
2024-04-13 19:31:22,603:INFO:            catboost: Not installed
2024-04-13 19:31:22,603:INFO:              kmodes: Not installed
2024-04-13 19:31:22,603:INFO:             mlxtend: Not installed
2024-04-13 19:31:22,603:INFO:       statsforecast: Not installed
2024-04-13 19:31:22,603:INFO:        tune_sklearn: Not installed
2024-04-13 19:31:22,603:INFO:                 ray: Not installed
2024-04-13 19:31:22,603:INFO:            hyperopt: Not installed
2024-04-13 19:31:22,603:INFO:              optuna: Not installed
2024-04-13 19:31:22,603:INFO:               skopt: Not installed
2024-04-13 19:31:22,603:INFO:              mlflow: 2.11.3
2024-04-13 19:31:22,603:INFO:              gradio: Not installed
2024-04-13 19:31:22,603:INFO:             fastapi: Not installed
2024-04-13 19:31:22,603:INFO:             uvicorn: Not installed
2024-04-13 19:31:22,603:INFO:              m2cgen: Not installed
2024-04-13 19:31:22,603:INFO:           evidently: Not installed
2024-04-13 19:31:22,603:INFO:               fugue: Not installed
2024-04-13 19:31:22,603:INFO:           streamlit: Not installed
2024-04-13 19:31:22,603:INFO:             prophet: Not installed
2024-04-13 19:31:22,603:INFO:None
2024-04-13 19:31:22,603:INFO:Set up data.
2024-04-13 19:31:22,607:INFO:Set up folding strategy.
2024-04-13 19:31:22,607:INFO:Set up train/test split.
2024-04-13 19:31:22,607:INFO:Set up data.
2024-04-13 19:31:22,610:INFO:Set up index.
2024-04-13 19:31:22,610:INFO:Assigning column types.
2024-04-13 19:31:22,614:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:31:22,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:31:22,646:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:31:22,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,698:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:31:22,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:31:22,722:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,722:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,722:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:31:22,745:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:31:22,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,810:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:31:22,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,826:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:31:22,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:22,935:INFO:Preparing preprocessing pipeline...
2024-04-13 19:31:22,935:INFO:Set up label encoding.
2024-04-13 19:31:22,935:INFO:Set up simple imputation.
2024-04-13 19:31:22,935:INFO:Set up feature normalization.
2024-04-13 19:31:22,967:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:31:22,967:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:31:22,967:INFO:Creating final display dataframe.
2024-04-13 19:31:23,030:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                3585  
1                                       shot_distance  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                          (20285, 7)  
5                                          (20285, 7)  
6                                          (16228, 7)  
7                                           (4057, 7)  
8                                                   6  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               cf97  
2024-04-13 19:31:23,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:23,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:23,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:23,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:31:23,146:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:31:23,146:INFO:setup() successfully completed in 0.55s...............
2024-04-13 19:31:23,146:INFO:Initializing compare_models()
2024-04-13 19:31:23,146:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA1293C0>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA1293C0>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:31:23,146:INFO:Checking exceptions
2024-04-13 19:31:23,162:INFO:Preparing display monitor
2024-04-13 19:31:23,177:INFO:Initializing Decision Tree Classifier
2024-04-13 19:31:23,177:INFO:Total runtime is 0.0 minutes
2024-04-13 19:31:23,179:INFO:SubProcess create_model() called ==================================
2024-04-13 19:31:23,179:INFO:Initializing create_model()
2024-04-13 19:31:23,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA1293C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE225510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:31:23,179:INFO:Checking exceptions
2024-04-13 19:31:23,179:INFO:Importing libraries
2024-04-13 19:31:23,179:INFO:Copying training dataset
2024-04-13 19:31:23,186:INFO:Defining folds
2024-04-13 19:31:23,186:INFO:Declaring metric variables
2024-04-13 19:31:23,188:INFO:Importing untrained model
2024-04-13 19:31:23,188:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:31:23,194:INFO:Starting cross validation
2024-04-13 19:31:23,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:31:23,200:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:31:25,760:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:25,763:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,765:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,767:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,768:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,770:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,771:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,772:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:25,774:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,776:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,777:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,778:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,780:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,781:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,784:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:25,787:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,789:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,791:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,793:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,794:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:25,795:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,797:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,797:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,799:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,801:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,802:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:25,803:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,805:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,805:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,806:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,806:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,808:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,809:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,810:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,811:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,812:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:25,815:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,817:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,818:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:25,819:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,821:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

difier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,822:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:25,822:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,822:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,825:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,825:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,827:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,828:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,829:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:25,831:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:25,832:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:26,005:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:31:26,005:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:31:26,005:INFO:Initializing create_model()
2024-04-13 19:31:26,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA1293C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE225510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:31:26,006:INFO:Checking exceptions
2024-04-13 19:31:26,006:INFO:Importing libraries
2024-04-13 19:31:26,006:INFO:Copying training dataset
2024-04-13 19:31:26,013:INFO:Defining folds
2024-04-13 19:31:26,013:INFO:Declaring metric variables
2024-04-13 19:31:26,016:INFO:Importing untrained model
2024-04-13 19:31:26,019:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:31:26,024:INFO:Starting cross validation
2024-04-13 19:31:26,025:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:31:26,029:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:31:28,495:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:28,498:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,500:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,501:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,502:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,504:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,505:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,568:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:28,570:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,572:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,573:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,574:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,575:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,576:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,583:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:28,585:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,586:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:28,586:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,587:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,588:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,588:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,588:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:28,589:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,589:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,590:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,590:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,590:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,591:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,592:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,592:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,593:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,593:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:28,593:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,594:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,594:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:28,595:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,596:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,596:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,597:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,597:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,598:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,599:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,599:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,600:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,600:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,601:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,602:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:28,602:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,603:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:28,741:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-04-13 19:31:28,741:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:31:28,742:INFO:Initializing Logistic Regression
2024-04-13 19:31:28,742:INFO:Total runtime is 0.09274962345759073 minutes
2024-04-13 19:31:28,745:INFO:SubProcess create_model() called ==================================
2024-04-13 19:31:28,745:INFO:Initializing create_model()
2024-04-13 19:31:28,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA1293C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE225510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:31:28,745:INFO:Checking exceptions
2024-04-13 19:31:28,746:INFO:Importing libraries
2024-04-13 19:31:28,746:INFO:Copying training dataset
2024-04-13 19:31:28,752:INFO:Defining folds
2024-04-13 19:31:28,752:INFO:Declaring metric variables
2024-04-13 19:31:28,755:INFO:Importing untrained model
2024-04-13 19:31:28,758:INFO:Logistic Regression Imported successfully
2024-04-13 19:31:28,763:INFO:Starting cross validation
2024-04-13 19:31:28,764:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:31:28,767:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:31:32,249:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:32,254:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,259:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,262:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,264:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,267:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,283:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:32,290:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,294:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,297:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,301:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,304:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,306:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,370:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:32,373:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,374:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,376:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,378:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,379:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,380:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,410:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:32,412:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,414:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,415:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,416:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,418:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,419:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,420:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:32,422:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,423:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:32,423:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,424:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,425:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,425:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,426:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,426:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,428:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,428:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,429:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,430:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:32,431:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:32,506:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:31:32,507:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:31:32,507:INFO:Initializing create_model()
2024-04-13 19:31:32,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AA1293C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE225510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:31:32,507:INFO:Checking exceptions
2024-04-13 19:31:32,507:INFO:Importing libraries
2024-04-13 19:31:32,507:INFO:Copying training dataset
2024-04-13 19:31:32,514:INFO:Defining folds
2024-04-13 19:31:32,515:INFO:Declaring metric variables
2024-04-13 19:31:32,517:INFO:Importing untrained model
2024-04-13 19:31:32,520:INFO:Logistic Regression Imported successfully
2024-04-13 19:31:32,525:INFO:Starting cross validation
2024-04-13 19:31:32,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:31:32,529:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:31:36,039:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:36,042:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,043:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,045:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,047:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,048:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,049:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,053:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:36,056:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,058:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,060:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,062:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,064:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,066:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,067:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:36,070:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,072:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,073:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,075:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,076:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,077:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,120:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:31:36,122:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,123:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,124:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,126:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,127:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:31:36,128:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:31:36,198:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-13 19:31:36,199:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:31:36,208:INFO:_master_model_container: 0
2024-04-13 19:31:36,208:INFO:_display_container: 2
2024-04-13 19:31:36,208:INFO:[]
2024-04-13 19:31:36,208:INFO:compare_models() successfully completed......................................
2024-04-13 19:33:15,933:INFO:PyCaret ClassificationExperiment
2024-04-13 19:33:15,933:INFO:Logging name: clf-default-name
2024-04-13 19:33:15,933:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:33:15,933:INFO:version 3.3.0
2024-04-13 19:33:15,933:INFO:Initializing setup()
2024-04-13 19:33:15,933:INFO:self.USI: 12a2
2024-04-13 19:33:15,934:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:33:15,934:INFO:Checking environment
2024-04-13 19:33:15,934:INFO:python_version: 3.10.14
2024-04-13 19:33:15,934:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:33:15,934:INFO:machine: AMD64
2024-04-13 19:33:15,934:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:33:15,937:INFO:Memory: svmem(total=34280943616, available=24838569984, percent=27.5, used=9442373632, free=24838569984)
2024-04-13 19:33:15,937:INFO:Physical Core: 8
2024-04-13 19:33:15,937:INFO:Logical Core: 16
2024-04-13 19:33:15,937:INFO:Checking libraries
2024-04-13 19:33:15,937:INFO:System:
2024-04-13 19:33:15,937:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:33:15,937:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:33:15,937:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:33:15,937:INFO:PyCaret required dependencies:
2024-04-13 19:33:15,937:INFO:                 pip: 23.3.1
2024-04-13 19:33:15,937:INFO:          setuptools: 68.2.2
2024-04-13 19:33:15,937:INFO:             pycaret: 3.3.0
2024-04-13 19:33:15,937:INFO:             IPython: 8.23.0
2024-04-13 19:33:15,937:INFO:          ipywidgets: 8.1.2
2024-04-13 19:33:15,937:INFO:                tqdm: 4.66.2
2024-04-13 19:33:15,937:INFO:               numpy: 1.26.4
2024-04-13 19:33:15,937:INFO:              pandas: 2.1.4
2024-04-13 19:33:15,937:INFO:              jinja2: 3.1.3
2024-04-13 19:33:15,938:INFO:               scipy: 1.11.4
2024-04-13 19:33:15,938:INFO:              joblib: 1.3.0
2024-04-13 19:33:15,938:INFO:             sklearn: 1.4.2
2024-04-13 19:33:15,938:INFO:                pyod: 1.1.3
2024-04-13 19:33:15,938:INFO:            imblearn: 0.12.2
2024-04-13 19:33:15,938:INFO:   category_encoders: 2.6.3
2024-04-13 19:33:15,938:INFO:            lightgbm: 4.3.0
2024-04-13 19:33:15,938:INFO:               numba: 0.59.1
2024-04-13 19:33:15,938:INFO:            requests: 2.31.0
2024-04-13 19:33:15,938:INFO:          matplotlib: 3.7.5
2024-04-13 19:33:15,938:INFO:          scikitplot: 0.3.7
2024-04-13 19:33:15,938:INFO:         yellowbrick: 1.5
2024-04-13 19:33:15,938:INFO:              plotly: 5.20.0
2024-04-13 19:33:15,938:INFO:    plotly-resampler: Not installed
2024-04-13 19:33:15,938:INFO:             kaleido: 0.2.1
2024-04-13 19:33:15,938:INFO:           schemdraw: 0.15
2024-04-13 19:33:15,939:INFO:         statsmodels: 0.14.1
2024-04-13 19:33:15,939:INFO:              sktime: 0.28.0
2024-04-13 19:33:15,939:INFO:               tbats: 1.1.3
2024-04-13 19:33:15,939:INFO:            pmdarima: 2.0.4
2024-04-13 19:33:15,939:INFO:              psutil: 5.9.8
2024-04-13 19:33:15,939:INFO:          markupsafe: 2.1.5
2024-04-13 19:33:15,939:INFO:             pickle5: Not installed
2024-04-13 19:33:15,939:INFO:         cloudpickle: 3.0.0
2024-04-13 19:33:15,939:INFO:         deprecation: 2.1.0
2024-04-13 19:33:15,939:INFO:              xxhash: 3.4.1
2024-04-13 19:33:15,939:INFO:           wurlitzer: Not installed
2024-04-13 19:33:15,939:INFO:PyCaret optional dependencies:
2024-04-13 19:33:15,939:INFO:                shap: Not installed
2024-04-13 19:33:15,939:INFO:           interpret: Not installed
2024-04-13 19:33:15,939:INFO:                umap: Not installed
2024-04-13 19:33:15,939:INFO:     ydata_profiling: Not installed
2024-04-13 19:33:15,939:INFO:  explainerdashboard: Not installed
2024-04-13 19:33:15,939:INFO:             autoviz: Not installed
2024-04-13 19:33:15,939:INFO:           fairlearn: Not installed
2024-04-13 19:33:15,939:INFO:          deepchecks: Not installed
2024-04-13 19:33:15,939:INFO:             xgboost: Not installed
2024-04-13 19:33:15,939:INFO:            catboost: Not installed
2024-04-13 19:33:15,939:INFO:              kmodes: Not installed
2024-04-13 19:33:15,939:INFO:             mlxtend: Not installed
2024-04-13 19:33:15,939:INFO:       statsforecast: Not installed
2024-04-13 19:33:15,939:INFO:        tune_sklearn: Not installed
2024-04-13 19:33:15,939:INFO:                 ray: Not installed
2024-04-13 19:33:15,939:INFO:            hyperopt: Not installed
2024-04-13 19:33:15,939:INFO:              optuna: Not installed
2024-04-13 19:33:15,939:INFO:               skopt: Not installed
2024-04-13 19:33:15,939:INFO:              mlflow: 2.11.3
2024-04-13 19:33:15,939:INFO:              gradio: Not installed
2024-04-13 19:33:15,939:INFO:             fastapi: Not installed
2024-04-13 19:33:15,939:INFO:             uvicorn: Not installed
2024-04-13 19:33:15,940:INFO:              m2cgen: Not installed
2024-04-13 19:33:15,940:INFO:           evidently: Not installed
2024-04-13 19:33:15,940:INFO:               fugue: Not installed
2024-04-13 19:33:15,940:INFO:           streamlit: Not installed
2024-04-13 19:33:15,940:INFO:             prophet: Not installed
2024-04-13 19:33:15,940:INFO:None
2024-04-13 19:33:15,940:INFO:Set up data.
2024-04-13 19:33:15,943:INFO:Set up folding strategy.
2024-04-13 19:33:15,943:INFO:Set up train/test split.
2024-04-13 19:33:15,943:INFO:Set up data.
2024-04-13 19:33:15,946:INFO:Set up index.
2024-04-13 19:33:15,946:INFO:Assigning column types.
2024-04-13 19:33:15,950:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:33:15,983:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:33:15,983:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:33:16,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,036:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:33:16,037:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:33:16,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,058:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:33:16,091:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:33:16,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,145:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:33:16,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,165:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:33:16,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,274:INFO:Preparing preprocessing pipeline...
2024-04-13 19:33:16,275:INFO:Set up label encoding.
2024-04-13 19:33:16,275:INFO:Set up simple imputation.
2024-04-13 19:33:16,275:INFO:Set up feature normalization.
2024-04-13 19:33:16,302:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:33:16,306:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:33:16,306:INFO:Creating final display dataframe.
2024-04-13 19:33:16,378:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                6474  
1                                       shot_distance  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                          (20285, 7)  
5                                          (20285, 7)  
6                                          (16228, 7)  
7                                           (4057, 7)  
8                                                   6  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               12a2  
2024-04-13 19:33:16,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:33:16,508:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:33:16,509:INFO:setup() successfully completed in 0.58s...............
2024-04-13 19:33:16,510:INFO:Initializing compare_models()
2024-04-13 19:33:16,510:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC879210>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC879210>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:33:16,510:INFO:Checking exceptions
2024-04-13 19:33:16,514:INFO:Preparing display monitor
2024-04-13 19:33:16,527:INFO:Initializing Decision Tree Classifier
2024-04-13 19:33:16,528:INFO:Total runtime is 1.6669432322184246e-05 minutes
2024-04-13 19:33:16,530:INFO:SubProcess create_model() called ==================================
2024-04-13 19:33:16,530:INFO:Initializing create_model()
2024-04-13 19:33:16,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC879210>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232ACB56B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:33:16,530:INFO:Checking exceptions
2024-04-13 19:33:16,530:INFO:Importing libraries
2024-04-13 19:33:16,530:INFO:Copying training dataset
2024-04-13 19:33:16,537:INFO:Defining folds
2024-04-13 19:33:16,537:INFO:Declaring metric variables
2024-04-13 19:33:16,539:INFO:Importing untrained model
2024-04-13 19:33:16,542:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:33:16,545:INFO:Starting cross validation
2024-04-13 19:33:16,546:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:33:16,550:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:33:19,074:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:19,078:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,079:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,081:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,083:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,085:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,086:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,101:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:19,106:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,107:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,109:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,110:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,111:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:19,111:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,113:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,113:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,116:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,118:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,120:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,121:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,123:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,140:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:19,143:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,144:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,146:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,147:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,148:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,151:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,152:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:19,153:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:19,154:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:19,155:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,156:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,157:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,157:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,158:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,158:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,159:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,160:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,160:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:19,160:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,160:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,161:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,162:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,162:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,163:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,163:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,163:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,163:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,165:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,165:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,165:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,166:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,167:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,169:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:19,170:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:19,366:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:33:19,367:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:33:19,367:INFO:Initializing create_model()
2024-04-13 19:33:19,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC879210>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232ACB56B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:33:19,367:INFO:Checking exceptions
2024-04-13 19:33:19,367:INFO:Importing libraries
2024-04-13 19:33:19,367:INFO:Copying training dataset
2024-04-13 19:33:19,373:INFO:Defining folds
2024-04-13 19:33:19,373:INFO:Declaring metric variables
2024-04-13 19:33:19,377:INFO:Importing untrained model
2024-04-13 19:33:19,377:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:33:19,383:INFO:Starting cross validation
2024-04-13 19:33:19,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:33:19,390:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:33:21,913:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:21,914:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,914:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,914:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,920:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,921:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,923:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,967:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:21,967:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,972:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,975:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,977:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,978:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,979:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,981:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:21,983:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,984:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:21,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:21,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,993:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,995:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,995:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,995:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:21,995:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,995:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:21,995:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,000:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,000:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:22,001:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,002:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,004:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,005:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,007:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,008:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,009:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,010:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:22,010:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,010:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:22,013:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,014:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,015:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,015:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,016:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,016:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,016:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,016:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,016:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,016:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:22,016:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,021:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:22,230:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-04-13 19:33:22,231:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:33:22,231:INFO:Initializing Logistic Regression
2024-04-13 19:33:22,231:INFO:Total runtime is 0.09506835540135702 minutes
2024-04-13 19:33:22,234:INFO:SubProcess create_model() called ==================================
2024-04-13 19:33:22,234:INFO:Initializing create_model()
2024-04-13 19:33:22,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC879210>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232ACB56B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:33:22,235:INFO:Checking exceptions
2024-04-13 19:33:22,235:INFO:Importing libraries
2024-04-13 19:33:22,235:INFO:Copying training dataset
2024-04-13 19:33:22,242:INFO:Defining folds
2024-04-13 19:33:22,242:INFO:Declaring metric variables
2024-04-13 19:33:22,244:INFO:Importing untrained model
2024-04-13 19:33:22,247:INFO:Logistic Regression Imported successfully
2024-04-13 19:33:22,251:INFO:Starting cross validation
2024-04-13 19:33:22,251:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:33:22,255:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:33:25,970:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:25,972:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:25,973:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:25,974:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:25,976:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:25,976:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:25,977:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:25,977:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:25,978:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:25,978:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:25,979:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:25,980:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:25,980:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:25,980:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:25,981:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:25,981:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:25,982:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:25,982:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:25,984:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:25,985:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:25,985:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:25,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:25,987:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:25,988:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:26,010:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:26,012:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:26,013:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:26,014:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:26,015:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:26,017:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:26,018:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:26,072:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:33:26,072:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:33:26,073:INFO:Initializing create_model()
2024-04-13 19:33:26,073:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC879210>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232ACB56B30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:33:26,073:INFO:Checking exceptions
2024-04-13 19:33:26,073:INFO:Importing libraries
2024-04-13 19:33:26,073:INFO:Copying training dataset
2024-04-13 19:33:26,080:INFO:Defining folds
2024-04-13 19:33:26,080:INFO:Declaring metric variables
2024-04-13 19:33:26,083:INFO:Importing untrained model
2024-04-13 19:33:26,086:INFO:Logistic Regression Imported successfully
2024-04-13 19:33:26,091:INFO:Starting cross validation
2024-04-13 19:33:26,092:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:33:26,095:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:33:29,623:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:29,630:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,630:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,633:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,633:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,638:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,638:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,726:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:29,733:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,733:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,733:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,733:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,733:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,742:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,764:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:29,764:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,774:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,774:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,776:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,777:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,777:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:29,777:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,777:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,777:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,783:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,783:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,783:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,787:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,799:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:29,799:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:33:29,799:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,799:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,799:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,803:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,803:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,803:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,803:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,806:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,806:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,807:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,807:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:33:29,807:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:33:29,873:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-13 19:33:29,873:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:33:29,890:INFO:_master_model_container: 0
2024-04-13 19:33:29,890:INFO:_display_container: 2
2024-04-13 19:33:29,890:INFO:[]
2024-04-13 19:33:29,890:INFO:compare_models() successfully completed......................................
2024-04-13 19:36:59,935:INFO:PyCaret ClassificationExperiment
2024-04-13 19:36:59,935:INFO:Logging name: clf-default-name
2024-04-13 19:36:59,935:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:36:59,935:INFO:version 3.3.0
2024-04-13 19:36:59,936:INFO:Initializing setup()
2024-04-13 19:36:59,936:INFO:self.USI: 744c
2024-04-13 19:36:59,936:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:36:59,936:INFO:Checking environment
2024-04-13 19:36:59,936:INFO:python_version: 3.10.14
2024-04-13 19:36:59,936:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:36:59,936:INFO:machine: AMD64
2024-04-13 19:36:59,936:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:36:59,938:INFO:Memory: svmem(total=34280943616, available=25267523584, percent=26.3, used=9013420032, free=25267523584)
2024-04-13 19:36:59,938:INFO:Physical Core: 8
2024-04-13 19:36:59,939:INFO:Logical Core: 16
2024-04-13 19:36:59,939:INFO:Checking libraries
2024-04-13 19:36:59,939:INFO:System:
2024-04-13 19:36:59,939:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:36:59,939:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:36:59,939:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:36:59,939:INFO:PyCaret required dependencies:
2024-04-13 19:36:59,939:INFO:                 pip: 23.3.1
2024-04-13 19:36:59,939:INFO:          setuptools: 68.2.2
2024-04-13 19:36:59,939:INFO:             pycaret: 3.3.0
2024-04-13 19:36:59,939:INFO:             IPython: 8.23.0
2024-04-13 19:36:59,939:INFO:          ipywidgets: 8.1.2
2024-04-13 19:36:59,939:INFO:                tqdm: 4.66.2
2024-04-13 19:36:59,939:INFO:               numpy: 1.26.4
2024-04-13 19:36:59,939:INFO:              pandas: 2.1.4
2024-04-13 19:36:59,939:INFO:              jinja2: 3.1.3
2024-04-13 19:36:59,939:INFO:               scipy: 1.11.4
2024-04-13 19:36:59,939:INFO:              joblib: 1.3.0
2024-04-13 19:36:59,939:INFO:             sklearn: 1.4.2
2024-04-13 19:36:59,939:INFO:                pyod: 1.1.3
2024-04-13 19:36:59,939:INFO:            imblearn: 0.12.2
2024-04-13 19:36:59,939:INFO:   category_encoders: 2.6.3
2024-04-13 19:36:59,939:INFO:            lightgbm: 4.3.0
2024-04-13 19:36:59,939:INFO:               numba: 0.59.1
2024-04-13 19:36:59,939:INFO:            requests: 2.31.0
2024-04-13 19:36:59,939:INFO:          matplotlib: 3.7.5
2024-04-13 19:36:59,939:INFO:          scikitplot: 0.3.7
2024-04-13 19:36:59,939:INFO:         yellowbrick: 1.5
2024-04-13 19:36:59,939:INFO:              plotly: 5.20.0
2024-04-13 19:36:59,939:INFO:    plotly-resampler: Not installed
2024-04-13 19:36:59,939:INFO:             kaleido: 0.2.1
2024-04-13 19:36:59,940:INFO:           schemdraw: 0.15
2024-04-13 19:36:59,940:INFO:         statsmodels: 0.14.1
2024-04-13 19:36:59,940:INFO:              sktime: 0.28.0
2024-04-13 19:36:59,940:INFO:               tbats: 1.1.3
2024-04-13 19:36:59,940:INFO:            pmdarima: 2.0.4
2024-04-13 19:36:59,940:INFO:              psutil: 5.9.8
2024-04-13 19:36:59,940:INFO:          markupsafe: 2.1.5
2024-04-13 19:36:59,940:INFO:             pickle5: Not installed
2024-04-13 19:36:59,940:INFO:         cloudpickle: 3.0.0
2024-04-13 19:36:59,940:INFO:         deprecation: 2.1.0
2024-04-13 19:36:59,940:INFO:              xxhash: 3.4.1
2024-04-13 19:36:59,940:INFO:           wurlitzer: Not installed
2024-04-13 19:36:59,940:INFO:PyCaret optional dependencies:
2024-04-13 19:36:59,940:INFO:                shap: Not installed
2024-04-13 19:36:59,940:INFO:           interpret: Not installed
2024-04-13 19:36:59,940:INFO:                umap: Not installed
2024-04-13 19:36:59,940:INFO:     ydata_profiling: Not installed
2024-04-13 19:36:59,940:INFO:  explainerdashboard: Not installed
2024-04-13 19:36:59,940:INFO:             autoviz: Not installed
2024-04-13 19:36:59,940:INFO:           fairlearn: Not installed
2024-04-13 19:36:59,940:INFO:          deepchecks: Not installed
2024-04-13 19:36:59,940:INFO:             xgboost: Not installed
2024-04-13 19:36:59,940:INFO:            catboost: Not installed
2024-04-13 19:36:59,940:INFO:              kmodes: Not installed
2024-04-13 19:36:59,940:INFO:             mlxtend: Not installed
2024-04-13 19:36:59,940:INFO:       statsforecast: Not installed
2024-04-13 19:36:59,940:INFO:        tune_sklearn: Not installed
2024-04-13 19:36:59,940:INFO:                 ray: Not installed
2024-04-13 19:36:59,940:INFO:            hyperopt: Not installed
2024-04-13 19:36:59,940:INFO:              optuna: Not installed
2024-04-13 19:36:59,940:INFO:               skopt: Not installed
2024-04-13 19:36:59,940:INFO:              mlflow: 2.11.3
2024-04-13 19:36:59,940:INFO:              gradio: Not installed
2024-04-13 19:36:59,940:INFO:             fastapi: Not installed
2024-04-13 19:36:59,941:INFO:             uvicorn: Not installed
2024-04-13 19:36:59,941:INFO:              m2cgen: Not installed
2024-04-13 19:36:59,941:INFO:           evidently: Not installed
2024-04-13 19:36:59,941:INFO:               fugue: Not installed
2024-04-13 19:36:59,941:INFO:           streamlit: Not installed
2024-04-13 19:36:59,941:INFO:             prophet: Not installed
2024-04-13 19:36:59,941:INFO:None
2024-04-13 19:36:59,941:INFO:Set up data.
2024-04-13 19:36:59,944:INFO:Set up folding strategy.
2024-04-13 19:36:59,944:INFO:Set up train/test split.
2024-04-13 19:36:59,944:INFO:Set up data.
2024-04-13 19:36:59,947:INFO:Set up index.
2024-04-13 19:36:59,947:INFO:Assigning column types.
2024-04-13 19:36:59,951:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:36:59,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:36:59,985:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:37:00,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,038:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:37:00,038:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:37:00,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,059:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:37:00,091:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:37:00,110:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,110:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,141:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:37:00,164:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,165:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:37:00,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,206:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,271:INFO:Preparing preprocessing pipeline...
2024-04-13 19:37:00,272:INFO:Set up label encoding.
2024-04-13 19:37:00,272:INFO:Set up simple imputation.
2024-04-13 19:37:00,272:INFO:Set up feature normalization.
2024-04-13 19:37:00,291:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:37:00,291:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:37:00,291:INFO:Creating final display dataframe.
2024-04-13 19:37:00,370:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                6984  
1                                       shot_distance  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                          (20285, 7)  
5                                          (20285, 7)  
6                                          (16228, 7)  
7                                           (4057, 7)  
8                                                   6  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               744c  
2024-04-13 19:37:00,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:37:00,485:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:37:00,485:INFO:setup() successfully completed in 0.55s...............
2024-04-13 19:37:00,486:INFO:Initializing compare_models()
2024-04-13 19:37:00,486:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFBB010>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFBB010>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:37:00,486:INFO:Checking exceptions
2024-04-13 19:37:00,490:INFO:Preparing display monitor
2024-04-13 19:37:00,505:INFO:Initializing Decision Tree Classifier
2024-04-13 19:37:00,505:INFO:Total runtime is 0.0 minutes
2024-04-13 19:37:00,507:INFO:SubProcess create_model() called ==================================
2024-04-13 19:37:00,508:INFO:Initializing create_model()
2024-04-13 19:37:00,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFBB010>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AA0F7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:37:00,508:INFO:Checking exceptions
2024-04-13 19:37:00,508:INFO:Importing libraries
2024-04-13 19:37:00,508:INFO:Copying training dataset
2024-04-13 19:37:00,515:INFO:Defining folds
2024-04-13 19:37:00,515:INFO:Declaring metric variables
2024-04-13 19:37:00,517:INFO:Importing untrained model
2024-04-13 19:37:00,520:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:37:00,520:INFO:Starting cross validation
2024-04-13 19:37:00,520:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:37:00,528:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:37:03,175:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:03,181:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,182:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,182:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,186:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,187:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,189:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,214:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:03,216:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:03,216:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:03,217:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,217:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,217:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,217:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,221:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,221:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,222:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,222:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:03,223:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,223:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,224:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,224:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,224:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,224:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,224:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,224:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,224:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,224:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:03,224:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:03,228:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,228:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,229:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,229:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,230:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,230:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,230:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,230:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,232:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,232:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,232:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,233:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,234:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,234:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,236:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,236:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,236:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:03,238:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,238:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,238:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,238:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,238:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,238:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,242:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,243:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,245:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:03,246:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:03,416:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:37:03,417:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:37:03,417:INFO:Initializing create_model()
2024-04-13 19:37:03,417:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFBB010>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AA0F7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:37:03,417:INFO:Checking exceptions
2024-04-13 19:37:03,417:INFO:Importing libraries
2024-04-13 19:37:03,417:INFO:Copying training dataset
2024-04-13 19:37:03,424:INFO:Defining folds
2024-04-13 19:37:03,424:INFO:Declaring metric variables
2024-04-13 19:37:03,427:INFO:Importing untrained model
2024-04-13 19:37:03,431:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:37:03,431:INFO:Starting cross validation
2024-04-13 19:37:03,436:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:37:03,440:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:37:05,949:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:05,951:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:05,953:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:05,955:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:05,957:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:05,959:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:05,960:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:05,975:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:05,978:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:05,980:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:05,981:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:05,982:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:05,983:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:05,984:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:05,984:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:05,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:05,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:05,987:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:05,988:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:05,988:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:05,989:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,002:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:06,004:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:06,005:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,006:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,007:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,007:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,009:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,009:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,010:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,011:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,011:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,012:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,013:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,014:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:06,015:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,017:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,019:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,021:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,023:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,024:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,026:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,033:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:06,036:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,038:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:06,038:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,040:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,041:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,041:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,043:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,043:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,044:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,044:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,045:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,046:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:06,047:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:06,235:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-04-13 19:37:06,236:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:37:06,236:INFO:Initializing Logistic Regression
2024-04-13 19:37:06,236:INFO:Total runtime is 0.09550576210021973 minutes
2024-04-13 19:37:06,239:INFO:SubProcess create_model() called ==================================
2024-04-13 19:37:06,239:INFO:Initializing create_model()
2024-04-13 19:37:06,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFBB010>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AA0F7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:37:06,239:INFO:Checking exceptions
2024-04-13 19:37:06,239:INFO:Importing libraries
2024-04-13 19:37:06,240:INFO:Copying training dataset
2024-04-13 19:37:06,246:INFO:Defining folds
2024-04-13 19:37:06,246:INFO:Declaring metric variables
2024-04-13 19:37:06,248:INFO:Importing untrained model
2024-04-13 19:37:06,251:INFO:Logistic Regression Imported successfully
2024-04-13 19:37:06,256:INFO:Starting cross validation
2024-04-13 19:37:06,257:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:37:06,261:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:37:09,724:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:09,728:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,730:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,733:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,736:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,738:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,739:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,773:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:09,778:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,781:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,784:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,787:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,789:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,791:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,829:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:09,833:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,835:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,837:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,840:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,841:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,843:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,856:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:09,859:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,860:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,861:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,863:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,864:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,865:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,888:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:09,890:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,891:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,892:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,893:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,894:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:09,895:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:09,948:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:37:09,949:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:37:09,949:INFO:Initializing create_model()
2024-04-13 19:37:09,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFBB010>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AA0F7520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:37:09,949:INFO:Checking exceptions
2024-04-13 19:37:09,949:INFO:Importing libraries
2024-04-13 19:37:09,949:INFO:Copying training dataset
2024-04-13 19:37:09,956:INFO:Defining folds
2024-04-13 19:37:09,956:INFO:Declaring metric variables
2024-04-13 19:37:09,959:INFO:Importing untrained model
2024-04-13 19:37:09,962:INFO:Logistic Regression Imported successfully
2024-04-13 19:37:09,967:INFO:Starting cross validation
2024-04-13 19:37:09,968:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:37:09,972:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:37:13,427:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:13,427:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:13,427:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:13,427:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:13,427:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:13,443:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:13,443:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:13,490:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:13,506:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:13,569:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:37:13,569:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:13,569:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:13,569:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:13,569:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:13,569:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:37:13,569:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:37:13,647:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-13 19:37:13,647:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:37:13,661:INFO:_master_model_container: 0
2024-04-13 19:37:13,661:INFO:_display_container: 2
2024-04-13 19:37:13,661:INFO:[]
2024-04-13 19:37:13,661:INFO:compare_models() successfully completed......................................
2024-04-13 19:38:21,475:INFO:PyCaret ClassificationExperiment
2024-04-13 19:38:21,475:INFO:Logging name: clf-default-name
2024-04-13 19:38:21,475:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:38:21,476:INFO:version 3.3.0
2024-04-13 19:38:21,476:INFO:Initializing setup()
2024-04-13 19:38:21,476:INFO:self.USI: 951a
2024-04-13 19:38:21,476:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:38:21,476:INFO:Checking environment
2024-04-13 19:38:21,476:INFO:python_version: 3.10.14
2024-04-13 19:38:21,476:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:38:21,476:INFO:machine: AMD64
2024-04-13 19:38:21,476:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:38:21,479:INFO:Memory: svmem(total=34280943616, available=25597771776, percent=25.3, used=8683171840, free=25597771776)
2024-04-13 19:38:21,479:INFO:Physical Core: 8
2024-04-13 19:38:21,479:INFO:Logical Core: 16
2024-04-13 19:38:21,479:INFO:Checking libraries
2024-04-13 19:38:21,479:INFO:System:
2024-04-13 19:38:21,479:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:38:21,479:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:38:21,479:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:38:21,479:INFO:PyCaret required dependencies:
2024-04-13 19:38:21,479:INFO:                 pip: 23.3.1
2024-04-13 19:38:21,479:INFO:          setuptools: 68.2.2
2024-04-13 19:38:21,479:INFO:             pycaret: 3.3.0
2024-04-13 19:38:21,479:INFO:             IPython: 8.23.0
2024-04-13 19:38:21,479:INFO:          ipywidgets: 8.1.2
2024-04-13 19:38:21,479:INFO:                tqdm: 4.66.2
2024-04-13 19:38:21,479:INFO:               numpy: 1.26.4
2024-04-13 19:38:21,479:INFO:              pandas: 2.1.4
2024-04-13 19:38:21,480:INFO:              jinja2: 3.1.3
2024-04-13 19:38:21,480:INFO:               scipy: 1.11.4
2024-04-13 19:38:21,480:INFO:              joblib: 1.3.0
2024-04-13 19:38:21,480:INFO:             sklearn: 1.4.2
2024-04-13 19:38:21,480:INFO:                pyod: 1.1.3
2024-04-13 19:38:21,480:INFO:            imblearn: 0.12.2
2024-04-13 19:38:21,480:INFO:   category_encoders: 2.6.3
2024-04-13 19:38:21,480:INFO:            lightgbm: 4.3.0
2024-04-13 19:38:21,480:INFO:               numba: 0.59.1
2024-04-13 19:38:21,480:INFO:            requests: 2.31.0
2024-04-13 19:38:21,480:INFO:          matplotlib: 3.7.5
2024-04-13 19:38:21,480:INFO:          scikitplot: 0.3.7
2024-04-13 19:38:21,480:INFO:         yellowbrick: 1.5
2024-04-13 19:38:21,480:INFO:              plotly: 5.20.0
2024-04-13 19:38:21,480:INFO:    plotly-resampler: Not installed
2024-04-13 19:38:21,480:INFO:             kaleido: 0.2.1
2024-04-13 19:38:21,480:INFO:           schemdraw: 0.15
2024-04-13 19:38:21,480:INFO:         statsmodels: 0.14.1
2024-04-13 19:38:21,480:INFO:              sktime: 0.28.0
2024-04-13 19:38:21,480:INFO:               tbats: 1.1.3
2024-04-13 19:38:21,480:INFO:            pmdarima: 2.0.4
2024-04-13 19:38:21,480:INFO:              psutil: 5.9.8
2024-04-13 19:38:21,480:INFO:          markupsafe: 2.1.5
2024-04-13 19:38:21,480:INFO:             pickle5: Not installed
2024-04-13 19:38:21,480:INFO:         cloudpickle: 3.0.0
2024-04-13 19:38:21,480:INFO:         deprecation: 2.1.0
2024-04-13 19:38:21,480:INFO:              xxhash: 3.4.1
2024-04-13 19:38:21,480:INFO:           wurlitzer: Not installed
2024-04-13 19:38:21,480:INFO:PyCaret optional dependencies:
2024-04-13 19:38:21,480:INFO:                shap: Not installed
2024-04-13 19:38:21,481:INFO:           interpret: Not installed
2024-04-13 19:38:21,481:INFO:                umap: Not installed
2024-04-13 19:38:21,481:INFO:     ydata_profiling: Not installed
2024-04-13 19:38:21,481:INFO:  explainerdashboard: Not installed
2024-04-13 19:38:21,481:INFO:             autoviz: Not installed
2024-04-13 19:38:21,481:INFO:           fairlearn: Not installed
2024-04-13 19:38:21,481:INFO:          deepchecks: Not installed
2024-04-13 19:38:21,481:INFO:             xgboost: Not installed
2024-04-13 19:38:21,481:INFO:            catboost: Not installed
2024-04-13 19:38:21,481:INFO:              kmodes: Not installed
2024-04-13 19:38:21,481:INFO:             mlxtend: Not installed
2024-04-13 19:38:21,481:INFO:       statsforecast: Not installed
2024-04-13 19:38:21,481:INFO:        tune_sklearn: Not installed
2024-04-13 19:38:21,481:INFO:                 ray: Not installed
2024-04-13 19:38:21,481:INFO:            hyperopt: Not installed
2024-04-13 19:38:21,481:INFO:              optuna: Not installed
2024-04-13 19:38:21,481:INFO:               skopt: Not installed
2024-04-13 19:38:21,481:INFO:              mlflow: 2.11.3
2024-04-13 19:38:21,481:INFO:              gradio: Not installed
2024-04-13 19:38:21,481:INFO:             fastapi: Not installed
2024-04-13 19:38:21,481:INFO:             uvicorn: Not installed
2024-04-13 19:38:21,481:INFO:              m2cgen: Not installed
2024-04-13 19:38:21,481:INFO:           evidently: Not installed
2024-04-13 19:38:21,481:INFO:               fugue: Not installed
2024-04-13 19:38:21,481:INFO:           streamlit: Not installed
2024-04-13 19:38:21,481:INFO:             prophet: Not installed
2024-04-13 19:38:21,481:INFO:None
2024-04-13 19:38:21,481:INFO:Set up data.
2024-04-13 19:38:21,485:INFO:Set up folding strategy.
2024-04-13 19:38:21,485:INFO:Set up train/test split.
2024-04-13 19:38:21,485:INFO:Set up data.
2024-04-13 19:38:21,487:INFO:Set up index.
2024-04-13 19:38:21,487:INFO:Assigning column types.
2024-04-13 19:38:21,491:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:38:21,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:38:21,521:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:38:21,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,574:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:38:21,574:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:38:21,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,598:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:38:21,631:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:38:21,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,681:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:38:21,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,704:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:38:21,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,808:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,811:INFO:Preparing preprocessing pipeline...
2024-04-13 19:38:21,811:INFO:Set up label encoding.
2024-04-13 19:38:21,811:INFO:Set up simple imputation.
2024-04-13 19:38:21,811:INFO:Set up feature normalization.
2024-04-13 19:38:21,836:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:38:21,841:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:38:21,841:INFO:Creating final display dataframe.
2024-04-13 19:38:21,911:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                1532  
1                                       shot_distance  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                          (20285, 7)  
5                                          (20285, 7)  
6                                          (16228, 7)  
7                                           (4057, 7)  
8                                                   6  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               951a  
2024-04-13 19:38:21,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:21,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:22,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:22,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:22,021:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:38:22,021:INFO:setup() successfully completed in 0.55s...............
2024-04-13 19:38:22,021:INFO:Initializing compare_models()
2024-04-13 19:38:22,021:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFB85B0>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFB85B0>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:38:22,021:INFO:Checking exceptions
2024-04-13 19:38:22,029:INFO:Preparing display monitor
2024-04-13 19:38:22,041:INFO:Initializing Decision Tree Classifier
2024-04-13 19:38:22,041:INFO:Total runtime is 0.0 minutes
2024-04-13 19:38:22,046:INFO:SubProcess create_model() called ==================================
2024-04-13 19:38:22,046:INFO:Initializing create_model()
2024-04-13 19:38:22,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFB85B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE4FCDF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:38:22,047:INFO:Checking exceptions
2024-04-13 19:38:22,047:INFO:Importing libraries
2024-04-13 19:38:22,047:INFO:Copying training dataset
2024-04-13 19:38:22,053:INFO:Defining folds
2024-04-13 19:38:22,053:INFO:Declaring metric variables
2024-04-13 19:38:22,056:INFO:Importing untrained model
2024-04-13 19:38:22,057:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:38:22,062:INFO:Starting cross validation
2024-04-13 19:38:22,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:38:22,066:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:38:24,655:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:24,655:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,655:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,655:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,661:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,661:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,661:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,672:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:24,676:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,676:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,681:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,681:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,681:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,687:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:24,687:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,687:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,691:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,691:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,691:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,691:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,691:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,691:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:24,691:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:24,701:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,701:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,703:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,703:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,705:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,706:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,706:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,706:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,706:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,706:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,706:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,706:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,711:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:24,711:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:24,711:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:24,716:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,716:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,716:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,716:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,716:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,719:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,719:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,720:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,720:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,721:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,721:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,722:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,723:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,723:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,724:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,724:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,726:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:24,727:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:24,909:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:38:24,909:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:38:24,911:INFO:Initializing create_model()
2024-04-13 19:38:24,911:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFB85B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE4FCDF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:38:24,911:INFO:Checking exceptions
2024-04-13 19:38:24,911:INFO:Importing libraries
2024-04-13 19:38:24,911:INFO:Copying training dataset
2024-04-13 19:38:24,911:INFO:Defining folds
2024-04-13 19:38:24,911:INFO:Declaring metric variables
2024-04-13 19:38:24,920:INFO:Importing untrained model
2024-04-13 19:38:24,923:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:38:24,929:INFO:Starting cross validation
2024-04-13 19:38:24,929:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:38:24,931:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:38:27,534:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:27,535:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:27,537:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,537:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,539:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,539:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,541:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,542:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,542:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,543:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,544:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,545:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,546:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,546:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,555:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:27,558:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,559:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,560:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:27,561:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,562:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,563:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,563:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,564:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,564:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:27,565:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,565:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:27,567:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,568:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,569:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,569:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,570:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,570:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,571:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,572:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,572:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,573:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,574:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,574:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,575:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,576:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,578:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,578:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,580:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:27,583:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,583:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:27,584:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,586:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,587:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,587:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,588:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,589:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,590:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,590:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,591:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,592:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:27,594:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:27,806:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-04-13 19:38:27,807:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:38:27,807:INFO:Initializing Logistic Regression
2024-04-13 19:38:27,807:INFO:Total runtime is 0.09608919223149617 minutes
2024-04-13 19:38:27,810:INFO:SubProcess create_model() called ==================================
2024-04-13 19:38:27,810:INFO:Initializing create_model()
2024-04-13 19:38:27,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFB85B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE4FCDF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:38:27,810:INFO:Checking exceptions
2024-04-13 19:38:27,810:INFO:Importing libraries
2024-04-13 19:38:27,810:INFO:Copying training dataset
2024-04-13 19:38:27,816:INFO:Defining folds
2024-04-13 19:38:27,816:INFO:Declaring metric variables
2024-04-13 19:38:27,819:INFO:Importing untrained model
2024-04-13 19:38:27,823:INFO:Logistic Regression Imported successfully
2024-04-13 19:38:27,829:INFO:Starting cross validation
2024-04-13 19:38:27,829:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:38:27,834:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:38:31,443:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:31,449:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:31,452:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:31,453:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:31,456:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:31,458:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:31,459:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:31,579:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:31,581:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:31,583:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:31,584:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:31,585:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:31,586:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:31,588:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:31,602:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:31,604:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:31,605:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:31,606:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:31,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:31,608:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:31,609:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:31,650:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:38:31,651:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:38:31,651:INFO:Initializing create_model()
2024-04-13 19:38:31,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADFB85B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE4FCDF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:38:31,651:INFO:Checking exceptions
2024-04-13 19:38:31,651:INFO:Importing libraries
2024-04-13 19:38:31,651:INFO:Copying training dataset
2024-04-13 19:38:31,658:INFO:Defining folds
2024-04-13 19:38:31,658:INFO:Declaring metric variables
2024-04-13 19:38:31,661:INFO:Importing untrained model
2024-04-13 19:38:31,664:INFO:Logistic Regression Imported successfully
2024-04-13 19:38:31,668:INFO:Starting cross validation
2024-04-13 19:38:31,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:38:31,672:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:38:35,172:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:35,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,188:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,219:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:35,219:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,219:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,235:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:35,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:35,313:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-13 19:38:35,313:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:38:35,325:INFO:_master_model_container: 0
2024-04-13 19:38:35,325:INFO:_display_container: 2
2024-04-13 19:38:35,325:INFO:[]
2024-04-13 19:38:35,325:INFO:compare_models() successfully completed......................................
2024-04-13 19:38:49,534:INFO:PyCaret ClassificationExperiment
2024-04-13 19:38:49,534:INFO:Logging name: clf-default-name
2024-04-13 19:38:49,534:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:38:49,535:INFO:version 3.3.0
2024-04-13 19:38:49,535:INFO:Initializing setup()
2024-04-13 19:38:49,535:INFO:self.USI: d413
2024-04-13 19:38:49,535:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:38:49,535:INFO:Checking environment
2024-04-13 19:38:49,535:INFO:python_version: 3.10.14
2024-04-13 19:38:49,535:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:38:49,535:INFO:machine: AMD64
2024-04-13 19:38:49,535:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:38:49,538:INFO:Memory: svmem(total=34280943616, available=25527877632, percent=25.5, used=8753065984, free=25527877632)
2024-04-13 19:38:49,538:INFO:Physical Core: 8
2024-04-13 19:38:49,538:INFO:Logical Core: 16
2024-04-13 19:38:49,538:INFO:Checking libraries
2024-04-13 19:38:49,538:INFO:System:
2024-04-13 19:38:49,538:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:38:49,538:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:38:49,538:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:38:49,538:INFO:PyCaret required dependencies:
2024-04-13 19:38:49,538:INFO:                 pip: 23.3.1
2024-04-13 19:38:49,538:INFO:          setuptools: 68.2.2
2024-04-13 19:38:49,538:INFO:             pycaret: 3.3.0
2024-04-13 19:38:49,538:INFO:             IPython: 8.23.0
2024-04-13 19:38:49,538:INFO:          ipywidgets: 8.1.2
2024-04-13 19:38:49,538:INFO:                tqdm: 4.66.2
2024-04-13 19:38:49,538:INFO:               numpy: 1.26.4
2024-04-13 19:38:49,538:INFO:              pandas: 2.1.4
2024-04-13 19:38:49,538:INFO:              jinja2: 3.1.3
2024-04-13 19:38:49,538:INFO:               scipy: 1.11.4
2024-04-13 19:38:49,538:INFO:              joblib: 1.3.0
2024-04-13 19:38:49,538:INFO:             sklearn: 1.4.2
2024-04-13 19:38:49,538:INFO:                pyod: 1.1.3
2024-04-13 19:38:49,538:INFO:            imblearn: 0.12.2
2024-04-13 19:38:49,538:INFO:   category_encoders: 2.6.3
2024-04-13 19:38:49,538:INFO:            lightgbm: 4.3.0
2024-04-13 19:38:49,539:INFO:               numba: 0.59.1
2024-04-13 19:38:49,539:INFO:            requests: 2.31.0
2024-04-13 19:38:49,539:INFO:          matplotlib: 3.7.5
2024-04-13 19:38:49,539:INFO:          scikitplot: 0.3.7
2024-04-13 19:38:49,539:INFO:         yellowbrick: 1.5
2024-04-13 19:38:49,539:INFO:              plotly: 5.20.0
2024-04-13 19:38:49,539:INFO:    plotly-resampler: Not installed
2024-04-13 19:38:49,539:INFO:             kaleido: 0.2.1
2024-04-13 19:38:49,539:INFO:           schemdraw: 0.15
2024-04-13 19:38:49,539:INFO:         statsmodels: 0.14.1
2024-04-13 19:38:49,539:INFO:              sktime: 0.28.0
2024-04-13 19:38:49,539:INFO:               tbats: 1.1.3
2024-04-13 19:38:49,539:INFO:            pmdarima: 2.0.4
2024-04-13 19:38:49,539:INFO:              psutil: 5.9.8
2024-04-13 19:38:49,539:INFO:          markupsafe: 2.1.5
2024-04-13 19:38:49,539:INFO:             pickle5: Not installed
2024-04-13 19:38:49,539:INFO:         cloudpickle: 3.0.0
2024-04-13 19:38:49,539:INFO:         deprecation: 2.1.0
2024-04-13 19:38:49,539:INFO:              xxhash: 3.4.1
2024-04-13 19:38:49,539:INFO:           wurlitzer: Not installed
2024-04-13 19:38:49,539:INFO:PyCaret optional dependencies:
2024-04-13 19:38:49,539:INFO:                shap: Not installed
2024-04-13 19:38:49,539:INFO:           interpret: Not installed
2024-04-13 19:38:49,539:INFO:                umap: Not installed
2024-04-13 19:38:49,539:INFO:     ydata_profiling: Not installed
2024-04-13 19:38:49,539:INFO:  explainerdashboard: Not installed
2024-04-13 19:38:49,539:INFO:             autoviz: Not installed
2024-04-13 19:38:49,539:INFO:           fairlearn: Not installed
2024-04-13 19:38:49,539:INFO:          deepchecks: Not installed
2024-04-13 19:38:49,539:INFO:             xgboost: Not installed
2024-04-13 19:38:49,539:INFO:            catboost: Not installed
2024-04-13 19:38:49,539:INFO:              kmodes: Not installed
2024-04-13 19:38:49,539:INFO:             mlxtend: Not installed
2024-04-13 19:38:49,540:INFO:       statsforecast: Not installed
2024-04-13 19:38:49,540:INFO:        tune_sklearn: Not installed
2024-04-13 19:38:49,540:INFO:                 ray: Not installed
2024-04-13 19:38:49,540:INFO:            hyperopt: Not installed
2024-04-13 19:38:49,540:INFO:              optuna: Not installed
2024-04-13 19:38:49,540:INFO:               skopt: Not installed
2024-04-13 19:38:49,540:INFO:              mlflow: 2.11.3
2024-04-13 19:38:49,540:INFO:              gradio: Not installed
2024-04-13 19:38:49,540:INFO:             fastapi: Not installed
2024-04-13 19:38:49,540:INFO:             uvicorn: Not installed
2024-04-13 19:38:49,540:INFO:              m2cgen: Not installed
2024-04-13 19:38:49,540:INFO:           evidently: Not installed
2024-04-13 19:38:49,540:INFO:               fugue: Not installed
2024-04-13 19:38:49,540:INFO:           streamlit: Not installed
2024-04-13 19:38:49,540:INFO:             prophet: Not installed
2024-04-13 19:38:49,540:INFO:None
2024-04-13 19:38:49,540:INFO:Set up data.
2024-04-13 19:38:49,544:INFO:Set up folding strategy.
2024-04-13 19:38:49,544:INFO:Set up train/test split.
2024-04-13 19:38:49,544:INFO:Set up data.
2024-04-13 19:38:49,547:INFO:Set up index.
2024-04-13 19:38:49,547:INFO:Assigning column types.
2024-04-13 19:38:49,550:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:38:49,583:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:38:49,583:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:38:49,603:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,636:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:38:49,637:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:38:49,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,658:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:38:49,690:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:38:49,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,744:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:38:49,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,764:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:38:49,817:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:49,871:INFO:Preparing preprocessing pipeline...
2024-04-13 19:38:49,872:INFO:Set up label encoding.
2024-04-13 19:38:49,872:INFO:Set up simple imputation.
2024-04-13 19:38:49,872:INFO:Set up feature normalization.
2024-04-13 19:38:49,896:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:38:49,900:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:38:49,900:INFO:Creating final display dataframe.
2024-04-13 19:38:49,974:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                1532  
1                                       shot_distance  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                          (20285, 7)  
5                                          (20285, 7)  
6                                          (16228, 7)  
7                                           (4057, 7)  
8                                                   6  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               d413  
2024-04-13 19:38:50,030:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:50,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:50,084:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:50,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:38:50,084:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:38:50,085:INFO:setup() successfully completed in 0.55s...............
2024-04-13 19:38:50,086:INFO:Initializing compare_models()
2024-04-13 19:38:50,086:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE0AB850>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE0AB850>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:38:50,086:INFO:Checking exceptions
2024-04-13 19:38:50,090:INFO:Preparing display monitor
2024-04-13 19:38:50,104:INFO:Initializing Decision Tree Classifier
2024-04-13 19:38:50,104:INFO:Total runtime is 0.0 minutes
2024-04-13 19:38:50,107:INFO:SubProcess create_model() called ==================================
2024-04-13 19:38:50,107:INFO:Initializing create_model()
2024-04-13 19:38:50,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE0AB850>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE81C100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:38:50,107:INFO:Checking exceptions
2024-04-13 19:38:50,107:INFO:Importing libraries
2024-04-13 19:38:50,107:INFO:Copying training dataset
2024-04-13 19:38:50,113:INFO:Defining folds
2024-04-13 19:38:50,113:INFO:Declaring metric variables
2024-04-13 19:38:50,116:INFO:Importing untrained model
2024-04-13 19:38:50,118:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:38:50,123:INFO:Starting cross validation
2024-04-13 19:38:50,124:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:38:50,127:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:38:52,766:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:52,768:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,769:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,771:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,772:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,773:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,774:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,830:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:52,832:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,834:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,835:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,836:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,837:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,839:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,842:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:52,844:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,846:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,847:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:52,847:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:52,848:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,850:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,850:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,850:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,851:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,852:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,852:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,852:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,853:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:52,853:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,854:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,854:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,855:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,855:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,856:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,857:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,858:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,858:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:52,859:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,860:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,861:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,861:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,862:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,862:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,864:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,864:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,865:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,866:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,867:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,867:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:52,871:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,873:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,875:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,876:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:52,878:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:52,880:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:53,088:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:38:53,089:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:38:53,089:INFO:Initializing create_model()
2024-04-13 19:38:53,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE0AB850>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE81C100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:38:53,089:INFO:Checking exceptions
2024-04-13 19:38:53,089:INFO:Importing libraries
2024-04-13 19:38:53,089:INFO:Copying training dataset
2024-04-13 19:38:53,096:INFO:Defining folds
2024-04-13 19:38:53,096:INFO:Declaring metric variables
2024-04-13 19:38:53,099:INFO:Importing untrained model
2024-04-13 19:38:53,102:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:38:53,106:INFO:Starting cross validation
2024-04-13 19:38:53,107:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:38:53,110:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:38:55,602:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:55,604:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,604:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:55,606:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,606:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,608:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,609:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,610:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,610:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,611:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,611:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,612:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,699:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:55,700:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:55,701:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:55,702:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,703:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,703:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,704:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,704:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,704:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,705:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,706:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,706:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,707:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,707:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,708:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,708:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,708:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,708:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:55,709:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,710:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,710:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:55,710:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,711:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,712:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,712:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,712:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,713:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,713:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:55,714:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,715:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,715:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,716:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,716:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,716:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,717:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,717:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,717:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,718:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,719:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,721:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,722:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:55,724:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:55,906:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-04-13 19:38:55,906:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:38:55,907:INFO:Initializing Logistic Regression
2024-04-13 19:38:55,907:INFO:Total runtime is 0.0967150648434957 minutes
2024-04-13 19:38:55,910:INFO:SubProcess create_model() called ==================================
2024-04-13 19:38:55,910:INFO:Initializing create_model()
2024-04-13 19:38:55,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE0AB850>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE81C100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:38:55,910:INFO:Checking exceptions
2024-04-13 19:38:55,910:INFO:Importing libraries
2024-04-13 19:38:55,911:INFO:Copying training dataset
2024-04-13 19:38:55,917:INFO:Defining folds
2024-04-13 19:38:55,917:INFO:Declaring metric variables
2024-04-13 19:38:55,919:INFO:Importing untrained model
2024-04-13 19:38:55,922:INFO:Logistic Regression Imported successfully
2024-04-13 19:38:55,927:INFO:Starting cross validation
2024-04-13 19:38:55,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:38:55,932:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:38:59,576:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:59,591:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:59,591:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:59,591:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:59,591:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:59,591:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:59,591:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:59,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:38:59,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:59,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:59,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:59,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:59,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:38:59,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:38:59,701:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:38:59,701:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:38:59,701:INFO:Initializing create_model()
2024-04-13 19:38:59,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE0AB850>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE81C100>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:38:59,701:INFO:Checking exceptions
2024-04-13 19:38:59,701:INFO:Importing libraries
2024-04-13 19:38:59,701:INFO:Copying training dataset
2024-04-13 19:38:59,701:INFO:Defining folds
2024-04-13 19:38:59,701:INFO:Declaring metric variables
2024-04-13 19:38:59,713:INFO:Importing untrained model
2024-04-13 19:38:59,713:INFO:Logistic Regression Imported successfully
2024-04-13 19:38:59,720:INFO:Starting cross validation
2024-04-13 19:38:59,720:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:38:59,720:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:39:03,348:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:03,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:03,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:03,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:03,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:03,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:03,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:03,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:03,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:03,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:03,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:03,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:03,542:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-13 19:39:03,542:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:39:03,556:INFO:_master_model_container: 0
2024-04-13 19:39:03,556:INFO:_display_container: 2
2024-04-13 19:39:03,556:INFO:[]
2024-04-13 19:39:03,560:INFO:compare_models() successfully completed......................................
2024-04-13 19:39:23,301:INFO:PyCaret ClassificationExperiment
2024-04-13 19:39:23,301:INFO:Logging name: clf-default-name
2024-04-13 19:39:23,301:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:39:23,301:INFO:version 3.3.0
2024-04-13 19:39:23,301:INFO:Initializing setup()
2024-04-13 19:39:23,301:INFO:self.USI: c0eb
2024-04-13 19:39:23,301:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:39:23,301:INFO:Checking environment
2024-04-13 19:39:23,301:INFO:python_version: 3.10.14
2024-04-13 19:39:23,301:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:39:23,301:INFO:machine: AMD64
2024-04-13 19:39:23,301:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:39:23,304:INFO:Memory: svmem(total=34280943616, available=25510490112, percent=25.6, used=8770453504, free=25510490112)
2024-04-13 19:39:23,304:INFO:Physical Core: 8
2024-04-13 19:39:23,304:INFO:Logical Core: 16
2024-04-13 19:39:23,304:INFO:Checking libraries
2024-04-13 19:39:23,304:INFO:System:
2024-04-13 19:39:23,304:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:39:23,304:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:39:23,304:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:39:23,304:INFO:PyCaret required dependencies:
2024-04-13 19:39:23,304:INFO:                 pip: 23.3.1
2024-04-13 19:39:23,304:INFO:          setuptools: 68.2.2
2024-04-13 19:39:23,304:INFO:             pycaret: 3.3.0
2024-04-13 19:39:23,304:INFO:             IPython: 8.23.0
2024-04-13 19:39:23,304:INFO:          ipywidgets: 8.1.2
2024-04-13 19:39:23,304:INFO:                tqdm: 4.66.2
2024-04-13 19:39:23,304:INFO:               numpy: 1.26.4
2024-04-13 19:39:23,304:INFO:              pandas: 2.1.4
2024-04-13 19:39:23,304:INFO:              jinja2: 3.1.3
2024-04-13 19:39:23,304:INFO:               scipy: 1.11.4
2024-04-13 19:39:23,304:INFO:              joblib: 1.3.0
2024-04-13 19:39:23,304:INFO:             sklearn: 1.4.2
2024-04-13 19:39:23,304:INFO:                pyod: 1.1.3
2024-04-13 19:39:23,304:INFO:            imblearn: 0.12.2
2024-04-13 19:39:23,304:INFO:   category_encoders: 2.6.3
2024-04-13 19:39:23,306:INFO:            lightgbm: 4.3.0
2024-04-13 19:39:23,306:INFO:               numba: 0.59.1
2024-04-13 19:39:23,306:INFO:            requests: 2.31.0
2024-04-13 19:39:23,306:INFO:          matplotlib: 3.7.5
2024-04-13 19:39:23,306:INFO:          scikitplot: 0.3.7
2024-04-13 19:39:23,306:INFO:         yellowbrick: 1.5
2024-04-13 19:39:23,306:INFO:              plotly: 5.20.0
2024-04-13 19:39:23,306:INFO:    plotly-resampler: Not installed
2024-04-13 19:39:23,306:INFO:             kaleido: 0.2.1
2024-04-13 19:39:23,306:INFO:           schemdraw: 0.15
2024-04-13 19:39:23,306:INFO:         statsmodels: 0.14.1
2024-04-13 19:39:23,306:INFO:              sktime: 0.28.0
2024-04-13 19:39:23,306:INFO:               tbats: 1.1.3
2024-04-13 19:39:23,306:INFO:            pmdarima: 2.0.4
2024-04-13 19:39:23,306:INFO:              psutil: 5.9.8
2024-04-13 19:39:23,306:INFO:          markupsafe: 2.1.5
2024-04-13 19:39:23,306:INFO:             pickle5: Not installed
2024-04-13 19:39:23,306:INFO:         cloudpickle: 3.0.0
2024-04-13 19:39:23,306:INFO:         deprecation: 2.1.0
2024-04-13 19:39:23,306:INFO:              xxhash: 3.4.1
2024-04-13 19:39:23,306:INFO:           wurlitzer: Not installed
2024-04-13 19:39:23,306:INFO:PyCaret optional dependencies:
2024-04-13 19:39:23,306:INFO:                shap: Not installed
2024-04-13 19:39:23,306:INFO:           interpret: Not installed
2024-04-13 19:39:23,306:INFO:                umap: Not installed
2024-04-13 19:39:23,306:INFO:     ydata_profiling: Not installed
2024-04-13 19:39:23,306:INFO:  explainerdashboard: Not installed
2024-04-13 19:39:23,306:INFO:             autoviz: Not installed
2024-04-13 19:39:23,306:INFO:           fairlearn: Not installed
2024-04-13 19:39:23,306:INFO:          deepchecks: Not installed
2024-04-13 19:39:23,307:INFO:             xgboost: Not installed
2024-04-13 19:39:23,307:INFO:            catboost: Not installed
2024-04-13 19:39:23,307:INFO:              kmodes: Not installed
2024-04-13 19:39:23,307:INFO:             mlxtend: Not installed
2024-04-13 19:39:23,307:INFO:       statsforecast: Not installed
2024-04-13 19:39:23,307:INFO:        tune_sklearn: Not installed
2024-04-13 19:39:23,307:INFO:                 ray: Not installed
2024-04-13 19:39:23,307:INFO:            hyperopt: Not installed
2024-04-13 19:39:23,307:INFO:              optuna: Not installed
2024-04-13 19:39:23,307:INFO:               skopt: Not installed
2024-04-13 19:39:23,307:INFO:              mlflow: 2.11.3
2024-04-13 19:39:23,307:INFO:              gradio: Not installed
2024-04-13 19:39:23,307:INFO:             fastapi: Not installed
2024-04-13 19:39:23,307:INFO:             uvicorn: Not installed
2024-04-13 19:39:23,307:INFO:              m2cgen: Not installed
2024-04-13 19:39:23,307:INFO:           evidently: Not installed
2024-04-13 19:39:23,307:INFO:               fugue: Not installed
2024-04-13 19:39:23,307:INFO:           streamlit: Not installed
2024-04-13 19:39:23,307:INFO:             prophet: Not installed
2024-04-13 19:39:23,307:INFO:None
2024-04-13 19:39:23,307:INFO:Set up data.
2024-04-13 19:39:23,310:INFO:Set up folding strategy.
2024-04-13 19:39:23,310:INFO:Set up train/test split.
2024-04-13 19:39:23,310:INFO:Set up data.
2024-04-13 19:39:23,313:INFO:Set up index.
2024-04-13 19:39:23,313:INFO:Assigning column types.
2024-04-13 19:39:23,317:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:39:23,344:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:39:23,344:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:39:23,371:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,400:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:39:23,400:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:39:23,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,414:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:39:23,444:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:39:23,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,507:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:39:23,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,531:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:39:23,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,625:INFO:Preparing preprocessing pipeline...
2024-04-13 19:39:23,625:INFO:Set up label encoding.
2024-04-13 19:39:23,625:INFO:Set up simple imputation.
2024-04-13 19:39:23,625:INFO:Set up feature normalization.
2024-04-13 19:39:23,656:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:39:23,656:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:39:23,656:INFO:Creating final display dataframe.
2024-04-13 19:39:23,734:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                6016  
1                                       shot_distance  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                          (20285, 7)  
5                                          (20285, 7)  
6                                          (16228, 7)  
7                                           (4057, 7)  
8                                                   6  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               c0eb  
2024-04-13 19:39:23,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:39:23,844:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:39:23,844:INFO:setup() successfully completed in 0.54s...............
2024-04-13 19:39:23,844:INFO:Initializing compare_models()
2024-04-13 19:39:23,844:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE423610>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=5, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE423610>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 5, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:39:23,844:INFO:Checking exceptions
2024-04-13 19:39:23,844:INFO:Preparing display monitor
2024-04-13 19:39:23,873:INFO:Initializing Decision Tree Classifier
2024-04-13 19:39:23,873:INFO:Total runtime is 0.0 minutes
2024-04-13 19:39:23,873:INFO:SubProcess create_model() called ==================================
2024-04-13 19:39:23,873:INFO:Initializing create_model()
2024-04-13 19:39:23,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE423610>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE0703A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:39:23,873:INFO:Checking exceptions
2024-04-13 19:39:23,873:INFO:Importing libraries
2024-04-13 19:39:23,873:INFO:Copying training dataset
2024-04-13 19:39:23,882:INFO:Defining folds
2024-04-13 19:39:23,882:INFO:Declaring metric variables
2024-04-13 19:39:23,885:INFO:Importing untrained model
2024-04-13 19:39:23,886:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:39:23,886:INFO:Starting cross validation
2024-04-13 19:39:23,893:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:39:23,896:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:39:26,496:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:26,498:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,500:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,501:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,503:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,503:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:26,505:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,506:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,507:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,507:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:26,508:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,509:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,510:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,510:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,512:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,512:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,514:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,514:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,515:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,516:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,517:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,518:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:26,519:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:26,519:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:26,520:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,522:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,522:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,522:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,523:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,524:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,524:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,524:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,525:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,526:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,526:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,527:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,527:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,528:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,528:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,529:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,529:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:26,529:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,531:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,531:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,533:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,534:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,536:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,537:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,538:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,543:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:26,546:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,548:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,550:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,551:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,553:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:26,555:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:26,731:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:39:26,731:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:39:26,732:INFO:Initializing create_model()
2024-04-13 19:39:26,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE423610>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE0703A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:39:26,732:INFO:Checking exceptions
2024-04-13 19:39:26,732:INFO:Importing libraries
2024-04-13 19:39:26,732:INFO:Copying training dataset
2024-04-13 19:39:26,739:INFO:Defining folds
2024-04-13 19:39:26,739:INFO:Declaring metric variables
2024-04-13 19:39:26,741:INFO:Importing untrained model
2024-04-13 19:39:26,744:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:39:26,748:INFO:Starting cross validation
2024-04-13 19:39:26,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:39:26,753:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:39:29,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:29,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,294:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:29,294:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,294:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,310:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,326:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,327:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:29,327:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:29,415:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-04-13 19:39:29,415:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:39:29,431:INFO:Initializing Logistic Regression
2024-04-13 19:39:29,431:INFO:Total runtime is 0.09263569116592407 minutes
2024-04-13 19:39:29,431:INFO:SubProcess create_model() called ==================================
2024-04-13 19:39:29,431:INFO:Initializing create_model()
2024-04-13 19:39:29,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE423610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE0703A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:39:29,431:INFO:Checking exceptions
2024-04-13 19:39:29,431:INFO:Importing libraries
2024-04-13 19:39:29,431:INFO:Copying training dataset
2024-04-13 19:39:29,441:INFO:Defining folds
2024-04-13 19:39:29,441:INFO:Declaring metric variables
2024-04-13 19:39:29,444:INFO:Importing untrained model
2024-04-13 19:39:29,444:INFO:Logistic Regression Imported successfully
2024-04-13 19:39:29,451:INFO:Starting cross validation
2024-04-13 19:39:29,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:39:29,456:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:39:32,945:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:32,947:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:32,949:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:32,950:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:32,951:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:32,951:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:32,953:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:32,953:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:32,954:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:32,954:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:32,956:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:32,957:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:32,958:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:32,959:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:32,970:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:32,972:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:32,973:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:32,974:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:32,976:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:32,977:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:32,978:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:33,028:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:39:33,028:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:39:33,029:INFO:Initializing create_model()
2024-04-13 19:39:33,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE423610>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE0703A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:39:33,029:INFO:Checking exceptions
2024-04-13 19:39:33,029:INFO:Importing libraries
2024-04-13 19:39:33,029:INFO:Copying training dataset
2024-04-13 19:39:33,036:INFO:Defining folds
2024-04-13 19:39:33,036:INFO:Declaring metric variables
2024-04-13 19:39:33,039:INFO:Importing untrained model
2024-04-13 19:39:33,042:INFO:Logistic Regression Imported successfully
2024-04-13 19:39:33,046:INFO:Starting cross validation
2024-04-13 19:39:33,047:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:39:33,051:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:39:36,788:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:36,793:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,796:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,798:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,802:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,804:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,806:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,816:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:36,819:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,819:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:36,821:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,822:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,823:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,823:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,825:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,825:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,826:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,827:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,827:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,828:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,828:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,829:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:39:36,831:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,832:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,834:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,835:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,836:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:39:36,837:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:39:36,962:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-13 19:39:36,962:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:39:36,973:INFO:_master_model_container: 0
2024-04-13 19:39:36,973:INFO:_display_container: 2
2024-04-13 19:39:36,973:INFO:[]
2024-04-13 19:39:36,973:INFO:compare_models() successfully completed......................................
2024-04-13 19:55:17,202:INFO:PyCaret ClassificationExperiment
2024-04-13 19:55:17,203:INFO:Logging name: clf-default-name
2024-04-13 19:55:17,203:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:55:17,203:INFO:version 3.3.0
2024-04-13 19:55:17,203:INFO:Initializing setup()
2024-04-13 19:55:17,203:INFO:self.USI: 4906
2024-04-13 19:55:17,203:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:55:17,203:INFO:Checking environment
2024-04-13 19:55:17,203:INFO:python_version: 3.10.14
2024-04-13 19:55:17,203:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:55:17,203:INFO:machine: AMD64
2024-04-13 19:55:17,203:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:55:17,205:INFO:Memory: svmem(total=34280943616, available=25322323968, percent=26.1, used=8958619648, free=25322323968)
2024-04-13 19:55:17,206:INFO:Physical Core: 8
2024-04-13 19:55:17,206:INFO:Logical Core: 16
2024-04-13 19:55:17,206:INFO:Checking libraries
2024-04-13 19:55:17,206:INFO:System:
2024-04-13 19:55:17,206:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:55:17,206:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:55:17,206:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:55:17,206:INFO:PyCaret required dependencies:
2024-04-13 19:55:17,206:INFO:                 pip: 23.3.1
2024-04-13 19:55:17,206:INFO:          setuptools: 68.2.2
2024-04-13 19:55:17,206:INFO:             pycaret: 3.3.0
2024-04-13 19:55:17,206:INFO:             IPython: 8.23.0
2024-04-13 19:55:17,206:INFO:          ipywidgets: 8.1.2
2024-04-13 19:55:17,206:INFO:                tqdm: 4.66.2
2024-04-13 19:55:17,206:INFO:               numpy: 1.26.4
2024-04-13 19:55:17,206:INFO:              pandas: 2.1.4
2024-04-13 19:55:17,206:INFO:              jinja2: 3.1.3
2024-04-13 19:55:17,206:INFO:               scipy: 1.11.4
2024-04-13 19:55:17,206:INFO:              joblib: 1.3.0
2024-04-13 19:55:17,206:INFO:             sklearn: 1.4.2
2024-04-13 19:55:17,206:INFO:                pyod: 1.1.3
2024-04-13 19:55:17,206:INFO:            imblearn: 0.12.2
2024-04-13 19:55:17,206:INFO:   category_encoders: 2.6.3
2024-04-13 19:55:17,206:INFO:            lightgbm: 4.3.0
2024-04-13 19:55:17,206:INFO:               numba: 0.59.1
2024-04-13 19:55:17,206:INFO:            requests: 2.31.0
2024-04-13 19:55:17,206:INFO:          matplotlib: 3.7.5
2024-04-13 19:55:17,206:INFO:          scikitplot: 0.3.7
2024-04-13 19:55:17,206:INFO:         yellowbrick: 1.5
2024-04-13 19:55:17,206:INFO:              plotly: 5.20.0
2024-04-13 19:55:17,207:INFO:    plotly-resampler: Not installed
2024-04-13 19:55:17,207:INFO:             kaleido: 0.2.1
2024-04-13 19:55:17,207:INFO:           schemdraw: 0.15
2024-04-13 19:55:17,207:INFO:         statsmodels: 0.14.1
2024-04-13 19:55:17,207:INFO:              sktime: 0.28.0
2024-04-13 19:55:17,207:INFO:               tbats: 1.1.3
2024-04-13 19:55:17,207:INFO:            pmdarima: 2.0.4
2024-04-13 19:55:17,207:INFO:              psutil: 5.9.8
2024-04-13 19:55:17,207:INFO:          markupsafe: 2.1.5
2024-04-13 19:55:17,207:INFO:             pickle5: Not installed
2024-04-13 19:55:17,207:INFO:         cloudpickle: 3.0.0
2024-04-13 19:55:17,207:INFO:         deprecation: 2.1.0
2024-04-13 19:55:17,207:INFO:              xxhash: 3.4.1
2024-04-13 19:55:17,207:INFO:           wurlitzer: Not installed
2024-04-13 19:55:17,207:INFO:PyCaret optional dependencies:
2024-04-13 19:55:17,207:INFO:                shap: Not installed
2024-04-13 19:55:17,207:INFO:           interpret: Not installed
2024-04-13 19:55:17,207:INFO:                umap: Not installed
2024-04-13 19:55:17,207:INFO:     ydata_profiling: Not installed
2024-04-13 19:55:17,207:INFO:  explainerdashboard: Not installed
2024-04-13 19:55:17,207:INFO:             autoviz: Not installed
2024-04-13 19:55:17,207:INFO:           fairlearn: Not installed
2024-04-13 19:55:17,207:INFO:          deepchecks: Not installed
2024-04-13 19:55:17,207:INFO:             xgboost: Not installed
2024-04-13 19:55:17,207:INFO:            catboost: Not installed
2024-04-13 19:55:17,207:INFO:              kmodes: Not installed
2024-04-13 19:55:17,207:INFO:             mlxtend: Not installed
2024-04-13 19:55:17,207:INFO:       statsforecast: Not installed
2024-04-13 19:55:17,207:INFO:        tune_sklearn: Not installed
2024-04-13 19:55:17,207:INFO:                 ray: Not installed
2024-04-13 19:55:17,207:INFO:            hyperopt: Not installed
2024-04-13 19:55:17,207:INFO:              optuna: Not installed
2024-04-13 19:55:17,207:INFO:               skopt: Not installed
2024-04-13 19:55:17,207:INFO:              mlflow: 2.11.3
2024-04-13 19:55:17,207:INFO:              gradio: Not installed
2024-04-13 19:55:17,208:INFO:             fastapi: Not installed
2024-04-13 19:55:17,208:INFO:             uvicorn: Not installed
2024-04-13 19:55:17,208:INFO:              m2cgen: Not installed
2024-04-13 19:55:17,208:INFO:           evidently: Not installed
2024-04-13 19:55:17,208:INFO:               fugue: Not installed
2024-04-13 19:55:17,208:INFO:           streamlit: Not installed
2024-04-13 19:55:17,208:INFO:             prophet: Not installed
2024-04-13 19:55:17,208:INFO:None
2024-04-13 19:55:17,208:INFO:Set up data.
2024-04-13 19:55:17,211:INFO:Set up folding strategy.
2024-04-13 19:55:17,212:INFO:Set up train/test split.
2024-04-13 19:55:17,212:INFO:Set up data.
2024-04-13 19:55:17,214:INFO:Set up index.
2024-04-13 19:55:17,215:INFO:Assigning column types.
2024-04-13 19:55:17,218:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:55:17,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:55:17,251:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:55:17,272:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,305:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:55:17,306:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:55:17,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,326:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:55:17,359:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:55:17,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,412:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:55:17,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,433:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:55:17,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,540:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:55:17,541:INFO:Preparing preprocessing pipeline...
2024-04-13 19:55:17,542:INFO:Set up label encoding.
2024-04-13 19:55:17,542:INFO:Set up simple imputation.
2024-04-13 19:55:17,542:INFO:Set up feature normalization.
2024-04-13 19:55:17,567:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:55:17,570:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:55:17,570:INFO:Creating final display dataframe.
2024-04-13 19:56:07,864:INFO:PyCaret ClassificationExperiment
2024-04-13 19:56:07,864:INFO:Logging name: clf-default-name
2024-04-13 19:56:07,864:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:56:07,864:INFO:version 3.3.0
2024-04-13 19:56:07,864:INFO:Initializing setup()
2024-04-13 19:56:07,864:INFO:self.USI: de10
2024-04-13 19:56:07,864:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:56:07,864:INFO:Checking environment
2024-04-13 19:56:07,864:INFO:python_version: 3.10.14
2024-04-13 19:56:07,864:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:56:07,864:INFO:machine: AMD64
2024-04-13 19:56:07,864:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:56:07,867:INFO:Memory: svmem(total=34280943616, available=25312829440, percent=26.2, used=8968114176, free=25312829440)
2024-04-13 19:56:07,867:INFO:Physical Core: 8
2024-04-13 19:56:07,867:INFO:Logical Core: 16
2024-04-13 19:56:07,867:INFO:Checking libraries
2024-04-13 19:56:07,867:INFO:System:
2024-04-13 19:56:07,867:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:56:07,867:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:56:07,867:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:56:07,867:INFO:PyCaret required dependencies:
2024-04-13 19:56:07,867:INFO:                 pip: 23.3.1
2024-04-13 19:56:07,867:INFO:          setuptools: 68.2.2
2024-04-13 19:56:07,867:INFO:             pycaret: 3.3.0
2024-04-13 19:56:07,867:INFO:             IPython: 8.23.0
2024-04-13 19:56:07,868:INFO:          ipywidgets: 8.1.2
2024-04-13 19:56:07,868:INFO:                tqdm: 4.66.2
2024-04-13 19:56:07,868:INFO:               numpy: 1.26.4
2024-04-13 19:56:07,868:INFO:              pandas: 2.1.4
2024-04-13 19:56:07,868:INFO:              jinja2: 3.1.3
2024-04-13 19:56:07,868:INFO:               scipy: 1.11.4
2024-04-13 19:56:07,868:INFO:              joblib: 1.3.0
2024-04-13 19:56:07,868:INFO:             sklearn: 1.4.2
2024-04-13 19:56:07,868:INFO:                pyod: 1.1.3
2024-04-13 19:56:07,868:INFO:            imblearn: 0.12.2
2024-04-13 19:56:07,868:INFO:   category_encoders: 2.6.3
2024-04-13 19:56:07,868:INFO:            lightgbm: 4.3.0
2024-04-13 19:56:07,868:INFO:               numba: 0.59.1
2024-04-13 19:56:07,868:INFO:            requests: 2.31.0
2024-04-13 19:56:07,868:INFO:          matplotlib: 3.7.5
2024-04-13 19:56:07,868:INFO:          scikitplot: 0.3.7
2024-04-13 19:56:07,868:INFO:         yellowbrick: 1.5
2024-04-13 19:56:07,868:INFO:              plotly: 5.20.0
2024-04-13 19:56:07,868:INFO:    plotly-resampler: Not installed
2024-04-13 19:56:07,868:INFO:             kaleido: 0.2.1
2024-04-13 19:56:07,868:INFO:           schemdraw: 0.15
2024-04-13 19:56:07,868:INFO:         statsmodels: 0.14.1
2024-04-13 19:56:07,868:INFO:              sktime: 0.28.0
2024-04-13 19:56:07,868:INFO:               tbats: 1.1.3
2024-04-13 19:56:07,868:INFO:            pmdarima: 2.0.4
2024-04-13 19:56:07,868:INFO:              psutil: 5.9.8
2024-04-13 19:56:07,868:INFO:          markupsafe: 2.1.5
2024-04-13 19:56:07,868:INFO:             pickle5: Not installed
2024-04-13 19:56:07,868:INFO:         cloudpickle: 3.0.0
2024-04-13 19:56:07,868:INFO:         deprecation: 2.1.0
2024-04-13 19:56:07,868:INFO:              xxhash: 3.4.1
2024-04-13 19:56:07,868:INFO:           wurlitzer: Not installed
2024-04-13 19:56:07,868:INFO:PyCaret optional dependencies:
2024-04-13 19:56:07,869:INFO:                shap: Not installed
2024-04-13 19:56:07,869:INFO:           interpret: Not installed
2024-04-13 19:56:07,869:INFO:                umap: Not installed
2024-04-13 19:56:07,869:INFO:     ydata_profiling: Not installed
2024-04-13 19:56:07,869:INFO:  explainerdashboard: Not installed
2024-04-13 19:56:07,869:INFO:             autoviz: Not installed
2024-04-13 19:56:07,869:INFO:           fairlearn: Not installed
2024-04-13 19:56:07,869:INFO:          deepchecks: Not installed
2024-04-13 19:56:07,869:INFO:             xgboost: Not installed
2024-04-13 19:56:07,869:INFO:            catboost: Not installed
2024-04-13 19:56:07,869:INFO:              kmodes: Not installed
2024-04-13 19:56:07,869:INFO:             mlxtend: Not installed
2024-04-13 19:56:07,869:INFO:       statsforecast: Not installed
2024-04-13 19:56:07,869:INFO:        tune_sklearn: Not installed
2024-04-13 19:56:07,869:INFO:                 ray: Not installed
2024-04-13 19:56:07,869:INFO:            hyperopt: Not installed
2024-04-13 19:56:07,869:INFO:              optuna: Not installed
2024-04-13 19:56:07,869:INFO:               skopt: Not installed
2024-04-13 19:56:07,869:INFO:              mlflow: 2.11.3
2024-04-13 19:56:07,869:INFO:              gradio: Not installed
2024-04-13 19:56:07,869:INFO:             fastapi: Not installed
2024-04-13 19:56:07,869:INFO:             uvicorn: Not installed
2024-04-13 19:56:07,869:INFO:              m2cgen: Not installed
2024-04-13 19:56:07,869:INFO:           evidently: Not installed
2024-04-13 19:56:07,869:INFO:               fugue: Not installed
2024-04-13 19:56:07,869:INFO:           streamlit: Not installed
2024-04-13 19:56:07,869:INFO:             prophet: Not installed
2024-04-13 19:56:07,869:INFO:None
2024-04-13 19:56:07,869:INFO:Set up data.
2024-04-13 19:56:07,873:INFO:Set up folding strategy.
2024-04-13 19:56:07,873:INFO:Set up train/test split.
2024-04-13 19:56:07,873:INFO:Set up data.
2024-04-13 19:56:07,875:INFO:Set up index.
2024-04-13 19:56:07,876:INFO:Assigning column types.
2024-04-13 19:56:07,879:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:56:07,912:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:56:07,912:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:07,932:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:07,932:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:07,965:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:56:07,965:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:07,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:07,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:07,986:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:56:08,018:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:08,038:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:08,038:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:08,071:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:08,091:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:08,091:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:08,091:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:56:08,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:08,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:08,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:08,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:08,199:INFO:Preparing preprocessing pipeline...
2024-04-13 19:56:08,200:INFO:Set up label encoding.
2024-04-13 19:56:08,200:INFO:Set up simple imputation.
2024-04-13 19:56:08,200:INFO:Set up feature normalization.
2024-04-13 19:56:08,224:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:56:08,227:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:56:08,227:INFO:Creating final display dataframe.
2024-04-13 19:56:18,014:INFO:PyCaret ClassificationExperiment
2024-04-13 19:56:18,014:INFO:Logging name: clf-default-name
2024-04-13 19:56:18,014:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:56:18,014:INFO:version 3.3.0
2024-04-13 19:56:18,014:INFO:Initializing setup()
2024-04-13 19:56:18,014:INFO:self.USI: 347c
2024-04-13 19:56:18,014:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:56:18,014:INFO:Checking environment
2024-04-13 19:56:18,014:INFO:python_version: 3.10.14
2024-04-13 19:56:18,014:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:56:18,014:INFO:machine: AMD64
2024-04-13 19:56:18,014:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:56:18,017:INFO:Memory: svmem(total=34280943616, available=25314500608, percent=26.2, used=8966443008, free=25314500608)
2024-04-13 19:56:18,017:INFO:Physical Core: 8
2024-04-13 19:56:18,017:INFO:Logical Core: 16
2024-04-13 19:56:18,017:INFO:Checking libraries
2024-04-13 19:56:18,017:INFO:System:
2024-04-13 19:56:18,017:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:56:18,017:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:56:18,017:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:56:18,017:INFO:PyCaret required dependencies:
2024-04-13 19:56:18,017:INFO:                 pip: 23.3.1
2024-04-13 19:56:18,017:INFO:          setuptools: 68.2.2
2024-04-13 19:56:18,017:INFO:             pycaret: 3.3.0
2024-04-13 19:56:18,017:INFO:             IPython: 8.23.0
2024-04-13 19:56:18,018:INFO:          ipywidgets: 8.1.2
2024-04-13 19:56:18,018:INFO:                tqdm: 4.66.2
2024-04-13 19:56:18,018:INFO:               numpy: 1.26.4
2024-04-13 19:56:18,018:INFO:              pandas: 2.1.4
2024-04-13 19:56:18,018:INFO:              jinja2: 3.1.3
2024-04-13 19:56:18,018:INFO:               scipy: 1.11.4
2024-04-13 19:56:18,018:INFO:              joblib: 1.3.0
2024-04-13 19:56:18,018:INFO:             sklearn: 1.4.2
2024-04-13 19:56:18,018:INFO:                pyod: 1.1.3
2024-04-13 19:56:18,018:INFO:            imblearn: 0.12.2
2024-04-13 19:56:18,018:INFO:   category_encoders: 2.6.3
2024-04-13 19:56:18,018:INFO:            lightgbm: 4.3.0
2024-04-13 19:56:18,018:INFO:               numba: 0.59.1
2024-04-13 19:56:18,018:INFO:            requests: 2.31.0
2024-04-13 19:56:18,018:INFO:          matplotlib: 3.7.5
2024-04-13 19:56:18,018:INFO:          scikitplot: 0.3.7
2024-04-13 19:56:18,018:INFO:         yellowbrick: 1.5
2024-04-13 19:56:18,018:INFO:              plotly: 5.20.0
2024-04-13 19:56:18,018:INFO:    plotly-resampler: Not installed
2024-04-13 19:56:18,018:INFO:             kaleido: 0.2.1
2024-04-13 19:56:18,018:INFO:           schemdraw: 0.15
2024-04-13 19:56:18,018:INFO:         statsmodels: 0.14.1
2024-04-13 19:56:18,018:INFO:              sktime: 0.28.0
2024-04-13 19:56:18,018:INFO:               tbats: 1.1.3
2024-04-13 19:56:18,018:INFO:            pmdarima: 2.0.4
2024-04-13 19:56:18,018:INFO:              psutil: 5.9.8
2024-04-13 19:56:18,018:INFO:          markupsafe: 2.1.5
2024-04-13 19:56:18,018:INFO:             pickle5: Not installed
2024-04-13 19:56:18,018:INFO:         cloudpickle: 3.0.0
2024-04-13 19:56:18,018:INFO:         deprecation: 2.1.0
2024-04-13 19:56:18,018:INFO:              xxhash: 3.4.1
2024-04-13 19:56:18,018:INFO:           wurlitzer: Not installed
2024-04-13 19:56:18,019:INFO:PyCaret optional dependencies:
2024-04-13 19:56:18,019:INFO:                shap: Not installed
2024-04-13 19:56:18,019:INFO:           interpret: Not installed
2024-04-13 19:56:18,019:INFO:                umap: Not installed
2024-04-13 19:56:18,019:INFO:     ydata_profiling: Not installed
2024-04-13 19:56:18,019:INFO:  explainerdashboard: Not installed
2024-04-13 19:56:18,019:INFO:             autoviz: Not installed
2024-04-13 19:56:18,019:INFO:           fairlearn: Not installed
2024-04-13 19:56:18,019:INFO:          deepchecks: Not installed
2024-04-13 19:56:18,019:INFO:             xgboost: Not installed
2024-04-13 19:56:18,019:INFO:            catboost: Not installed
2024-04-13 19:56:18,019:INFO:              kmodes: Not installed
2024-04-13 19:56:18,019:INFO:             mlxtend: Not installed
2024-04-13 19:56:18,019:INFO:       statsforecast: Not installed
2024-04-13 19:56:18,019:INFO:        tune_sklearn: Not installed
2024-04-13 19:56:18,019:INFO:                 ray: Not installed
2024-04-13 19:56:18,019:INFO:            hyperopt: Not installed
2024-04-13 19:56:18,019:INFO:              optuna: Not installed
2024-04-13 19:56:18,019:INFO:               skopt: Not installed
2024-04-13 19:56:18,019:INFO:              mlflow: 2.11.3
2024-04-13 19:56:18,019:INFO:              gradio: Not installed
2024-04-13 19:56:18,019:INFO:             fastapi: Not installed
2024-04-13 19:56:18,019:INFO:             uvicorn: Not installed
2024-04-13 19:56:18,019:INFO:              m2cgen: Not installed
2024-04-13 19:56:18,019:INFO:           evidently: Not installed
2024-04-13 19:56:18,019:INFO:               fugue: Not installed
2024-04-13 19:56:18,019:INFO:           streamlit: Not installed
2024-04-13 19:56:18,019:INFO:             prophet: Not installed
2024-04-13 19:56:18,019:INFO:None
2024-04-13 19:56:18,019:INFO:Set up data.
2024-04-13 19:56:18,023:INFO:Set up folding strategy.
2024-04-13 19:56:18,023:INFO:Set up train/test split.
2024-04-13 19:56:18,023:INFO:Set up data.
2024-04-13 19:56:18,026:INFO:Set up index.
2024-04-13 19:56:18,026:INFO:Assigning column types.
2024-04-13 19:56:18,030:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:56:18,062:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:56:18,062:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:18,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,083:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,116:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:56:18,116:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:18,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,137:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:56:18,170:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:18,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,224:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:18,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,245:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:56:18,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,351:INFO:Preparing preprocessing pipeline...
2024-04-13 19:56:18,352:INFO:Set up label encoding.
2024-04-13 19:56:18,353:INFO:Set up simple imputation.
2024-04-13 19:56:18,353:INFO:Set up feature normalization.
2024-04-13 19:56:18,378:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:56:18,381:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:56:18,381:INFO:Creating final display dataframe.
2024-04-13 19:56:18,453:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                1421  
1                                       shot_distance  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                          (20285, 7)  
5                                          (20285, 7)  
6                                          (16228, 7)  
7                                           (4057, 7)  
8                                                   6  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               347c  
2024-04-13 19:56:18,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:18,565:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:56:18,566:INFO:setup() successfully completed in 0.55s...............
2024-04-13 19:56:18,567:INFO:Initializing compare_models()
2024-04-13 19:56:18,567:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC0C8D30>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC0C8D30>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:56:18,567:INFO:Checking exceptions
2024-04-13 19:56:18,570:INFO:Preparing display monitor
2024-04-13 19:56:18,586:INFO:Initializing Decision Tree Classifier
2024-04-13 19:56:18,586:INFO:Total runtime is 0.0 minutes
2024-04-13 19:56:18,588:INFO:SubProcess create_model() called ==================================
2024-04-13 19:56:18,588:INFO:Initializing create_model()
2024-04-13 19:56:18,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC0C8D30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AEB16FB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:56:18,588:INFO:Checking exceptions
2024-04-13 19:56:18,589:INFO:Importing libraries
2024-04-13 19:56:18,589:INFO:Copying training dataset
2024-04-13 19:56:18,595:INFO:Defining folds
2024-04-13 19:56:18,595:INFO:Declaring metric variables
2024-04-13 19:56:18,597:INFO:Importing untrained model
2024-04-13 19:56:18,599:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:56:18,604:INFO:Starting cross validation
2024-04-13 19:56:18,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:56:18,608:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:56:21,175:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:21,178:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,180:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,182:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,183:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,185:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,187:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,206:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:21,210:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,212:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,214:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,215:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,218:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,219:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,250:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:21,253:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,254:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,255:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,257:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,259:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,261:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:21,264:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,266:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,268:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,269:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:21,270:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,271:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:21,271:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:21,271:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,272:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,273:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,273:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,273:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,274:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,274:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,275:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,275:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,275:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,276:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,276:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,277:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,277:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,277:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,278:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,279:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,279:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,280:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,280:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,280:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:21,283:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,284:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,286:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,287:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,289:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:21,290:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:21,477:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:56:21,478:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:56:21,478:INFO:Initializing create_model()
2024-04-13 19:56:21,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC0C8D30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AEB16FB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:56:21,478:INFO:Checking exceptions
2024-04-13 19:56:21,478:INFO:Importing libraries
2024-04-13 19:56:21,478:INFO:Copying training dataset
2024-04-13 19:56:21,485:INFO:Defining folds
2024-04-13 19:56:21,485:INFO:Declaring metric variables
2024-04-13 19:56:21,488:INFO:Importing untrained model
2024-04-13 19:56:21,491:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:56:21,495:INFO:Starting cross validation
2024-04-13 19:56:21,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:56:21,500:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:56:23,971:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:23,974:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:23,976:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:23,977:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:23,979:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:23,981:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:23,982:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:23,986:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:23,988:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:23,990:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:23,991:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:23,992:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:23,993:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:23,995:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,044:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:24,046:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,048:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,048:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:24,049:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,050:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,051:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,051:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,052:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:24,052:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,052:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,054:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,054:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,056:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,056:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,057:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,057:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,059:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,059:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,060:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,061:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,063:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:24,066:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,068:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,069:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:24,070:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,071:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:24,071:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,071:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,073:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,073:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,074:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,074:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,075:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,075:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,076:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,077:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,078:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,078:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,080:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,082:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:24,084:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:24,249:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-04-13 19:56:24,249:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:56:24,249:INFO:Initializing Logistic Regression
2024-04-13 19:56:24,249:INFO:Total runtime is 0.09439250628153482 minutes
2024-04-13 19:56:24,253:INFO:SubProcess create_model() called ==================================
2024-04-13 19:56:24,253:INFO:Initializing create_model()
2024-04-13 19:56:24,253:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC0C8D30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AEB16FB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:56:24,253:INFO:Checking exceptions
2024-04-13 19:56:24,253:INFO:Importing libraries
2024-04-13 19:56:24,253:INFO:Copying training dataset
2024-04-13 19:56:24,260:INFO:Defining folds
2024-04-13 19:56:24,260:INFO:Declaring metric variables
2024-04-13 19:56:24,263:INFO:Importing untrained model
2024-04-13 19:56:24,266:INFO:Logistic Regression Imported successfully
2024-04-13 19:56:24,271:INFO:Starting cross validation
2024-04-13 19:56:24,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:56:24,276:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:56:27,636:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:27,639:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:27,641:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:27,642:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:27,644:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:27,645:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:27,647:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:27,719:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:27,720:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:27,721:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:27,722:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:27,724:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:27,725:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:27,726:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:27,770:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:56:27,771:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:56:27,771:INFO:Initializing create_model()
2024-04-13 19:56:27,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC0C8D30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AEB16FB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:56:27,772:INFO:Checking exceptions
2024-04-13 19:56:27,772:INFO:Importing libraries
2024-04-13 19:56:27,772:INFO:Copying training dataset
2024-04-13 19:56:27,779:INFO:Defining folds
2024-04-13 19:56:27,779:INFO:Declaring metric variables
2024-04-13 19:56:27,782:INFO:Importing untrained model
2024-04-13 19:56:27,785:INFO:Logistic Regression Imported successfully
2024-04-13 19:56:27,789:INFO:Starting cross validation
2024-04-13 19:56:27,790:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:56:27,793:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:56:31,155:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:31,161:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,164:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,167:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,170:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,172:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,174:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,290:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:31,298:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,302:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,306:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,309:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,312:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,315:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,409:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:31,414:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,417:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,420:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,424:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,427:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,429:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,436:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:31,439:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,440:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,442:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,444:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,445:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,446:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,459:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:31,462:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,464:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,465:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,467:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,469:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,470:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,553:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:31,555:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,557:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,558:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,559:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,560:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,561:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,570:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:31,572:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,573:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,574:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,576:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,577:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:31,578:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:31,661:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-13 19:56:31,662:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:56:31,671:INFO:_master_model_container: 0
2024-04-13 19:56:31,671:INFO:_display_container: 2
2024-04-13 19:56:31,671:INFO:[]
2024-04-13 19:56:31,671:INFO:compare_models() successfully completed......................................
2024-04-13 19:56:43,613:INFO:PyCaret ClassificationExperiment
2024-04-13 19:56:43,613:INFO:Logging name: clf-default-name
2024-04-13 19:56:43,613:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:56:43,613:INFO:version 3.3.0
2024-04-13 19:56:43,613:INFO:Initializing setup()
2024-04-13 19:56:43,613:INFO:self.USI: 22eb
2024-04-13 19:56:43,614:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:56:43,614:INFO:Checking environment
2024-04-13 19:56:43,614:INFO:python_version: 3.10.14
2024-04-13 19:56:43,614:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:56:43,614:INFO:machine: AMD64
2024-04-13 19:56:43,614:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:56:43,616:INFO:Memory: svmem(total=34280943616, available=25315622912, percent=26.2, used=8965320704, free=25315622912)
2024-04-13 19:56:43,616:INFO:Physical Core: 8
2024-04-13 19:56:43,616:INFO:Logical Core: 16
2024-04-13 19:56:43,616:INFO:Checking libraries
2024-04-13 19:56:43,616:INFO:System:
2024-04-13 19:56:43,616:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:56:43,616:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:56:43,616:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:56:43,616:INFO:PyCaret required dependencies:
2024-04-13 19:56:43,617:INFO:                 pip: 23.3.1
2024-04-13 19:56:43,617:INFO:          setuptools: 68.2.2
2024-04-13 19:56:43,617:INFO:             pycaret: 3.3.0
2024-04-13 19:56:43,617:INFO:             IPython: 8.23.0
2024-04-13 19:56:43,617:INFO:          ipywidgets: 8.1.2
2024-04-13 19:56:43,617:INFO:                tqdm: 4.66.2
2024-04-13 19:56:43,617:INFO:               numpy: 1.26.4
2024-04-13 19:56:43,617:INFO:              pandas: 2.1.4
2024-04-13 19:56:43,617:INFO:              jinja2: 3.1.3
2024-04-13 19:56:43,617:INFO:               scipy: 1.11.4
2024-04-13 19:56:43,617:INFO:              joblib: 1.3.0
2024-04-13 19:56:43,617:INFO:             sklearn: 1.4.2
2024-04-13 19:56:43,617:INFO:                pyod: 1.1.3
2024-04-13 19:56:43,617:INFO:            imblearn: 0.12.2
2024-04-13 19:56:43,617:INFO:   category_encoders: 2.6.3
2024-04-13 19:56:43,617:INFO:            lightgbm: 4.3.0
2024-04-13 19:56:43,617:INFO:               numba: 0.59.1
2024-04-13 19:56:43,617:INFO:            requests: 2.31.0
2024-04-13 19:56:43,617:INFO:          matplotlib: 3.7.5
2024-04-13 19:56:43,617:INFO:          scikitplot: 0.3.7
2024-04-13 19:56:43,617:INFO:         yellowbrick: 1.5
2024-04-13 19:56:43,617:INFO:              plotly: 5.20.0
2024-04-13 19:56:43,617:INFO:    plotly-resampler: Not installed
2024-04-13 19:56:43,617:INFO:             kaleido: 0.2.1
2024-04-13 19:56:43,617:INFO:           schemdraw: 0.15
2024-04-13 19:56:43,617:INFO:         statsmodels: 0.14.1
2024-04-13 19:56:43,617:INFO:              sktime: 0.28.0
2024-04-13 19:56:43,617:INFO:               tbats: 1.1.3
2024-04-13 19:56:43,617:INFO:            pmdarima: 2.0.4
2024-04-13 19:56:43,617:INFO:              psutil: 5.9.8
2024-04-13 19:56:43,617:INFO:          markupsafe: 2.1.5
2024-04-13 19:56:43,617:INFO:             pickle5: Not installed
2024-04-13 19:56:43,618:INFO:         cloudpickle: 3.0.0
2024-04-13 19:56:43,618:INFO:         deprecation: 2.1.0
2024-04-13 19:56:43,618:INFO:              xxhash: 3.4.1
2024-04-13 19:56:43,618:INFO:           wurlitzer: Not installed
2024-04-13 19:56:43,618:INFO:PyCaret optional dependencies:
2024-04-13 19:56:43,618:INFO:                shap: Not installed
2024-04-13 19:56:43,618:INFO:           interpret: Not installed
2024-04-13 19:56:43,618:INFO:                umap: Not installed
2024-04-13 19:56:43,618:INFO:     ydata_profiling: Not installed
2024-04-13 19:56:43,618:INFO:  explainerdashboard: Not installed
2024-04-13 19:56:43,618:INFO:             autoviz: Not installed
2024-04-13 19:56:43,618:INFO:           fairlearn: Not installed
2024-04-13 19:56:43,618:INFO:          deepchecks: Not installed
2024-04-13 19:56:43,618:INFO:             xgboost: Not installed
2024-04-13 19:56:43,618:INFO:            catboost: Not installed
2024-04-13 19:56:43,618:INFO:              kmodes: Not installed
2024-04-13 19:56:43,618:INFO:             mlxtend: Not installed
2024-04-13 19:56:43,618:INFO:       statsforecast: Not installed
2024-04-13 19:56:43,618:INFO:        tune_sklearn: Not installed
2024-04-13 19:56:43,618:INFO:                 ray: Not installed
2024-04-13 19:56:43,618:INFO:            hyperopt: Not installed
2024-04-13 19:56:43,618:INFO:              optuna: Not installed
2024-04-13 19:56:43,618:INFO:               skopt: Not installed
2024-04-13 19:56:43,618:INFO:              mlflow: 2.11.3
2024-04-13 19:56:43,618:INFO:              gradio: Not installed
2024-04-13 19:56:43,618:INFO:             fastapi: Not installed
2024-04-13 19:56:43,618:INFO:             uvicorn: Not installed
2024-04-13 19:56:43,618:INFO:              m2cgen: Not installed
2024-04-13 19:56:43,618:INFO:           evidently: Not installed
2024-04-13 19:56:43,618:INFO:               fugue: Not installed
2024-04-13 19:56:43,618:INFO:           streamlit: Not installed
2024-04-13 19:56:43,618:INFO:             prophet: Not installed
2024-04-13 19:56:43,618:INFO:None
2024-04-13 19:56:43,618:INFO:Set up data.
2024-04-13 19:56:43,622:INFO:Set up folding strategy.
2024-04-13 19:56:43,622:INFO:Set up train/test split.
2024-04-13 19:56:43,622:INFO:Set up data.
2024-04-13 19:56:43,625:INFO:Set up index.
2024-04-13 19:56:43,625:INFO:Assigning column types.
2024-04-13 19:56:43,629:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:56:43,661:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:56:43,661:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:43,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,714:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:56:43,715:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:43,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,735:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:56:43,768:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:43,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,822:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:56:43,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,842:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,842:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:56:43,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:43,949:INFO:Preparing preprocessing pipeline...
2024-04-13 19:56:43,950:INFO:Set up label encoding.
2024-04-13 19:56:43,950:INFO:Set up simple imputation.
2024-04-13 19:56:43,950:INFO:Set up feature normalization.
2024-04-13 19:56:43,974:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:56:43,978:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs', 'target'],
                                    transformer=SimpleImputer(add_indicato...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:56:43,978:INFO:Creating final display dataframe.
2024-04-13 19:56:44,050:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9                    Preprocess   
10              Imputation type   
11           Numeric imputation   
12       Categorical imputation   
13                    Normalize   
14             Normalize method   
15               Fold Generator   
16                  Fold Number   
17                     CPU Jobs   
18                      Use GPU   
19               Log Experiment   
20              Experiment Name   
21                          USI   

                                                Value  
0                                                7627  
1                                       shot_distance  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                          (20285, 7)  
5                                          (20285, 7)  
6                                          (16228, 7)  
7                                           (4057, 7)  
8                                                   6  
9                                                True  
10                                             simple  
11                                               mean  
12                                               mode  
13                                               True  
14                                             zscore  
15                                    StratifiedKFold  
16                                                 10  
17                                                 -1  
18                                              False  
19                                              False  
20                                   clf-default-name  
21                                               22eb  
2024-04-13 19:56:44,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:44,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:44,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:44,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:56:44,161:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:56:44,161:INFO:setup() successfully completed in 0.55s...............
2024-04-13 19:56:44,162:INFO:Initializing compare_models()
2024-04-13 19:56:44,162:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADE25720>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADE25720>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:56:44,162:INFO:Checking exceptions
2024-04-13 19:56:44,166:INFO:Preparing display monitor
2024-04-13 19:56:44,180:INFO:Initializing Decision Tree Classifier
2024-04-13 19:56:44,181:INFO:Total runtime is 1.6673405965169272e-05 minutes
2024-04-13 19:56:44,183:INFO:SubProcess create_model() called ==================================
2024-04-13 19:56:44,183:INFO:Initializing create_model()
2024-04-13 19:56:44,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADE25720>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC0CFD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:56:44,183:INFO:Checking exceptions
2024-04-13 19:56:44,183:INFO:Importing libraries
2024-04-13 19:56:44,183:INFO:Copying training dataset
2024-04-13 19:56:44,189:INFO:Defining folds
2024-04-13 19:56:44,189:INFO:Declaring metric variables
2024-04-13 19:56:44,191:INFO:Importing untrained model
2024-04-13 19:56:44,194:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:56:44,198:INFO:Starting cross validation
2024-04-13 19:56:44,198:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:56:44,202:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:56:46,722:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:46,724:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,726:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,727:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,728:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,729:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,730:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,781:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:46,784:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,785:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,787:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,788:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,788:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:46,789:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,790:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,790:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,792:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,793:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,794:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,795:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,796:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,797:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:46,799:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,800:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,802:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,803:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,804:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,805:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,817:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:46,820:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,821:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,823:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,824:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,825:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,826:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:46,826:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,829:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,831:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:46,831:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,833:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:46,833:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,834:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,835:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,836:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,836:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,837:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,838:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,838:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,839:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,839:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,840:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,841:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,842:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,842:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:46,843:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:46,845:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:47,043:WARNING:create_model() for dt raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:56:47,044:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:56:47,044:INFO:Initializing create_model()
2024-04-13 19:56:47,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADE25720>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC0CFD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:56:47,044:INFO:Checking exceptions
2024-04-13 19:56:47,044:INFO:Importing libraries
2024-04-13 19:56:47,044:INFO:Copying training dataset
2024-04-13 19:56:47,051:INFO:Defining folds
2024-04-13 19:56:47,051:INFO:Declaring metric variables
2024-04-13 19:56:47,054:INFO:Importing untrained model
2024-04-13 19:56:47,057:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:56:47,062:INFO:Starting cross validation
2024-04-13 19:56:47,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:56:47,067:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:56:49,601:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:49,603:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,604:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,605:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,606:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,608:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,609:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,616:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:49,619:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:49,619:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,620:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,621:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,621:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,623:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,623:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,624:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,625:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,625:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,626:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,627:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,628:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,634:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:49,636:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:49,637:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,639:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,639:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,641:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,641:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,642:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:49,642:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:49,642:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,643:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,644:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,644:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,645:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,645:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,645:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,646:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:49,646:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,646:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,647:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,647:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,648:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,649:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,649:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,649:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,651:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,651:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,651:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,652:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,653:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,654:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,654:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,656:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:49,657:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:49,859:ERROR:create_model() for dt raised an exception or returned all 0.0:
2024-04-13 19:56:49,860:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [26]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [26]

2024-04-13 19:56:49,860:INFO:Initializing Logistic Regression
2024-04-13 19:56:49,860:INFO:Total runtime is 0.09465758403142294 minutes
2024-04-13 19:56:49,863:INFO:SubProcess create_model() called ==================================
2024-04-13 19:56:49,863:INFO:Initializing create_model()
2024-04-13 19:56:49,863:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADE25720>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC0CFD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:56:49,863:INFO:Checking exceptions
2024-04-13 19:56:49,864:INFO:Importing libraries
2024-04-13 19:56:49,864:INFO:Copying training dataset
2024-04-13 19:56:49,871:INFO:Defining folds
2024-04-13 19:56:49,871:INFO:Declaring metric variables
2024-04-13 19:56:49,873:INFO:Importing untrained model
2024-04-13 19:56:49,876:INFO:Logistic Regression Imported successfully
2024-04-13 19:56:49,881:INFO:Starting cross validation
2024-04-13 19:56:49,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:56:49,885:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:56:53,409:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:53,414:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,417:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,420:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,424:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,426:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,428:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,446:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:53,449:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,451:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,453:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,455:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,457:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,459:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,466:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:53,469:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,471:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,473:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,475:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,477:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,479:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,525:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:53,538:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:53,540:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,542:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,543:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,545:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,546:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,548:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,556:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:53,558:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,559:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,560:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,562:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,563:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,564:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,603:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:53,605:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,606:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,607:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,608:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,609:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:53,610:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:53,671:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-04-13 19:56:53,672:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:56:53,672:INFO:Initializing create_model()
2024-04-13 19:56:53,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ADE25720>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC0CFD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:56:53,672:INFO:Checking exceptions
2024-04-13 19:56:53,672:INFO:Importing libraries
2024-04-13 19:56:53,672:INFO:Copying training dataset
2024-04-13 19:56:53,679:INFO:Defining folds
2024-04-13 19:56:53,679:INFO:Declaring metric variables
2024-04-13 19:56:53,683:INFO:Importing untrained model
2024-04-13 19:56:53,686:INFO:Logistic Regression Imported successfully
2024-04-13 19:56:53,691:INFO:Starting cross validation
2024-04-13 19:56:53,692:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:56:53,696:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 1 members, which is less than n_splits=10.
  warnings.warn(

2024-04-13 19:56:57,171:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:57,174:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:57,176:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:57,177:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:57,179:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:57,180:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:57,182:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:57,248:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:57,251:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:57,252:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:57,253:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:57,255:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:57,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:57,256:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:196: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method='predict_proba', average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py", line 188, in _score
    return super()._score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_response.py", line 210, in _get_response_values
    y_pred = prediction_method(X)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 341, in predict_proba
    Xt = transform.transform(Xt)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 233, in transform
    X = to_df(X, index=getattr(y, "index", None))
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\utils\generic.py", line 103, in to_df
    data = pd.DataFrame(data, index, columns)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\frame.py", line 822, in __init__
    mgr = ndarray_to_mgr(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 319, in ndarray_to_mgr
    values = _prep_ndarraylike(values, copy=copy_on_sanitize)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pandas\core\internals\construction.py", line 575, in _prep_ndarraylike
    values = np.array([convert(v) for v in values])
ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 1 dimensions. The detected shape was (2,) + inhomogeneous part.

  warnings.warn(

2024-04-13 19:56:57,257:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:57,258:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:57,260:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:57,261:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:57,262:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:57,263:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 50) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-04-13 19:56:57,264:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 19:56:57,313:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-04-13 19:56:57,313:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 463, in _process_worker
    r = call_item()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\externals\loky\process_executor.py", line 291, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 588, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 129, in __call__
    return self.function(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 140, in fit_and_score
    return wrapper(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 138, in wrapper
    return _fit_and_score(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 917, in _fit_and_score
    test_scores = _score(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\patches\sklearn.py", line 154, in wrapper
    args[1], y_transformed = args[0]._memory_full_transform(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 111, in _full_transform
    X, y = pipeline._memory_transform(transformer, X, y)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pipeline.py", line 80, in _transform_one
    output = transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_set_output.py", line 295, in wrapped
    data_to_wrap = f(self, X, *args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\preprocess\transformers.py", line 255, in transform
    output = self.transformer.transform(*args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\preprocessing\_label.py", line 137, in transform
    return _encode(y, uniques=self.classes_)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_encode.py", line 232, in _encode
    raise ValueError(f"y contains previously unseen labels: {str(diff)}")
ValueError: y contains previously unseen labels: [50]
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\model_selection\_validation.py", line 430, in cross_validate
    results = parallel(
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\utils\parallel.py", line 67, in __call__
    return super().__call__(iterable_with_config)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1944, in __call__
    return output if self.return_generator else list(output)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1587, in _get_outputs
    yield from self._retrieve()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1691, in _retrieve
    self._raise_error_fast()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 1726, in _raise_error_fast
    error_job.get_result(self.timeout)
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 735, in get_result
    return self._return_or_raise()
  File "C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\joblib\parallel.py", line 753, in _return_or_raise
    raise self._result
ValueError: y contains previously unseen labels: [50]

2024-04-13 19:56:57,322:INFO:_master_model_container: 0
2024-04-13 19:56:57,323:INFO:_display_container: 2
2024-04-13 19:56:57,323:INFO:[]
2024-04-13 19:56:57,323:INFO:compare_models() successfully completed......................................
2024-04-13 19:58:02,980:INFO:PyCaret ClassificationExperiment
2024-04-13 19:58:02,980:INFO:Logging name: clf-default-name
2024-04-13 19:58:02,981:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:58:02,981:INFO:version 3.3.0
2024-04-13 19:58:02,981:INFO:Initializing setup()
2024-04-13 19:58:02,981:INFO:self.USI: 8ce8
2024-04-13 19:58:02,981:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:58:02,981:INFO:Checking environment
2024-04-13 19:58:02,981:INFO:python_version: 3.10.14
2024-04-13 19:58:02,981:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:58:02,981:INFO:machine: AMD64
2024-04-13 19:58:02,981:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:58:02,983:INFO:Memory: svmem(total=34280943616, available=25281462272, percent=26.3, used=8999481344, free=25281462272)
2024-04-13 19:58:02,983:INFO:Physical Core: 8
2024-04-13 19:58:02,983:INFO:Logical Core: 16
2024-04-13 19:58:02,983:INFO:Checking libraries
2024-04-13 19:58:02,984:INFO:System:
2024-04-13 19:58:02,984:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:58:02,984:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:58:02,984:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:58:02,984:INFO:PyCaret required dependencies:
2024-04-13 19:58:02,984:INFO:                 pip: 23.3.1
2024-04-13 19:58:02,984:INFO:          setuptools: 68.2.2
2024-04-13 19:58:02,984:INFO:             pycaret: 3.3.0
2024-04-13 19:58:02,984:INFO:             IPython: 8.23.0
2024-04-13 19:58:02,984:INFO:          ipywidgets: 8.1.2
2024-04-13 19:58:02,984:INFO:                tqdm: 4.66.2
2024-04-13 19:58:02,984:INFO:               numpy: 1.26.4
2024-04-13 19:58:02,984:INFO:              pandas: 2.1.4
2024-04-13 19:58:02,984:INFO:              jinja2: 3.1.3
2024-04-13 19:58:02,984:INFO:               scipy: 1.11.4
2024-04-13 19:58:02,984:INFO:              joblib: 1.3.0
2024-04-13 19:58:02,984:INFO:             sklearn: 1.4.2
2024-04-13 19:58:02,984:INFO:                pyod: 1.1.3
2024-04-13 19:58:02,984:INFO:            imblearn: 0.12.2
2024-04-13 19:58:02,984:INFO:   category_encoders: 2.6.3
2024-04-13 19:58:02,984:INFO:            lightgbm: 4.3.0
2024-04-13 19:58:02,984:INFO:               numba: 0.59.1
2024-04-13 19:58:02,984:INFO:            requests: 2.31.0
2024-04-13 19:58:02,984:INFO:          matplotlib: 3.7.5
2024-04-13 19:58:02,984:INFO:          scikitplot: 0.3.7
2024-04-13 19:58:02,984:INFO:         yellowbrick: 1.5
2024-04-13 19:58:02,984:INFO:              plotly: 5.20.0
2024-04-13 19:58:02,984:INFO:    plotly-resampler: Not installed
2024-04-13 19:58:02,984:INFO:             kaleido: 0.2.1
2024-04-13 19:58:02,984:INFO:           schemdraw: 0.15
2024-04-13 19:58:02,984:INFO:         statsmodels: 0.14.1
2024-04-13 19:58:02,984:INFO:              sktime: 0.28.0
2024-04-13 19:58:02,985:INFO:               tbats: 1.1.3
2024-04-13 19:58:02,985:INFO:            pmdarima: 2.0.4
2024-04-13 19:58:02,985:INFO:              psutil: 5.9.8
2024-04-13 19:58:02,985:INFO:          markupsafe: 2.1.5
2024-04-13 19:58:02,985:INFO:             pickle5: Not installed
2024-04-13 19:58:02,985:INFO:         cloudpickle: 3.0.0
2024-04-13 19:58:02,985:INFO:         deprecation: 2.1.0
2024-04-13 19:58:02,985:INFO:              xxhash: 3.4.1
2024-04-13 19:58:02,985:INFO:           wurlitzer: Not installed
2024-04-13 19:58:02,985:INFO:PyCaret optional dependencies:
2024-04-13 19:58:02,985:INFO:                shap: Not installed
2024-04-13 19:58:02,985:INFO:           interpret: Not installed
2024-04-13 19:58:02,985:INFO:                umap: Not installed
2024-04-13 19:58:02,985:INFO:     ydata_profiling: Not installed
2024-04-13 19:58:02,985:INFO:  explainerdashboard: Not installed
2024-04-13 19:58:02,985:INFO:             autoviz: Not installed
2024-04-13 19:58:02,985:INFO:           fairlearn: Not installed
2024-04-13 19:58:02,985:INFO:          deepchecks: Not installed
2024-04-13 19:58:02,985:INFO:             xgboost: Not installed
2024-04-13 19:58:02,985:INFO:            catboost: Not installed
2024-04-13 19:58:02,985:INFO:              kmodes: Not installed
2024-04-13 19:58:02,986:INFO:             mlxtend: Not installed
2024-04-13 19:58:02,986:INFO:       statsforecast: Not installed
2024-04-13 19:58:02,986:INFO:        tune_sklearn: Not installed
2024-04-13 19:58:02,986:INFO:                 ray: Not installed
2024-04-13 19:58:02,986:INFO:            hyperopt: Not installed
2024-04-13 19:58:02,986:INFO:              optuna: Not installed
2024-04-13 19:58:02,986:INFO:               skopt: Not installed
2024-04-13 19:58:02,986:INFO:              mlflow: 2.11.3
2024-04-13 19:58:02,986:INFO:              gradio: Not installed
2024-04-13 19:58:02,986:INFO:             fastapi: Not installed
2024-04-13 19:58:02,986:INFO:             uvicorn: Not installed
2024-04-13 19:58:02,986:INFO:              m2cgen: Not installed
2024-04-13 19:58:02,986:INFO:           evidently: Not installed
2024-04-13 19:58:02,986:INFO:               fugue: Not installed
2024-04-13 19:58:02,986:INFO:           streamlit: Not installed
2024-04-13 19:58:02,986:INFO:             prophet: Not installed
2024-04-13 19:58:02,986:INFO:None
2024-04-13 19:58:02,986:INFO:Set up data.
2024-04-13 19:58:02,989:INFO:Set up folding strategy.
2024-04-13 19:58:02,989:INFO:Set up train/test split.
2024-04-13 19:58:02,990:INFO:Set up data.
2024-04-13 19:58:02,992:INFO:Set up index.
2024-04-13 19:58:02,992:INFO:Assigning column types.
2024-04-13 19:58:02,995:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:58:03,028:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:58:03,029:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:58:03,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,082:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:58:03,084:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:58:03,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,104:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:58:03,137:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:58:03,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,190:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:58:03,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,211:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:58:03,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,318:INFO:Preparing preprocessing pipeline...
2024-04-13 19:58:03,319:INFO:Set up simple imputation.
2024-04-13 19:58:03,320:INFO:Set up feature normalization.
2024-04-13 19:58:03,339:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:58:03,342:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:58:03,342:INFO:Creating final display dataframe.
2024-04-13 19:58:03,402:INFO:Setup _display_container:                     Description             Value
0                    Session id              3226
1                        Target     shot_distance
2                   Target type            Binary
3           Original data shape        (20285, 6)
4        Transformed data shape        (20285, 6)
5   Transformed train set shape        (16228, 6)
6    Transformed test set shape         (4057, 6)
7              Numeric features                 5
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              8ce8
2024-04-13 19:58:03,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:03,514:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:58:03,514:INFO:setup() successfully completed in 0.53s...............
2024-04-13 19:58:03,515:INFO:Initializing compare_models()
2024-04-13 19:58:03,515:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AB9AC880>, include=['dt', 'lr'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232AB9AC880>, 'include': ['dt', 'lr'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:58:03,515:INFO:Checking exceptions
2024-04-13 19:58:03,519:INFO:Preparing display monitor
2024-04-13 19:58:03,533:INFO:Initializing Decision Tree Classifier
2024-04-13 19:58:03,533:INFO:Total runtime is 0.0 minutes
2024-04-13 19:58:03,536:INFO:SubProcess create_model() called ==================================
2024-04-13 19:58:03,536:INFO:Initializing create_model()
2024-04-13 19:58:03,536:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AB9AC880>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232ABA695A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:58:03,536:INFO:Checking exceptions
2024-04-13 19:58:03,536:INFO:Importing libraries
2024-04-13 19:58:03,537:INFO:Copying training dataset
2024-04-13 19:58:03,542:INFO:Defining folds
2024-04-13 19:58:03,542:INFO:Declaring metric variables
2024-04-13 19:58:03,544:INFO:Importing untrained model
2024-04-13 19:58:03,546:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:58:03,551:INFO:Starting cross validation
2024-04-13 19:58:03,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:58:06,181:INFO:Calculating mean and std
2024-04-13 19:58:06,183:INFO:Creating metrics dataframe
2024-04-13 19:58:06,185:INFO:Uploading results into container
2024-04-13 19:58:06,185:INFO:Uploading model into container now
2024-04-13 19:58:06,186:INFO:_master_model_container: 1
2024-04-13 19:58:06,186:INFO:_display_container: 2
2024-04-13 19:58:06,186:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3226, splitter='best')
2024-04-13 19:58:06,186:INFO:create_model() successfully completed......................................
2024-04-13 19:58:06,327:INFO:SubProcess create_model() end ==================================
2024-04-13 19:58:06,327:INFO:Creating metrics dataframe
2024-04-13 19:58:06,332:INFO:Initializing Logistic Regression
2024-04-13 19:58:06,332:INFO:Total runtime is 0.04664313793182373 minutes
2024-04-13 19:58:06,334:INFO:SubProcess create_model() called ==================================
2024-04-13 19:58:06,335:INFO:Initializing create_model()
2024-04-13 19:58:06,335:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AB9AC880>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232ABA695A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:58:06,335:INFO:Checking exceptions
2024-04-13 19:58:06,335:INFO:Importing libraries
2024-04-13 19:58:06,335:INFO:Copying training dataset
2024-04-13 19:58:06,341:INFO:Defining folds
2024-04-13 19:58:06,341:INFO:Declaring metric variables
2024-04-13 19:58:06,344:INFO:Importing untrained model
2024-04-13 19:58:06,346:INFO:Logistic Regression Imported successfully
2024-04-13 19:58:06,351:INFO:Starting cross validation
2024-04-13 19:58:06,351:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:58:08,099:INFO:Calculating mean and std
2024-04-13 19:58:08,101:INFO:Creating metrics dataframe
2024-04-13 19:58:08,103:INFO:Uploading results into container
2024-04-13 19:58:08,104:INFO:Uploading model into container now
2024-04-13 19:58:08,105:INFO:_master_model_container: 2
2024-04-13 19:58:08,105:INFO:_display_container: 2
2024-04-13 19:58:08,105:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3226, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:58:08,105:INFO:create_model() successfully completed......................................
2024-04-13 19:58:08,253:INFO:SubProcess create_model() end ==================================
2024-04-13 19:58:08,253:INFO:Creating metrics dataframe
2024-04-13 19:58:08,259:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-13 19:58:08,265:INFO:Initializing create_model()
2024-04-13 19:58:08,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AB9AC880>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3226, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:58:08,265:INFO:Checking exceptions
2024-04-13 19:58:08,266:INFO:Importing libraries
2024-04-13 19:58:08,266:INFO:Copying training dataset
2024-04-13 19:58:08,271:INFO:Defining folds
2024-04-13 19:58:08,271:INFO:Declaring metric variables
2024-04-13 19:58:08,271:INFO:Importing untrained model
2024-04-13 19:58:08,271:INFO:Declaring custom model
2024-04-13 19:58:08,272:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:58:08,272:INFO:Cross validation set to False
2024-04-13 19:58:08,272:INFO:Fitting Model
2024-04-13 19:58:08,315:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3226, splitter='best')
2024-04-13 19:58:08,315:INFO:create_model() successfully completed......................................
2024-04-13 19:58:08,442:INFO:Initializing create_model()
2024-04-13 19:58:08,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AB9AC880>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3226, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:58:08,442:INFO:Checking exceptions
2024-04-13 19:58:08,444:INFO:Importing libraries
2024-04-13 19:58:08,444:INFO:Copying training dataset
2024-04-13 19:58:08,449:INFO:Defining folds
2024-04-13 19:58:08,450:INFO:Declaring metric variables
2024-04-13 19:58:08,450:INFO:Importing untrained model
2024-04-13 19:58:08,450:INFO:Declaring custom model
2024-04-13 19:58:08,450:INFO:Logistic Regression Imported successfully
2024-04-13 19:58:08,451:INFO:Cross validation set to False
2024-04-13 19:58:08,451:INFO:Fitting Model
2024-04-13 19:58:08,469:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3226, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:58:08,469:INFO:create_model() successfully completed......................................
2024-04-13 19:58:08,599:INFO:_master_model_container: 2
2024-04-13 19:58:08,599:INFO:_display_container: 2
2024-04-13 19:58:08,600:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3226, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3226, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:58:08,600:INFO:compare_models() successfully completed......................................
2024-04-13 19:58:08,600:INFO:Initializing predict_model()
2024-04-13 19:58:08,600:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AB9AC880>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3226, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AA0B2B90>)
2024-04-13 19:58:08,601:INFO:Checking exceptions
2024-04-13 19:58:08,601:INFO:Preloading libraries
2024-04-13 19:58:26,379:INFO:PyCaret ClassificationExperiment
2024-04-13 19:58:26,379:INFO:Logging name: clf-default-name
2024-04-13 19:58:26,379:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:58:26,379:INFO:version 3.3.0
2024-04-13 19:58:26,379:INFO:Initializing setup()
2024-04-13 19:58:26,379:INFO:self.USI: 3c6c
2024-04-13 19:58:26,379:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:58:26,379:INFO:Checking environment
2024-04-13 19:58:26,379:INFO:python_version: 3.10.14
2024-04-13 19:58:26,379:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:58:26,379:INFO:machine: AMD64
2024-04-13 19:58:26,379:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:58:26,383:INFO:Memory: svmem(total=34280943616, available=25305509888, percent=26.2, used=8975433728, free=25305509888)
2024-04-13 19:58:26,383:INFO:Physical Core: 8
2024-04-13 19:58:26,383:INFO:Logical Core: 16
2024-04-13 19:58:26,383:INFO:Checking libraries
2024-04-13 19:58:26,383:INFO:System:
2024-04-13 19:58:26,383:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:58:26,383:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:58:26,383:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:58:26,384:INFO:PyCaret required dependencies:
2024-04-13 19:58:26,384:INFO:                 pip: 23.3.1
2024-04-13 19:58:26,384:INFO:          setuptools: 68.2.2
2024-04-13 19:58:26,384:INFO:             pycaret: 3.3.0
2024-04-13 19:58:26,384:INFO:             IPython: 8.23.0
2024-04-13 19:58:26,384:INFO:          ipywidgets: 8.1.2
2024-04-13 19:58:26,384:INFO:                tqdm: 4.66.2
2024-04-13 19:58:26,384:INFO:               numpy: 1.26.4
2024-04-13 19:58:26,384:INFO:              pandas: 2.1.4
2024-04-13 19:58:26,384:INFO:              jinja2: 3.1.3
2024-04-13 19:58:26,384:INFO:               scipy: 1.11.4
2024-04-13 19:58:26,384:INFO:              joblib: 1.3.0
2024-04-13 19:58:26,384:INFO:             sklearn: 1.4.2
2024-04-13 19:58:26,384:INFO:                pyod: 1.1.3
2024-04-13 19:58:26,384:INFO:            imblearn: 0.12.2
2024-04-13 19:58:26,384:INFO:   category_encoders: 2.6.3
2024-04-13 19:58:26,384:INFO:            lightgbm: 4.3.0
2024-04-13 19:58:26,384:INFO:               numba: 0.59.1
2024-04-13 19:58:26,384:INFO:            requests: 2.31.0
2024-04-13 19:58:26,384:INFO:          matplotlib: 3.7.5
2024-04-13 19:58:26,384:INFO:          scikitplot: 0.3.7
2024-04-13 19:58:26,384:INFO:         yellowbrick: 1.5
2024-04-13 19:58:26,384:INFO:              plotly: 5.20.0
2024-04-13 19:58:26,384:INFO:    plotly-resampler: Not installed
2024-04-13 19:58:26,384:INFO:             kaleido: 0.2.1
2024-04-13 19:58:26,384:INFO:           schemdraw: 0.15
2024-04-13 19:58:26,384:INFO:         statsmodels: 0.14.1
2024-04-13 19:58:26,384:INFO:              sktime: 0.28.0
2024-04-13 19:58:26,385:INFO:               tbats: 1.1.3
2024-04-13 19:58:26,385:INFO:            pmdarima: 2.0.4
2024-04-13 19:58:26,385:INFO:              psutil: 5.9.8
2024-04-13 19:58:26,385:INFO:          markupsafe: 2.1.5
2024-04-13 19:58:26,385:INFO:             pickle5: Not installed
2024-04-13 19:58:26,385:INFO:         cloudpickle: 3.0.0
2024-04-13 19:58:26,385:INFO:         deprecation: 2.1.0
2024-04-13 19:58:26,385:INFO:              xxhash: 3.4.1
2024-04-13 19:58:26,385:INFO:           wurlitzer: Not installed
2024-04-13 19:58:26,385:INFO:PyCaret optional dependencies:
2024-04-13 19:58:26,385:INFO:                shap: Not installed
2024-04-13 19:58:26,385:INFO:           interpret: Not installed
2024-04-13 19:58:26,385:INFO:                umap: Not installed
2024-04-13 19:58:26,385:INFO:     ydata_profiling: Not installed
2024-04-13 19:58:26,385:INFO:  explainerdashboard: Not installed
2024-04-13 19:58:26,385:INFO:             autoviz: Not installed
2024-04-13 19:58:26,385:INFO:           fairlearn: Not installed
2024-04-13 19:58:26,385:INFO:          deepchecks: Not installed
2024-04-13 19:58:26,385:INFO:             xgboost: Not installed
2024-04-13 19:58:26,385:INFO:            catboost: Not installed
2024-04-13 19:58:26,385:INFO:              kmodes: Not installed
2024-04-13 19:58:26,385:INFO:             mlxtend: Not installed
2024-04-13 19:58:26,385:INFO:       statsforecast: Not installed
2024-04-13 19:58:26,385:INFO:        tune_sklearn: Not installed
2024-04-13 19:58:26,385:INFO:                 ray: Not installed
2024-04-13 19:58:26,385:INFO:            hyperopt: Not installed
2024-04-13 19:58:26,385:INFO:              optuna: Not installed
2024-04-13 19:58:26,385:INFO:               skopt: Not installed
2024-04-13 19:58:26,385:INFO:              mlflow: 2.11.3
2024-04-13 19:58:26,385:INFO:              gradio: Not installed
2024-04-13 19:58:26,385:INFO:             fastapi: Not installed
2024-04-13 19:58:26,385:INFO:             uvicorn: Not installed
2024-04-13 19:58:26,385:INFO:              m2cgen: Not installed
2024-04-13 19:58:26,385:INFO:           evidently: Not installed
2024-04-13 19:58:26,385:INFO:               fugue: Not installed
2024-04-13 19:58:26,386:INFO:           streamlit: Not installed
2024-04-13 19:58:26,386:INFO:             prophet: Not installed
2024-04-13 19:58:26,386:INFO:None
2024-04-13 19:58:26,386:INFO:Set up data.
2024-04-13 19:58:26,389:INFO:Set up folding strategy.
2024-04-13 19:58:26,389:INFO:Set up train/test split.
2024-04-13 19:58:26,389:INFO:Set up data.
2024-04-13 19:58:26,393:INFO:Set up index.
2024-04-13 19:58:26,393:INFO:Assigning column types.
2024-04-13 19:58:26,396:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:58:26,428:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:58:26,429:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:58:26,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,482:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:58:26,483:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:58:26,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,503:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:58:26,536:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:58:26,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,588:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:58:26,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,609:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:58:26,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,662:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,716:INFO:Preparing preprocessing pipeline...
2024-04-13 19:58:26,717:INFO:Set up simple imputation.
2024-04-13 19:58:26,717:INFO:Set up feature normalization.
2024-04-13 19:58:26,737:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:58:26,741:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:58:26,741:INFO:Creating final display dataframe.
2024-04-13 19:58:26,801:INFO:Setup _display_container:                     Description             Value
0                    Session id              2064
1                        Target     shot_distance
2                   Target type            Binary
3           Original data shape        (20285, 6)
4        Transformed data shape        (20285, 6)
5   Transformed train set shape        (16228, 6)
6    Transformed test set shape         (4057, 6)
7              Numeric features                 5
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              3c6c
2024-04-13 19:58:26,857:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:58:26,912:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:58:26,912:INFO:setup() successfully completed in 0.54s...............
2024-04-13 19:58:26,913:INFO:Initializing compare_models()
2024-04-13 19:58:26,913:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE7DC1F0>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE7DC1F0>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:58:26,913:INFO:Checking exceptions
2024-04-13 19:58:26,917:INFO:Preparing display monitor
2024-04-13 19:58:26,933:INFO:Initializing Logistic Regression
2024-04-13 19:58:26,933:INFO:Total runtime is 0.0 minutes
2024-04-13 19:58:26,935:INFO:SubProcess create_model() called ==================================
2024-04-13 19:58:26,935:INFO:Initializing create_model()
2024-04-13 19:58:26,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE7DC1F0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC1E7FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:58:26,935:INFO:Checking exceptions
2024-04-13 19:58:26,935:INFO:Importing libraries
2024-04-13 19:58:26,935:INFO:Copying training dataset
2024-04-13 19:58:26,942:INFO:Defining folds
2024-04-13 19:58:26,942:INFO:Declaring metric variables
2024-04-13 19:58:26,944:INFO:Importing untrained model
2024-04-13 19:58:26,946:INFO:Logistic Regression Imported successfully
2024-04-13 19:58:26,951:INFO:Starting cross validation
2024-04-13 19:58:26,951:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:58:29,527:INFO:Calculating mean and std
2024-04-13 19:58:29,529:INFO:Creating metrics dataframe
2024-04-13 19:58:29,532:INFO:Uploading results into container
2024-04-13 19:58:29,532:INFO:Uploading model into container now
2024-04-13 19:58:29,533:INFO:_master_model_container: 1
2024-04-13 19:58:29,533:INFO:_display_container: 2
2024-04-13 19:58:29,533:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2064, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:58:29,533:INFO:create_model() successfully completed......................................
2024-04-13 19:58:29,682:INFO:SubProcess create_model() end ==================================
2024-04-13 19:58:29,682:INFO:Creating metrics dataframe
2024-04-13 19:58:29,687:INFO:Initializing Decision Tree Classifier
2024-04-13 19:58:29,687:INFO:Total runtime is 0.04589056173960368 minutes
2024-04-13 19:58:29,689:INFO:SubProcess create_model() called ==================================
2024-04-13 19:58:29,689:INFO:Initializing create_model()
2024-04-13 19:58:29,689:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE7DC1F0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC1E7FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:58:29,690:INFO:Checking exceptions
2024-04-13 19:58:29,690:INFO:Importing libraries
2024-04-13 19:58:29,690:INFO:Copying training dataset
2024-04-13 19:58:29,696:INFO:Defining folds
2024-04-13 19:58:29,696:INFO:Declaring metric variables
2024-04-13 19:58:29,699:INFO:Importing untrained model
2024-04-13 19:58:29,702:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:58:29,707:INFO:Starting cross validation
2024-04-13 19:58:29,707:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:58:31,603:INFO:Calculating mean and std
2024-04-13 19:58:31,605:INFO:Creating metrics dataframe
2024-04-13 19:58:31,607:INFO:Uploading results into container
2024-04-13 19:58:31,608:INFO:Uploading model into container now
2024-04-13 19:58:31,609:INFO:_master_model_container: 2
2024-04-13 19:58:31,609:INFO:_display_container: 2
2024-04-13 19:58:31,610:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2064, splitter='best')
2024-04-13 19:58:31,610:INFO:create_model() successfully completed......................................
2024-04-13 19:58:31,745:INFO:SubProcess create_model() end ==================================
2024-04-13 19:58:31,745:INFO:Creating metrics dataframe
2024-04-13 19:58:31,751:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-13 19:58:31,756:INFO:Initializing create_model()
2024-04-13 19:58:31,756:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE7DC1F0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2064, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:58:31,757:INFO:Checking exceptions
2024-04-13 19:58:31,758:INFO:Importing libraries
2024-04-13 19:58:31,758:INFO:Copying training dataset
2024-04-13 19:58:31,763:INFO:Defining folds
2024-04-13 19:58:31,763:INFO:Declaring metric variables
2024-04-13 19:58:31,763:INFO:Importing untrained model
2024-04-13 19:58:31,763:INFO:Declaring custom model
2024-04-13 19:58:31,763:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:58:31,764:INFO:Cross validation set to False
2024-04-13 19:58:31,764:INFO:Fitting Model
2024-04-13 19:58:31,805:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2064, splitter='best')
2024-04-13 19:58:31,805:INFO:create_model() successfully completed......................................
2024-04-13 19:58:31,937:INFO:Initializing create_model()
2024-04-13 19:58:31,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE7DC1F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2064, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:58:31,937:INFO:Checking exceptions
2024-04-13 19:58:31,938:INFO:Importing libraries
2024-04-13 19:58:31,939:INFO:Copying training dataset
2024-04-13 19:58:31,943:INFO:Defining folds
2024-04-13 19:58:31,943:INFO:Declaring metric variables
2024-04-13 19:58:31,943:INFO:Importing untrained model
2024-04-13 19:58:31,943:INFO:Declaring custom model
2024-04-13 19:58:31,944:INFO:Logistic Regression Imported successfully
2024-04-13 19:58:31,944:INFO:Cross validation set to False
2024-04-13 19:58:31,944:INFO:Fitting Model
2024-04-13 19:58:31,956:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2064, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:58:31,956:INFO:create_model() successfully completed......................................
2024-04-13 19:58:32,084:INFO:_master_model_container: 2
2024-04-13 19:58:32,084:INFO:_display_container: 2
2024-04-13 19:58:32,085:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2064, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2064, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:58:32,085:INFO:compare_models() successfully completed......................................
2024-04-13 19:58:32,086:INFO:Initializing predict_model()
2024-04-13 19:58:32,086:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AE7DC1F0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2064, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232A9860820>)
2024-04-13 19:58:32,086:INFO:Checking exceptions
2024-04-13 19:58:32,086:INFO:Preloading libraries
2024-04-13 19:59:05,157:INFO:PyCaret ClassificationExperiment
2024-04-13 19:59:05,157:INFO:Logging name: clf-default-name
2024-04-13 19:59:05,157:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 19:59:05,157:INFO:version 3.3.0
2024-04-13 19:59:05,157:INFO:Initializing setup()
2024-04-13 19:59:05,157:INFO:self.USI: 2bc8
2024-04-13 19:59:05,157:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 19:59:05,157:INFO:Checking environment
2024-04-13 19:59:05,158:INFO:python_version: 3.10.14
2024-04-13 19:59:05,158:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 19:59:05,158:INFO:machine: AMD64
2024-04-13 19:59:05,158:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 19:59:05,160:INFO:Memory: svmem(total=34280943616, available=25293316096, percent=26.2, used=8987627520, free=25293316096)
2024-04-13 19:59:05,160:INFO:Physical Core: 8
2024-04-13 19:59:05,160:INFO:Logical Core: 16
2024-04-13 19:59:05,160:INFO:Checking libraries
2024-04-13 19:59:05,160:INFO:System:
2024-04-13 19:59:05,160:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 19:59:05,160:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 19:59:05,161:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 19:59:05,161:INFO:PyCaret required dependencies:
2024-04-13 19:59:05,161:INFO:                 pip: 23.3.1
2024-04-13 19:59:05,161:INFO:          setuptools: 68.2.2
2024-04-13 19:59:05,161:INFO:             pycaret: 3.3.0
2024-04-13 19:59:05,161:INFO:             IPython: 8.23.0
2024-04-13 19:59:05,161:INFO:          ipywidgets: 8.1.2
2024-04-13 19:59:05,161:INFO:                tqdm: 4.66.2
2024-04-13 19:59:05,161:INFO:               numpy: 1.26.4
2024-04-13 19:59:05,161:INFO:              pandas: 2.1.4
2024-04-13 19:59:05,161:INFO:              jinja2: 3.1.3
2024-04-13 19:59:05,161:INFO:               scipy: 1.11.4
2024-04-13 19:59:05,161:INFO:              joblib: 1.3.0
2024-04-13 19:59:05,161:INFO:             sklearn: 1.4.2
2024-04-13 19:59:05,161:INFO:                pyod: 1.1.3
2024-04-13 19:59:05,161:INFO:            imblearn: 0.12.2
2024-04-13 19:59:05,161:INFO:   category_encoders: 2.6.3
2024-04-13 19:59:05,161:INFO:            lightgbm: 4.3.0
2024-04-13 19:59:05,161:INFO:               numba: 0.59.1
2024-04-13 19:59:05,161:INFO:            requests: 2.31.0
2024-04-13 19:59:05,161:INFO:          matplotlib: 3.7.5
2024-04-13 19:59:05,161:INFO:          scikitplot: 0.3.7
2024-04-13 19:59:05,161:INFO:         yellowbrick: 1.5
2024-04-13 19:59:05,161:INFO:              plotly: 5.20.0
2024-04-13 19:59:05,161:INFO:    plotly-resampler: Not installed
2024-04-13 19:59:05,161:INFO:             kaleido: 0.2.1
2024-04-13 19:59:05,161:INFO:           schemdraw: 0.15
2024-04-13 19:59:05,161:INFO:         statsmodels: 0.14.1
2024-04-13 19:59:05,161:INFO:              sktime: 0.28.0
2024-04-13 19:59:05,161:INFO:               tbats: 1.1.3
2024-04-13 19:59:05,161:INFO:            pmdarima: 2.0.4
2024-04-13 19:59:05,161:INFO:              psutil: 5.9.8
2024-04-13 19:59:05,161:INFO:          markupsafe: 2.1.5
2024-04-13 19:59:05,162:INFO:             pickle5: Not installed
2024-04-13 19:59:05,162:INFO:         cloudpickle: 3.0.0
2024-04-13 19:59:05,162:INFO:         deprecation: 2.1.0
2024-04-13 19:59:05,162:INFO:              xxhash: 3.4.1
2024-04-13 19:59:05,162:INFO:           wurlitzer: Not installed
2024-04-13 19:59:05,162:INFO:PyCaret optional dependencies:
2024-04-13 19:59:05,162:INFO:                shap: Not installed
2024-04-13 19:59:05,162:INFO:           interpret: Not installed
2024-04-13 19:59:05,162:INFO:                umap: Not installed
2024-04-13 19:59:05,162:INFO:     ydata_profiling: Not installed
2024-04-13 19:59:05,162:INFO:  explainerdashboard: Not installed
2024-04-13 19:59:05,162:INFO:             autoviz: Not installed
2024-04-13 19:59:05,162:INFO:           fairlearn: Not installed
2024-04-13 19:59:05,162:INFO:          deepchecks: Not installed
2024-04-13 19:59:05,162:INFO:             xgboost: Not installed
2024-04-13 19:59:05,163:INFO:            catboost: Not installed
2024-04-13 19:59:05,163:INFO:              kmodes: Not installed
2024-04-13 19:59:05,163:INFO:             mlxtend: Not installed
2024-04-13 19:59:05,163:INFO:       statsforecast: Not installed
2024-04-13 19:59:05,163:INFO:        tune_sklearn: Not installed
2024-04-13 19:59:05,163:INFO:                 ray: Not installed
2024-04-13 19:59:05,163:INFO:            hyperopt: Not installed
2024-04-13 19:59:05,163:INFO:              optuna: Not installed
2024-04-13 19:59:05,163:INFO:               skopt: Not installed
2024-04-13 19:59:05,163:INFO:              mlflow: 2.11.3
2024-04-13 19:59:05,163:INFO:              gradio: Not installed
2024-04-13 19:59:05,163:INFO:             fastapi: Not installed
2024-04-13 19:59:05,163:INFO:             uvicorn: Not installed
2024-04-13 19:59:05,163:INFO:              m2cgen: Not installed
2024-04-13 19:59:05,163:INFO:           evidently: Not installed
2024-04-13 19:59:05,163:INFO:               fugue: Not installed
2024-04-13 19:59:05,163:INFO:           streamlit: Not installed
2024-04-13 19:59:05,163:INFO:             prophet: Not installed
2024-04-13 19:59:05,163:INFO:None
2024-04-13 19:59:05,163:INFO:Set up data.
2024-04-13 19:59:05,166:INFO:Set up folding strategy.
2024-04-13 19:59:05,166:INFO:Set up train/test split.
2024-04-13 19:59:05,166:INFO:Set up data.
2024-04-13 19:59:05,169:INFO:Set up index.
2024-04-13 19:59:05,169:INFO:Assigning column types.
2024-04-13 19:59:05,172:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 19:59:05,204:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:59:05,205:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:59:05,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 19:59:05,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:59:05,277:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,278:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 19:59:05,311:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:59:05,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,331:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,364:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 19:59:05,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,384:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 19:59:05,437:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,491:INFO:Preparing preprocessing pipeline...
2024-04-13 19:59:05,492:INFO:Set up simple imputation.
2024-04-13 19:59:05,492:INFO:Set up feature normalization.
2024-04-13 19:59:05,513:INFO:Finished creating preprocessing pipeline.
2024-04-13 19:59:05,517:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 19:59:05,517:INFO:Creating final display dataframe.
2024-04-13 19:59:05,576:INFO:Setup _display_container:                     Description             Value
0                    Session id              7211
1                        Target     shot_distance
2                   Target type            Binary
3           Original data shape        (20285, 6)
4        Transformed data shape        (20285, 6)
5   Transformed train set shape        (16228, 6)
6    Transformed test set shape         (4057, 6)
7              Numeric features                 5
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              2bc8
2024-04-13 19:59:05,634:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 19:59:05,688:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 19:59:05,689:INFO:setup() successfully completed in 0.53s...............
2024-04-13 19:59:05,690:INFO:Initializing compare_models()
2024-04-13 19:59:05,690:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC876260>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC876260>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 19:59:05,690:INFO:Checking exceptions
2024-04-13 19:59:05,693:INFO:Preparing display monitor
2024-04-13 19:59:05,709:INFO:Initializing Logistic Regression
2024-04-13 19:59:05,709:INFO:Total runtime is 0.0 minutes
2024-04-13 19:59:05,711:INFO:SubProcess create_model() called ==================================
2024-04-13 19:59:05,711:INFO:Initializing create_model()
2024-04-13 19:59:05,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC876260>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE442A70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:59:05,711:INFO:Checking exceptions
2024-04-13 19:59:05,712:INFO:Importing libraries
2024-04-13 19:59:05,712:INFO:Copying training dataset
2024-04-13 19:59:05,718:INFO:Defining folds
2024-04-13 19:59:05,718:INFO:Declaring metric variables
2024-04-13 19:59:05,720:INFO:Importing untrained model
2024-04-13 19:59:05,722:INFO:Logistic Regression Imported successfully
2024-04-13 19:59:05,727:INFO:Starting cross validation
2024-04-13 19:59:05,728:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:59:08,344:INFO:Calculating mean and std
2024-04-13 19:59:08,346:INFO:Creating metrics dataframe
2024-04-13 19:59:08,348:INFO:Uploading results into container
2024-04-13 19:59:08,349:INFO:Uploading model into container now
2024-04-13 19:59:08,349:INFO:_master_model_container: 1
2024-04-13 19:59:08,349:INFO:_display_container: 2
2024-04-13 19:59:08,350:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7211, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:59:08,350:INFO:create_model() successfully completed......................................
2024-04-13 19:59:08,490:INFO:SubProcess create_model() end ==================================
2024-04-13 19:59:08,490:INFO:Creating metrics dataframe
2024-04-13 19:59:08,495:INFO:Initializing Decision Tree Classifier
2024-04-13 19:59:08,495:INFO:Total runtime is 0.04643648465474447 minutes
2024-04-13 19:59:08,497:INFO:SubProcess create_model() called ==================================
2024-04-13 19:59:08,497:INFO:Initializing create_model()
2024-04-13 19:59:08,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC876260>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE442A70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:59:08,497:INFO:Checking exceptions
2024-04-13 19:59:08,498:INFO:Importing libraries
2024-04-13 19:59:08,498:INFO:Copying training dataset
2024-04-13 19:59:08,504:INFO:Defining folds
2024-04-13 19:59:08,504:INFO:Declaring metric variables
2024-04-13 19:59:08,507:INFO:Importing untrained model
2024-04-13 19:59:08,510:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:59:08,514:INFO:Starting cross validation
2024-04-13 19:59:08,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 19:59:10,294:INFO:Calculating mean and std
2024-04-13 19:59:10,295:INFO:Creating metrics dataframe
2024-04-13 19:59:10,297:INFO:Uploading results into container
2024-04-13 19:59:10,298:INFO:Uploading model into container now
2024-04-13 19:59:10,298:INFO:_master_model_container: 2
2024-04-13 19:59:10,298:INFO:_display_container: 2
2024-04-13 19:59:10,299:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7211, splitter='best')
2024-04-13 19:59:10,299:INFO:create_model() successfully completed......................................
2024-04-13 19:59:10,440:INFO:SubProcess create_model() end ==================================
2024-04-13 19:59:10,440:INFO:Creating metrics dataframe
2024-04-13 19:59:10,446:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-13 19:59:10,452:INFO:Initializing create_model()
2024-04-13 19:59:10,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC876260>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7211, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:59:10,452:INFO:Checking exceptions
2024-04-13 19:59:10,453:INFO:Importing libraries
2024-04-13 19:59:10,453:INFO:Copying training dataset
2024-04-13 19:59:10,458:INFO:Defining folds
2024-04-13 19:59:10,458:INFO:Declaring metric variables
2024-04-13 19:59:10,458:INFO:Importing untrained model
2024-04-13 19:59:10,458:INFO:Declaring custom model
2024-04-13 19:59:10,458:INFO:Decision Tree Classifier Imported successfully
2024-04-13 19:59:10,459:INFO:Cross validation set to False
2024-04-13 19:59:10,459:INFO:Fitting Model
2024-04-13 19:59:10,500:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7211, splitter='best')
2024-04-13 19:59:10,500:INFO:create_model() successfully completed......................................
2024-04-13 19:59:10,620:INFO:Initializing create_model()
2024-04-13 19:59:10,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC876260>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7211, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 19:59:10,621:INFO:Checking exceptions
2024-04-13 19:59:10,622:INFO:Importing libraries
2024-04-13 19:59:10,622:INFO:Copying training dataset
2024-04-13 19:59:10,627:INFO:Defining folds
2024-04-13 19:59:10,627:INFO:Declaring metric variables
2024-04-13 19:59:10,627:INFO:Importing untrained model
2024-04-13 19:59:10,627:INFO:Declaring custom model
2024-04-13 19:59:10,628:INFO:Logistic Regression Imported successfully
2024-04-13 19:59:10,628:INFO:Cross validation set to False
2024-04-13 19:59:10,628:INFO:Fitting Model
2024-04-13 19:59:10,640:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7211, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 19:59:10,640:INFO:create_model() successfully completed......................................
2024-04-13 19:59:10,769:INFO:_master_model_container: 2
2024-04-13 19:59:10,769:INFO:_display_container: 2
2024-04-13 19:59:10,770:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7211, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7211, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 19:59:10,770:INFO:compare_models() successfully completed......................................
2024-04-13 19:59:10,770:INFO:Initializing predict_model()
2024-04-13 19:59:10,770:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232AC876260>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7211, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232ABC584C0>)
2024-04-13 19:59:10,770:INFO:Checking exceptions
2024-04-13 19:59:10,770:INFO:Preloading libraries
2024-04-13 20:00:30,140:INFO:PyCaret ClassificationExperiment
2024-04-13 20:00:30,140:INFO:Logging name: clf-default-name
2024-04-13 20:00:30,140:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 20:00:30,140:INFO:version 3.3.0
2024-04-13 20:00:30,140:INFO:Initializing setup()
2024-04-13 20:00:30,140:INFO:self.USI: f731
2024-04-13 20:00:30,140:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 20:00:30,140:INFO:Checking environment
2024-04-13 20:00:30,140:INFO:python_version: 3.10.14
2024-04-13 20:00:30,140:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 20:00:30,140:INFO:machine: AMD64
2024-04-13 20:00:30,140:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 20:00:30,143:INFO:Memory: svmem(total=34280943616, available=23274647552, percent=32.1, used=11006296064, free=23274647552)
2024-04-13 20:00:30,143:INFO:Physical Core: 8
2024-04-13 20:00:30,143:INFO:Logical Core: 16
2024-04-13 20:00:30,143:INFO:Checking libraries
2024-04-13 20:00:30,143:INFO:System:
2024-04-13 20:00:30,144:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 20:00:30,144:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 20:00:30,144:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 20:00:30,144:INFO:PyCaret required dependencies:
2024-04-13 20:00:30,144:INFO:                 pip: 23.3.1
2024-04-13 20:00:30,144:INFO:          setuptools: 68.2.2
2024-04-13 20:00:30,144:INFO:             pycaret: 3.3.0
2024-04-13 20:00:30,144:INFO:             IPython: 8.23.0
2024-04-13 20:00:30,144:INFO:          ipywidgets: 8.1.2
2024-04-13 20:00:30,144:INFO:                tqdm: 4.66.2
2024-04-13 20:00:30,144:INFO:               numpy: 1.26.4
2024-04-13 20:00:30,144:INFO:              pandas: 2.1.4
2024-04-13 20:00:30,144:INFO:              jinja2: 3.1.3
2024-04-13 20:00:30,144:INFO:               scipy: 1.11.4
2024-04-13 20:00:30,144:INFO:              joblib: 1.3.0
2024-04-13 20:00:30,144:INFO:             sklearn: 1.4.2
2024-04-13 20:00:30,144:INFO:                pyod: 1.1.3
2024-04-13 20:00:30,144:INFO:            imblearn: 0.12.2
2024-04-13 20:00:30,144:INFO:   category_encoders: 2.6.3
2024-04-13 20:00:30,144:INFO:            lightgbm: 4.3.0
2024-04-13 20:00:30,144:INFO:               numba: 0.59.1
2024-04-13 20:00:30,144:INFO:            requests: 2.31.0
2024-04-13 20:00:30,144:INFO:          matplotlib: 3.7.5
2024-04-13 20:00:30,144:INFO:          scikitplot: 0.3.7
2024-04-13 20:00:30,144:INFO:         yellowbrick: 1.5
2024-04-13 20:00:30,144:INFO:              plotly: 5.20.0
2024-04-13 20:00:30,144:INFO:    plotly-resampler: Not installed
2024-04-13 20:00:30,144:INFO:             kaleido: 0.2.1
2024-04-13 20:00:30,144:INFO:           schemdraw: 0.15
2024-04-13 20:00:30,144:INFO:         statsmodels: 0.14.1
2024-04-13 20:00:30,145:INFO:              sktime: 0.28.0
2024-04-13 20:00:30,145:INFO:               tbats: 1.1.3
2024-04-13 20:00:30,145:INFO:            pmdarima: 2.0.4
2024-04-13 20:00:30,145:INFO:              psutil: 5.9.8
2024-04-13 20:00:30,145:INFO:          markupsafe: 2.1.5
2024-04-13 20:00:30,145:INFO:             pickle5: Not installed
2024-04-13 20:00:30,145:INFO:         cloudpickle: 3.0.0
2024-04-13 20:00:30,145:INFO:         deprecation: 2.1.0
2024-04-13 20:00:30,145:INFO:              xxhash: 3.4.1
2024-04-13 20:00:30,145:INFO:           wurlitzer: Not installed
2024-04-13 20:00:30,145:INFO:PyCaret optional dependencies:
2024-04-13 20:00:30,145:INFO:                shap: Not installed
2024-04-13 20:00:30,145:INFO:           interpret: Not installed
2024-04-13 20:00:30,145:INFO:                umap: Not installed
2024-04-13 20:00:30,145:INFO:     ydata_profiling: Not installed
2024-04-13 20:00:30,145:INFO:  explainerdashboard: Not installed
2024-04-13 20:00:30,145:INFO:             autoviz: Not installed
2024-04-13 20:00:30,145:INFO:           fairlearn: Not installed
2024-04-13 20:00:30,145:INFO:          deepchecks: Not installed
2024-04-13 20:00:30,145:INFO:             xgboost: Not installed
2024-04-13 20:00:30,145:INFO:            catboost: Not installed
2024-04-13 20:00:30,145:INFO:              kmodes: Not installed
2024-04-13 20:00:30,145:INFO:             mlxtend: Not installed
2024-04-13 20:00:30,145:INFO:       statsforecast: Not installed
2024-04-13 20:00:30,145:INFO:        tune_sklearn: Not installed
2024-04-13 20:00:30,145:INFO:                 ray: Not installed
2024-04-13 20:00:30,145:INFO:            hyperopt: Not installed
2024-04-13 20:00:30,145:INFO:              optuna: Not installed
2024-04-13 20:00:30,145:INFO:               skopt: Not installed
2024-04-13 20:00:30,145:INFO:              mlflow: 2.11.3
2024-04-13 20:00:30,145:INFO:              gradio: Not installed
2024-04-13 20:00:30,145:INFO:             fastapi: Not installed
2024-04-13 20:00:30,145:INFO:             uvicorn: Not installed
2024-04-13 20:00:30,145:INFO:              m2cgen: Not installed
2024-04-13 20:00:30,146:INFO:           evidently: Not installed
2024-04-13 20:00:30,146:INFO:               fugue: Not installed
2024-04-13 20:00:30,146:INFO:           streamlit: Not installed
2024-04-13 20:00:30,146:INFO:             prophet: Not installed
2024-04-13 20:00:30,146:INFO:None
2024-04-13 20:00:30,146:INFO:Set up data.
2024-04-13 20:00:30,149:INFO:Set up folding strategy.
2024-04-13 20:00:30,149:INFO:Set up train/test split.
2024-04-13 20:00:30,149:INFO:Set up data.
2024-04-13 20:00:30,151:INFO:Set up index.
2024-04-13 20:00:30,152:INFO:Assigning column types.
2024-04-13 20:00:30,155:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 20:00:30,187:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:00:30,187:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:00:30,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,240:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:00:30,240:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:00:30,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,261:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 20:00:30,294:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:00:30,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,347:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:00:30,367:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,367:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 20:00:30,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,475:INFO:Preparing preprocessing pipeline...
2024-04-13 20:00:30,476:INFO:Set up simple imputation.
2024-04-13 20:00:30,476:INFO:Set up feature normalization.
2024-04-13 20:00:30,495:INFO:Finished creating preprocessing pipeline.
2024-04-13 20:00:30,498:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 20:00:30,498:INFO:Creating final display dataframe.
2024-04-13 20:00:30,560:INFO:Setup _display_container:                     Description             Value
0                    Session id              8468
1                        Target     shot_distance
2                   Target type            Binary
3           Original data shape        (20285, 6)
4        Transformed data shape        (20285, 6)
5   Transformed train set shape        (16228, 6)
6    Transformed test set shape         (4057, 6)
7              Numeric features                 5
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              f731
2024-04-13 20:00:30,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,671:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:00:30,671:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 20:00:30,672:INFO:setup() successfully completed in 0.53s...............
2024-04-13 20:00:30,673:INFO:Initializing compare_models()
2024-04-13 20:00:30,673:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 20:00:30,673:INFO:Checking exceptions
2024-04-13 20:00:30,676:INFO:Preparing display monitor
2024-04-13 20:00:30,692:INFO:Initializing Logistic Regression
2024-04-13 20:00:30,693:INFO:Total runtime is 1.6669432322184246e-05 minutes
2024-04-13 20:00:30,695:INFO:SubProcess create_model() called ==================================
2024-04-13 20:00:30,695:INFO:Initializing create_model()
2024-04-13 20:00:30,695:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232ACAAD600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:00:30,695:INFO:Checking exceptions
2024-04-13 20:00:30,695:INFO:Importing libraries
2024-04-13 20:00:30,695:INFO:Copying training dataset
2024-04-13 20:00:30,700:INFO:Defining folds
2024-04-13 20:00:30,700:INFO:Declaring metric variables
2024-04-13 20:00:30,703:INFO:Importing untrained model
2024-04-13 20:00:30,705:INFO:Logistic Regression Imported successfully
2024-04-13 20:00:30,709:INFO:Starting cross validation
2024-04-13 20:00:30,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:00:30,778:INFO:Calculating mean and std
2024-04-13 20:00:30,778:INFO:Creating metrics dataframe
2024-04-13 20:00:30,780:INFO:Uploading results into container
2024-04-13 20:00:30,780:INFO:Uploading model into container now
2024-04-13 20:00:30,780:INFO:_master_model_container: 1
2024-04-13 20:00:30,780:INFO:_display_container: 2
2024-04-13 20:00:30,781:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:00:30,781:INFO:create_model() successfully completed......................................
2024-04-13 20:00:30,907:INFO:SubProcess create_model() end ==================================
2024-04-13 20:00:30,907:INFO:Creating metrics dataframe
2024-04-13 20:00:30,912:INFO:Initializing Decision Tree Classifier
2024-04-13 20:00:30,912:INFO:Total runtime is 0.003667326768239339 minutes
2024-04-13 20:00:30,915:INFO:SubProcess create_model() called ==================================
2024-04-13 20:00:30,915:INFO:Initializing create_model()
2024-04-13 20:00:30,915:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232ACAAD600>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:00:30,915:INFO:Checking exceptions
2024-04-13 20:00:30,915:INFO:Importing libraries
2024-04-13 20:00:30,915:INFO:Copying training dataset
2024-04-13 20:00:30,920:INFO:Defining folds
2024-04-13 20:00:30,920:INFO:Declaring metric variables
2024-04-13 20:00:30,925:INFO:Importing untrained model
2024-04-13 20:00:30,929:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:00:30,936:INFO:Starting cross validation
2024-04-13 20:00:30,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:00:31,049:INFO:Calculating mean and std
2024-04-13 20:00:31,049:INFO:Creating metrics dataframe
2024-04-13 20:00:31,051:INFO:Uploading results into container
2024-04-13 20:00:31,051:INFO:Uploading model into container now
2024-04-13 20:00:31,051:INFO:_master_model_container: 2
2024-04-13 20:00:31,051:INFO:_display_container: 2
2024-04-13 20:00:31,051:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best')
2024-04-13 20:00:31,051:INFO:create_model() successfully completed......................................
2024-04-13 20:00:31,186:INFO:SubProcess create_model() end ==================================
2024-04-13 20:00:31,186:INFO:Creating metrics dataframe
2024-04-13 20:00:31,191:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-13 20:00:31,197:INFO:Initializing create_model()
2024-04-13 20:00:31,197:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:00:31,198:INFO:Checking exceptions
2024-04-13 20:00:31,199:INFO:Importing libraries
2024-04-13 20:00:31,199:INFO:Copying training dataset
2024-04-13 20:00:31,204:INFO:Defining folds
2024-04-13 20:00:31,205:INFO:Declaring metric variables
2024-04-13 20:00:31,205:INFO:Importing untrained model
2024-04-13 20:00:31,205:INFO:Declaring custom model
2024-04-13 20:00:31,205:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:00:31,206:INFO:Cross validation set to False
2024-04-13 20:00:31,206:INFO:Fitting Model
2024-04-13 20:00:31,248:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best')
2024-04-13 20:00:31,248:INFO:create_model() successfully completed......................................
2024-04-13 20:00:31,388:INFO:Initializing create_model()
2024-04-13 20:00:31,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:00:31,388:INFO:Checking exceptions
2024-04-13 20:00:31,390:INFO:Importing libraries
2024-04-13 20:00:31,390:INFO:Copying training dataset
2024-04-13 20:00:31,395:INFO:Defining folds
2024-04-13 20:00:31,395:INFO:Declaring metric variables
2024-04-13 20:00:31,395:INFO:Importing untrained model
2024-04-13 20:00:31,395:INFO:Declaring custom model
2024-04-13 20:00:31,395:INFO:Logistic Regression Imported successfully
2024-04-13 20:00:31,396:INFO:Cross validation set to False
2024-04-13 20:00:31,396:INFO:Fitting Model
2024-04-13 20:00:31,408:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:00:31,408:INFO:create_model() successfully completed......................................
2024-04-13 20:00:31,549:INFO:_master_model_container: 2
2024-04-13 20:00:31,549:INFO:_display_container: 2
2024-04-13 20:00:31,549:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 20:00:31,549:INFO:compare_models() successfully completed......................................
2024-04-13 20:00:31,550:INFO:Initializing predict_model()
2024-04-13 20:00:31,550:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8468, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232A99191B0>)
2024-04-13 20:00:31,550:INFO:Checking exceptions
2024-04-13 20:00:31,550:INFO:Preloading libraries
2024-04-13 20:00:32,272:INFO:Initializing predict_model()
2024-04-13 20:00:32,272:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AE41CC10>)
2024-04-13 20:00:32,272:INFO:Checking exceptions
2024-04-13 20:00:32,272:INFO:Preloading libraries
2024-04-13 20:00:32,849:INFO:Initializing tune_model()
2024-04-13 20:00:32,849:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>)
2024-04-13 20:00:32,849:INFO:Checking exceptions
2024-04-13 20:00:32,860:INFO:Copying training dataset
2024-04-13 20:00:32,866:INFO:Checking base model
2024-04-13 20:00:32,866:INFO:Base model : Decision Tree Classifier
2024-04-13 20:00:32,868:INFO:Declaring metric variables
2024-04-13 20:00:32,870:INFO:Defining Hyperparameters
2024-04-13 20:00:32,991:INFO:Tuning with n_jobs=-1
2024-04-13 20:00:32,991:INFO:Initializing RandomizedSearchCV
2024-04-13 20:00:33,133:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 13, 'actual_estimator__criterion': 'gini'}
2024-04-13 20:00:33,133:INFO:Hyperparameter search completed
2024-04-13 20:00:33,133:INFO:SubProcess create_model() called ==================================
2024-04-13 20:00:33,134:INFO:Initializing create_model()
2024-04-13 20:00:33,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE7DD870>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0, 'max_features': 'log2', 'max_depth': 13, 'criterion': 'gini'})
2024-04-13 20:00:33,134:INFO:Checking exceptions
2024-04-13 20:00:33,134:INFO:Importing libraries
2024-04-13 20:00:33,134:INFO:Copying training dataset
2024-04-13 20:00:33,139:INFO:Defining folds
2024-04-13 20:00:33,139:INFO:Declaring metric variables
2024-04-13 20:00:33,142:INFO:Importing untrained model
2024-04-13 20:00:33,142:INFO:Declaring custom model
2024-04-13 20:00:33,144:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:00:33,149:INFO:Starting cross validation
2024-04-13 20:00:33,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:00:33,227:INFO:Calculating mean and std
2024-04-13 20:00:33,227:INFO:Creating metrics dataframe
2024-04-13 20:00:33,231:INFO:Finalizing model
2024-04-13 20:00:33,253:INFO:Uploading results into container
2024-04-13 20:00:33,253:INFO:Uploading model into container now
2024-04-13 20:00:33,254:INFO:_master_model_container: 3
2024-04-13 20:00:33,254:INFO:_display_container: 5
2024-04-13 20:00:33,254:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=13, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best')
2024-04-13 20:00:33,254:INFO:create_model() successfully completed......................................
2024-04-13 20:00:33,391:INFO:SubProcess create_model() end ==================================
2024-04-13 20:00:33,391:INFO:choose_better activated
2024-04-13 20:00:33,394:INFO:SubProcess create_model() called ==================================
2024-04-13 20:00:33,394:INFO:Initializing create_model()
2024-04-13 20:00:33,394:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:00:33,394:INFO:Checking exceptions
2024-04-13 20:00:33,396:INFO:Importing libraries
2024-04-13 20:00:33,396:INFO:Copying training dataset
2024-04-13 20:00:33,401:INFO:Defining folds
2024-04-13 20:00:33,401:INFO:Declaring metric variables
2024-04-13 20:00:33,401:INFO:Importing untrained model
2024-04-13 20:00:33,401:INFO:Declaring custom model
2024-04-13 20:00:33,402:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:00:33,402:INFO:Starting cross validation
2024-04-13 20:00:33,403:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:00:33,498:INFO:Calculating mean and std
2024-04-13 20:00:33,498:INFO:Creating metrics dataframe
2024-04-13 20:00:33,500:INFO:Finalizing model
2024-04-13 20:00:33,540:INFO:Uploading results into container
2024-04-13 20:00:33,540:INFO:Uploading model into container now
2024-04-13 20:00:33,541:INFO:_master_model_container: 4
2024-04-13 20:00:33,541:INFO:_display_container: 6
2024-04-13 20:00:33,541:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best')
2024-04-13 20:00:33,541:INFO:create_model() successfully completed......................................
2024-04-13 20:00:33,660:INFO:SubProcess create_model() end ==================================
2024-04-13 20:00:33,660:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best') result for F1 is 0.5528
2024-04-13 20:00:33,661:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=13, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best') result for F1 is 0.5241
2024-04-13 20:00:33,661:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best') is best model
2024-04-13 20:00:33,661:INFO:choose_better completed
2024-04-13 20:00:33,661:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-13 20:00:33,669:INFO:_master_model_container: 4
2024-04-13 20:00:33,669:INFO:_display_container: 5
2024-04-13 20:00:33,669:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best')
2024-04-13 20:00:33,669:INFO:tune_model() successfully completed......................................
2024-04-13 20:00:33,806:INFO:Initializing predict_model()
2024-04-13 20:00:33,806:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A99CC250>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8468, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232ABDBDD80>)
2024-04-13 20:00:33,806:INFO:Checking exceptions
2024-04-13 20:00:33,806:INFO:Preloading libraries
2024-04-13 20:01:17,231:INFO:PyCaret ClassificationExperiment
2024-04-13 20:01:17,231:INFO:Logging name: clf-default-name
2024-04-13 20:01:17,231:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 20:01:17,231:INFO:version 3.3.0
2024-04-13 20:01:17,231:INFO:Initializing setup()
2024-04-13 20:01:17,231:INFO:self.USI: 54a5
2024-04-13 20:01:17,231:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 20:01:17,231:INFO:Checking environment
2024-04-13 20:01:17,231:INFO:python_version: 3.10.14
2024-04-13 20:01:17,232:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 20:01:17,232:INFO:machine: AMD64
2024-04-13 20:01:17,232:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 20:01:17,234:INFO:Memory: svmem(total=34280943616, available=23272574976, percent=32.1, used=11008368640, free=23272574976)
2024-04-13 20:01:17,234:INFO:Physical Core: 8
2024-04-13 20:01:17,234:INFO:Logical Core: 16
2024-04-13 20:01:17,234:INFO:Checking libraries
2024-04-13 20:01:17,234:INFO:System:
2024-04-13 20:01:17,234:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 20:01:17,234:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 20:01:17,234:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 20:01:17,234:INFO:PyCaret required dependencies:
2024-04-13 20:01:17,235:INFO:                 pip: 23.3.1
2024-04-13 20:01:17,235:INFO:          setuptools: 68.2.2
2024-04-13 20:01:17,235:INFO:             pycaret: 3.3.0
2024-04-13 20:01:17,235:INFO:             IPython: 8.23.0
2024-04-13 20:01:17,235:INFO:          ipywidgets: 8.1.2
2024-04-13 20:01:17,235:INFO:                tqdm: 4.66.2
2024-04-13 20:01:17,235:INFO:               numpy: 1.26.4
2024-04-13 20:01:17,235:INFO:              pandas: 2.1.4
2024-04-13 20:01:17,235:INFO:              jinja2: 3.1.3
2024-04-13 20:01:17,235:INFO:               scipy: 1.11.4
2024-04-13 20:01:17,235:INFO:              joblib: 1.3.0
2024-04-13 20:01:17,235:INFO:             sklearn: 1.4.2
2024-04-13 20:01:17,235:INFO:                pyod: 1.1.3
2024-04-13 20:01:17,235:INFO:            imblearn: 0.12.2
2024-04-13 20:01:17,235:INFO:   category_encoders: 2.6.3
2024-04-13 20:01:17,235:INFO:            lightgbm: 4.3.0
2024-04-13 20:01:17,235:INFO:               numba: 0.59.1
2024-04-13 20:01:17,235:INFO:            requests: 2.31.0
2024-04-13 20:01:17,235:INFO:          matplotlib: 3.7.5
2024-04-13 20:01:17,235:INFO:          scikitplot: 0.3.7
2024-04-13 20:01:17,235:INFO:         yellowbrick: 1.5
2024-04-13 20:01:17,235:INFO:              plotly: 5.20.0
2024-04-13 20:01:17,235:INFO:    plotly-resampler: Not installed
2024-04-13 20:01:17,235:INFO:             kaleido: 0.2.1
2024-04-13 20:01:17,235:INFO:           schemdraw: 0.15
2024-04-13 20:01:17,235:INFO:         statsmodels: 0.14.1
2024-04-13 20:01:17,235:INFO:              sktime: 0.28.0
2024-04-13 20:01:17,235:INFO:               tbats: 1.1.3
2024-04-13 20:01:17,235:INFO:            pmdarima: 2.0.4
2024-04-13 20:01:17,235:INFO:              psutil: 5.9.8
2024-04-13 20:01:17,235:INFO:          markupsafe: 2.1.5
2024-04-13 20:01:17,235:INFO:             pickle5: Not installed
2024-04-13 20:01:17,235:INFO:         cloudpickle: 3.0.0
2024-04-13 20:01:17,235:INFO:         deprecation: 2.1.0
2024-04-13 20:01:17,236:INFO:              xxhash: 3.4.1
2024-04-13 20:01:17,236:INFO:           wurlitzer: Not installed
2024-04-13 20:01:17,236:INFO:PyCaret optional dependencies:
2024-04-13 20:01:17,236:INFO:                shap: Not installed
2024-04-13 20:01:17,236:INFO:           interpret: Not installed
2024-04-13 20:01:17,236:INFO:                umap: Not installed
2024-04-13 20:01:17,236:INFO:     ydata_profiling: Not installed
2024-04-13 20:01:17,236:INFO:  explainerdashboard: Not installed
2024-04-13 20:01:17,236:INFO:             autoviz: Not installed
2024-04-13 20:01:17,236:INFO:           fairlearn: Not installed
2024-04-13 20:01:17,236:INFO:          deepchecks: Not installed
2024-04-13 20:01:17,236:INFO:             xgboost: Not installed
2024-04-13 20:01:17,236:INFO:            catboost: Not installed
2024-04-13 20:01:17,236:INFO:              kmodes: Not installed
2024-04-13 20:01:17,236:INFO:             mlxtend: Not installed
2024-04-13 20:01:17,236:INFO:       statsforecast: Not installed
2024-04-13 20:01:17,236:INFO:        tune_sklearn: Not installed
2024-04-13 20:01:17,236:INFO:                 ray: Not installed
2024-04-13 20:01:17,236:INFO:            hyperopt: Not installed
2024-04-13 20:01:17,236:INFO:              optuna: Not installed
2024-04-13 20:01:17,236:INFO:               skopt: Not installed
2024-04-13 20:01:17,236:INFO:              mlflow: 2.11.3
2024-04-13 20:01:17,236:INFO:              gradio: Not installed
2024-04-13 20:01:17,236:INFO:             fastapi: Not installed
2024-04-13 20:01:17,236:INFO:             uvicorn: Not installed
2024-04-13 20:01:17,236:INFO:              m2cgen: Not installed
2024-04-13 20:01:17,236:INFO:           evidently: Not installed
2024-04-13 20:01:17,236:INFO:               fugue: Not installed
2024-04-13 20:01:17,236:INFO:           streamlit: Not installed
2024-04-13 20:01:17,236:INFO:             prophet: Not installed
2024-04-13 20:01:17,236:INFO:None
2024-04-13 20:01:17,236:INFO:Set up data.
2024-04-13 20:01:17,239:INFO:Set up folding strategy.
2024-04-13 20:01:17,239:INFO:Set up train/test split.
2024-04-13 20:01:17,239:INFO:Set up data.
2024-04-13 20:01:17,242:INFO:Set up index.
2024-04-13 20:01:17,242:INFO:Assigning column types.
2024-04-13 20:01:17,245:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 20:01:17,277:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:01:17,278:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:01:17,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,331:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:01:17,331:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:01:17,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,352:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,352:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 20:01:17,385:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:01:17,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:01:17,458:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,458:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 20:01:17,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,565:INFO:Preparing preprocessing pipeline...
2024-04-13 20:01:17,566:INFO:Set up simple imputation.
2024-04-13 20:01:17,566:INFO:Set up feature normalization.
2024-04-13 20:01:17,585:INFO:Finished creating preprocessing pipeline.
2024-04-13 20:01:17,588:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 20:01:17,588:INFO:Creating final display dataframe.
2024-04-13 20:01:17,648:INFO:Setup _display_container:                     Description             Value
0                    Session id              1323
1                        Target     shot_distance
2                   Target type            Binary
3           Original data shape        (20285, 6)
4        Transformed data shape        (20285, 6)
5   Transformed train set shape        (16228, 6)
6    Transformed test set shape         (4057, 6)
7              Numeric features                 5
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              54a5
2024-04-13 20:01:17,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:01:17,759:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 20:01:17,760:INFO:setup() successfully completed in 0.53s...............
2024-04-13 20:01:17,761:INFO:Initializing compare_models()
2024-04-13 20:01:17,761:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 20:01:17,761:INFO:Checking exceptions
2024-04-13 20:01:17,764:INFO:Preparing display monitor
2024-04-13 20:01:17,778:INFO:Initializing Logistic Regression
2024-04-13 20:01:17,778:INFO:Total runtime is 0.0 minutes
2024-04-13 20:01:17,780:INFO:SubProcess create_model() called ==================================
2024-04-13 20:01:17,781:INFO:Initializing create_model()
2024-04-13 20:01:17,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE5AE530>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:01:17,781:INFO:Checking exceptions
2024-04-13 20:01:17,781:INFO:Importing libraries
2024-04-13 20:01:17,781:INFO:Copying training dataset
2024-04-13 20:01:17,787:INFO:Defining folds
2024-04-13 20:01:17,787:INFO:Declaring metric variables
2024-04-13 20:01:17,789:INFO:Importing untrained model
2024-04-13 20:01:17,791:INFO:Logistic Regression Imported successfully
2024-04-13 20:01:17,796:INFO:Starting cross validation
2024-04-13 20:01:17,797:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:01:17,870:INFO:Calculating mean and std
2024-04-13 20:01:17,870:INFO:Creating metrics dataframe
2024-04-13 20:01:17,872:INFO:Uploading results into container
2024-04-13 20:01:17,872:INFO:Uploading model into container now
2024-04-13 20:01:17,872:INFO:_master_model_container: 1
2024-04-13 20:01:17,872:INFO:_display_container: 2
2024-04-13 20:01:17,873:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1323, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:01:17,873:INFO:create_model() successfully completed......................................
2024-04-13 20:01:17,997:INFO:SubProcess create_model() end ==================================
2024-04-13 20:01:17,997:INFO:Creating metrics dataframe
2024-04-13 20:01:18,002:INFO:Initializing Decision Tree Classifier
2024-04-13 20:01:18,002:INFO:Total runtime is 0.003735915819803874 minutes
2024-04-13 20:01:18,004:INFO:SubProcess create_model() called ==================================
2024-04-13 20:01:18,004:INFO:Initializing create_model()
2024-04-13 20:01:18,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AE5AE530>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:01:18,004:INFO:Checking exceptions
2024-04-13 20:01:18,004:INFO:Importing libraries
2024-04-13 20:01:18,004:INFO:Copying training dataset
2024-04-13 20:01:18,009:INFO:Defining folds
2024-04-13 20:01:18,009:INFO:Declaring metric variables
2024-04-13 20:01:18,012:INFO:Importing untrained model
2024-04-13 20:01:18,014:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:01:18,018:INFO:Starting cross validation
2024-04-13 20:01:18,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:01:18,123:INFO:Calculating mean and std
2024-04-13 20:01:18,123:INFO:Creating metrics dataframe
2024-04-13 20:01:18,125:INFO:Uploading results into container
2024-04-13 20:01:18,125:INFO:Uploading model into container now
2024-04-13 20:01:18,125:INFO:_master_model_container: 2
2024-04-13 20:01:18,125:INFO:_display_container: 2
2024-04-13 20:01:18,126:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best')
2024-04-13 20:01:18,126:INFO:create_model() successfully completed......................................
2024-04-13 20:01:18,261:INFO:SubProcess create_model() end ==================================
2024-04-13 20:01:18,262:INFO:Creating metrics dataframe
2024-04-13 20:01:18,267:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-13 20:01:18,272:INFO:Initializing create_model()
2024-04-13 20:01:18,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:01:18,272:INFO:Checking exceptions
2024-04-13 20:01:18,274:INFO:Importing libraries
2024-04-13 20:01:18,274:INFO:Copying training dataset
2024-04-13 20:01:18,280:INFO:Defining folds
2024-04-13 20:01:18,280:INFO:Declaring metric variables
2024-04-13 20:01:18,280:INFO:Importing untrained model
2024-04-13 20:01:18,280:INFO:Declaring custom model
2024-04-13 20:01:18,280:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:01:18,281:INFO:Cross validation set to False
2024-04-13 20:01:18,281:INFO:Fitting Model
2024-04-13 20:01:18,324:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best')
2024-04-13 20:01:18,324:INFO:create_model() successfully completed......................................
2024-04-13 20:01:18,463:INFO:Initializing create_model()
2024-04-13 20:01:18,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1323, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:01:18,463:INFO:Checking exceptions
2024-04-13 20:01:18,465:INFO:Importing libraries
2024-04-13 20:01:18,465:INFO:Copying training dataset
2024-04-13 20:01:18,470:INFO:Defining folds
2024-04-13 20:01:18,470:INFO:Declaring metric variables
2024-04-13 20:01:18,470:INFO:Importing untrained model
2024-04-13 20:01:18,470:INFO:Declaring custom model
2024-04-13 20:01:18,470:INFO:Logistic Regression Imported successfully
2024-04-13 20:01:18,471:INFO:Cross validation set to False
2024-04-13 20:01:18,471:INFO:Fitting Model
2024-04-13 20:01:18,482:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1323, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:01:18,482:INFO:create_model() successfully completed......................................
2024-04-13 20:01:18,622:INFO:_master_model_container: 2
2024-04-13 20:01:18,622:INFO:_display_container: 2
2024-04-13 20:01:18,623:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1323, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 20:01:18,623:INFO:compare_models() successfully completed......................................
2024-04-13 20:01:18,623:INFO:Initializing predict_model()
2024-04-13 20:01:18,625:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1323, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AB9E60E0>)
2024-04-13 20:01:18,625:INFO:Checking exceptions
2024-04-13 20:01:18,625:INFO:Preloading libraries
2024-04-13 20:01:19,343:INFO:Initializing predict_model()
2024-04-13 20:01:19,343:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AA186D40>)
2024-04-13 20:01:19,343:INFO:Checking exceptions
2024-04-13 20:01:19,343:INFO:Preloading libraries
2024-04-13 20:01:19,913:INFO:Initializing tune_model()
2024-04-13 20:01:19,913:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>)
2024-04-13 20:01:19,913:INFO:Checking exceptions
2024-04-13 20:01:19,925:INFO:Copying training dataset
2024-04-13 20:01:19,931:INFO:Checking base model
2024-04-13 20:01:19,931:INFO:Base model : Decision Tree Classifier
2024-04-13 20:01:19,936:INFO:Declaring metric variables
2024-04-13 20:01:19,940:INFO:Defining Hyperparameters
2024-04-13 20:01:20,081:INFO:Tuning with n_jobs=-1
2024-04-13 20:01:20,081:INFO:Initializing RandomizedSearchCV
2024-04-13 20:01:20,219:INFO:best_params: {'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.2, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'gini'}
2024-04-13 20:01:20,219:INFO:Hyperparameter search completed
2024-04-13 20:01:20,219:INFO:SubProcess create_model() called ==================================
2024-04-13 20:01:20,219:INFO:Initializing create_model()
2024-04-13 20:01:20,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC8DACB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.2, 'max_features': 'log2', 'max_depth': 10, 'criterion': 'gini'})
2024-04-13 20:01:20,219:INFO:Checking exceptions
2024-04-13 20:01:20,219:INFO:Importing libraries
2024-04-13 20:01:20,219:INFO:Copying training dataset
2024-04-13 20:01:20,224:INFO:Defining folds
2024-04-13 20:01:20,224:INFO:Declaring metric variables
2024-04-13 20:01:20,227:INFO:Importing untrained model
2024-04-13 20:01:20,227:INFO:Declaring custom model
2024-04-13 20:01:20,230:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:01:20,235:INFO:Starting cross validation
2024-04-13 20:01:20,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:01:20,277:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 20:01:20,277:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 20:01:20,282:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 20:01:20,284:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 20:01:20,284:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 20:01:20,287:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 20:01:20,288:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 20:01:20,290:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 20:01:20,290:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 20:01:20,293:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-04-13 20:01:20,313:INFO:Calculating mean and std
2024-04-13 20:01:20,313:INFO:Creating metrics dataframe
2024-04-13 20:01:20,317:INFO:Finalizing model
2024-04-13 20:01:20,329:INFO:Uploading results into container
2024-04-13 20:01:20,330:INFO:Uploading model into container now
2024-04-13 20:01:20,330:INFO:_master_model_container: 3
2024-04-13 20:01:20,330:INFO:_display_container: 5
2024-04-13 20:01:20,331:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=10, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best')
2024-04-13 20:01:20,331:INFO:create_model() successfully completed......................................
2024-04-13 20:01:20,466:INFO:SubProcess create_model() end ==================================
2024-04-13 20:01:20,466:INFO:choose_better activated
2024-04-13 20:01:20,469:INFO:SubProcess create_model() called ==================================
2024-04-13 20:01:20,469:INFO:Initializing create_model()
2024-04-13 20:01:20,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:01:20,470:INFO:Checking exceptions
2024-04-13 20:01:20,471:INFO:Importing libraries
2024-04-13 20:01:20,471:INFO:Copying training dataset
2024-04-13 20:01:20,476:INFO:Defining folds
2024-04-13 20:01:20,476:INFO:Declaring metric variables
2024-04-13 20:01:20,476:INFO:Importing untrained model
2024-04-13 20:01:20,476:INFO:Declaring custom model
2024-04-13 20:01:20,477:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:01:20,477:INFO:Starting cross validation
2024-04-13 20:01:20,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:01:20,582:INFO:Calculating mean and std
2024-04-13 20:01:20,582:INFO:Creating metrics dataframe
2024-04-13 20:01:20,584:INFO:Finalizing model
2024-04-13 20:01:20,625:INFO:Uploading results into container
2024-04-13 20:01:20,625:INFO:Uploading model into container now
2024-04-13 20:01:20,625:INFO:_master_model_container: 4
2024-04-13 20:01:20,625:INFO:_display_container: 6
2024-04-13 20:01:20,625:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best')
2024-04-13 20:01:20,625:INFO:create_model() successfully completed......................................
2024-04-13 20:01:20,744:INFO:SubProcess create_model() end ==================================
2024-04-13 20:01:20,744:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best') result for F1 is 0.5538
2024-04-13 20:01:20,744:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=10, max_features='log2', max_leaf_nodes=None,
                       min_impurity_decrease=0.2, min_samples_leaf=2,
                       min_samples_split=5, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best') result for F1 is 0.0
2024-04-13 20:01:20,745:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best') is best model
2024-04-13 20:01:20,745:INFO:choose_better completed
2024-04-13 20:01:20,745:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-13 20:01:20,753:INFO:_master_model_container: 4
2024-04-13 20:01:20,753:INFO:_display_container: 5
2024-04-13 20:01:20,753:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best')
2024-04-13 20:01:20,753:INFO:tune_model() successfully completed......................................
2024-04-13 20:01:20,872:INFO:Initializing predict_model()
2024-04-13 20:01:20,873:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232A99191B0>)
2024-04-13 20:01:20,873:INFO:Checking exceptions
2024-04-13 20:01:20,873:INFO:Preloading libraries
2024-04-13 20:01:21,068:INFO:Initializing finalize_model()
2024-04-13 20:01:21,068:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-13 20:01:21,068:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best')
2024-04-13 20:01:21,071:INFO:Initializing create_model()
2024-04-13 20:01:21,071:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232ABD01990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1323, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:01:21,071:INFO:Checking exceptions
2024-04-13 20:01:21,072:INFO:Importing libraries
2024-04-13 20:01:21,072:INFO:Copying training dataset
2024-04-13 20:01:21,072:INFO:Defining folds
2024-04-13 20:01:21,072:INFO:Declaring metric variables
2024-04-13 20:01:21,073:INFO:Importing untrained model
2024-04-13 20:01:21,073:INFO:Declaring custom model
2024-04-13 20:01:21,073:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:01:21,073:INFO:Cross validation set to False
2024-04-13 20:01:21,073:INFO:Fitting Model
2024-04-13 20:01:21,126:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1323,
                                        splitter='best'))],
         verbose=False)
2024-04-13 20:01:21,126:INFO:create_model() successfully completed......................................
2024-04-13 20:01:21,264:INFO:_master_model_container: 4
2024-04-13 20:01:21,264:INFO:_display_container: 6
2024-04-13 20:01:21,268:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1323,
                                        splitter='best'))],
         verbose=False)
2024-04-13 20:01:21,268:INFO:finalize_model() successfully completed......................................
2024-04-13 20:01:21,411:INFO:Initializing save_model()
2024-04-13 20:01:21,411:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1323,
                                        splitter='best'))],
         verbose=False), model_name=./model_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-13 20:01:21,411:INFO:Adding model into prep_pipe
2024-04-13 20:01:21,411:WARNING:Only Model saved as it was a pipeline.
2024-04-13 20:01:21,414:INFO:./model_kobe.pkl saved in current working directory
2024-04-13 20:01:21,418:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=1323,
                                        splitter='best'))],
         verbose=False)
2024-04-13 20:01:21,418:INFO:save_model() successfully completed......................................
2024-04-13 20:01:21,540:INFO:Initializing load_model()
2024-04-13 20:01:21,540:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-13 20:01:21,591:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-13 20:01:25,052:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-13 20:01:25,131:WARNING:C:\Users\eduar\AppData\Local\Temp\ipykernel_11376\1182809228.py:84: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

2024-04-13 20:07:07,175:INFO:PyCaret ClassificationExperiment
2024-04-13 20:07:07,175:INFO:Logging name: clf-default-name
2024-04-13 20:07:07,175:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-13 20:07:07,175:INFO:version 3.3.0
2024-04-13 20:07:07,175:INFO:Initializing setup()
2024-04-13 20:07:07,175:INFO:self.USI: 450f
2024-04-13 20:07:07,176:INFO:self._variable_keys: {'data', 'gpu_n_jobs_param', 'idx', 'seed', 'fold_groups_param', 'fix_imbalance', 'log_plots_param', 'USI', 'n_jobs_param', 'pipeline', 'fold_generator', 'exp_id', 'gpu_param', 'y', 'X', 'y_test', 'is_multiclass', 'memory', 'X_train', 'logging_param', 'html_param', 'y_train', 'exp_name_log', 'fold_shuffle_param', '_ml_usecase', 'X_test', '_available_plots', 'target_param'}
2024-04-13 20:07:07,176:INFO:Checking environment
2024-04-13 20:07:07,176:INFO:python_version: 3.10.14
2024-04-13 20:07:07,176:INFO:python_build: ('main', 'Mar 21 2024 16:20:14')
2024-04-13 20:07:07,176:INFO:machine: AMD64
2024-04-13 20:07:07,176:INFO:platform: Windows-10-10.0.22631-SP0
2024-04-13 20:07:07,178:INFO:Memory: svmem(total=34280943616, available=24594337792, percent=28.3, used=9686605824, free=24594337792)
2024-04-13 20:07:07,178:INFO:Physical Core: 8
2024-04-13 20:07:07,178:INFO:Logical Core: 16
2024-04-13 20:07:07,178:INFO:Checking libraries
2024-04-13 20:07:07,178:INFO:System:
2024-04-13 20:07:07,178:INFO:    python: 3.10.14 | packaged by Anaconda, Inc. | (main, Mar 21 2024, 16:20:14) [MSC v.1916 64 bit (AMD64)]
2024-04-13 20:07:07,178:INFO:executable: C:\Users\eduar\miniconda3\envs\infnet\python.exe
2024-04-13 20:07:07,178:INFO:   machine: Windows-10-10.0.22631-SP0
2024-04-13 20:07:07,178:INFO:PyCaret required dependencies:
2024-04-13 20:07:07,178:INFO:                 pip: 23.3.1
2024-04-13 20:07:07,178:INFO:          setuptools: 68.2.2
2024-04-13 20:07:07,179:INFO:             pycaret: 3.3.0
2024-04-13 20:07:07,179:INFO:             IPython: 8.23.0
2024-04-13 20:07:07,179:INFO:          ipywidgets: 8.1.2
2024-04-13 20:07:07,179:INFO:                tqdm: 4.66.2
2024-04-13 20:07:07,179:INFO:               numpy: 1.26.4
2024-04-13 20:07:07,179:INFO:              pandas: 2.1.4
2024-04-13 20:07:07,179:INFO:              jinja2: 3.1.3
2024-04-13 20:07:07,179:INFO:               scipy: 1.11.4
2024-04-13 20:07:07,179:INFO:              joblib: 1.3.0
2024-04-13 20:07:07,179:INFO:             sklearn: 1.4.2
2024-04-13 20:07:07,179:INFO:                pyod: 1.1.3
2024-04-13 20:07:07,179:INFO:            imblearn: 0.12.2
2024-04-13 20:07:07,179:INFO:   category_encoders: 2.6.3
2024-04-13 20:07:07,179:INFO:            lightgbm: 4.3.0
2024-04-13 20:07:07,179:INFO:               numba: 0.59.1
2024-04-13 20:07:07,179:INFO:            requests: 2.31.0
2024-04-13 20:07:07,179:INFO:          matplotlib: 3.7.5
2024-04-13 20:07:07,179:INFO:          scikitplot: 0.3.7
2024-04-13 20:07:07,179:INFO:         yellowbrick: 1.5
2024-04-13 20:07:07,179:INFO:              plotly: 5.20.0
2024-04-13 20:07:07,179:INFO:    plotly-resampler: Not installed
2024-04-13 20:07:07,179:INFO:             kaleido: 0.2.1
2024-04-13 20:07:07,179:INFO:           schemdraw: 0.15
2024-04-13 20:07:07,179:INFO:         statsmodels: 0.14.1
2024-04-13 20:07:07,179:INFO:              sktime: 0.28.0
2024-04-13 20:07:07,179:INFO:               tbats: 1.1.3
2024-04-13 20:07:07,179:INFO:            pmdarima: 2.0.4
2024-04-13 20:07:07,179:INFO:              psutil: 5.9.8
2024-04-13 20:07:07,179:INFO:          markupsafe: 2.1.5
2024-04-13 20:07:07,179:INFO:             pickle5: Not installed
2024-04-13 20:07:07,179:INFO:         cloudpickle: 3.0.0
2024-04-13 20:07:07,179:INFO:         deprecation: 2.1.0
2024-04-13 20:07:07,179:INFO:              xxhash: 3.4.1
2024-04-13 20:07:07,179:INFO:           wurlitzer: Not installed
2024-04-13 20:07:07,180:INFO:PyCaret optional dependencies:
2024-04-13 20:07:07,180:INFO:                shap: Not installed
2024-04-13 20:07:07,180:INFO:           interpret: Not installed
2024-04-13 20:07:07,180:INFO:                umap: Not installed
2024-04-13 20:07:07,180:INFO:     ydata_profiling: Not installed
2024-04-13 20:07:07,180:INFO:  explainerdashboard: Not installed
2024-04-13 20:07:07,180:INFO:             autoviz: Not installed
2024-04-13 20:07:07,180:INFO:           fairlearn: Not installed
2024-04-13 20:07:07,180:INFO:          deepchecks: Not installed
2024-04-13 20:07:07,180:INFO:             xgboost: Not installed
2024-04-13 20:07:07,180:INFO:            catboost: Not installed
2024-04-13 20:07:07,180:INFO:              kmodes: Not installed
2024-04-13 20:07:07,180:INFO:             mlxtend: Not installed
2024-04-13 20:07:07,180:INFO:       statsforecast: Not installed
2024-04-13 20:07:07,180:INFO:        tune_sklearn: Not installed
2024-04-13 20:07:07,180:INFO:                 ray: Not installed
2024-04-13 20:07:07,180:INFO:            hyperopt: Not installed
2024-04-13 20:07:07,180:INFO:              optuna: Not installed
2024-04-13 20:07:07,180:INFO:               skopt: Not installed
2024-04-13 20:07:07,180:INFO:              mlflow: 2.11.3
2024-04-13 20:07:07,180:INFO:              gradio: Not installed
2024-04-13 20:07:07,180:INFO:             fastapi: Not installed
2024-04-13 20:07:07,180:INFO:             uvicorn: Not installed
2024-04-13 20:07:07,180:INFO:              m2cgen: Not installed
2024-04-13 20:07:07,180:INFO:           evidently: Not installed
2024-04-13 20:07:07,180:INFO:               fugue: Not installed
2024-04-13 20:07:07,180:INFO:           streamlit: Not installed
2024-04-13 20:07:07,180:INFO:             prophet: Not installed
2024-04-13 20:07:07,180:INFO:None
2024-04-13 20:07:07,180:INFO:Set up data.
2024-04-13 20:07:07,184:INFO:Set up folding strategy.
2024-04-13 20:07:07,184:INFO:Set up train/test split.
2024-04-13 20:07:07,184:INFO:Set up data.
2024-04-13 20:07:07,187:INFO:Set up index.
2024-04-13 20:07:07,187:INFO:Assigning column types.
2024-04-13 20:07:07,190:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-13 20:07:07,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:07:07,223:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:07:07,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,277:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-13 20:07:07,277:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:07:07,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,298:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-13 20:07:07,330:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:07:07,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,383:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-13 20:07:07,403:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,404:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-13 20:07:07,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,457:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,511:INFO:Preparing preprocessing pipeline...
2024-04-13 20:07:07,512:INFO:Set up simple imputation.
2024-04-13 20:07:07,512:INFO:Set up feature normalization.
2024-04-13 20:07:07,532:INFO:Finished creating preprocessing pipeline.
2024-04-13 20:07:07,535:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-04-13 20:07:07,535:INFO:Creating final display dataframe.
2024-04-13 20:07:07,595:INFO:Setup _display_container:                     Description             Value
0                    Session id              6362
1                        Target     shot_distance
2                   Target type            Binary
3           Original data shape        (20285, 6)
4        Transformed data shape        (20285, 6)
5   Transformed train set shape        (16228, 6)
6    Transformed test set shape         (4057, 6)
7              Numeric features                 5
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              450f
2024-04-13 20:07:07,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-13 20:07:07,707:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-13 20:07:07,707:INFO:setup() successfully completed in 0.53s...............
2024-04-13 20:07:07,707:INFO:Initializing compare_models()
2024-04-13 20:07:07,707:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, include=['lr', 'dt'], fold=None, round=4, cross_validation=True, sort=f1, n_select=2, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, 'include': ['lr', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'f1', 'n_select': 2, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-04-13 20:07:07,707:INFO:Checking exceptions
2024-04-13 20:07:07,711:INFO:Preparing display monitor
2024-04-13 20:07:07,726:INFO:Initializing Logistic Regression
2024-04-13 20:07:07,726:INFO:Total runtime is 0.0 minutes
2024-04-13 20:07:07,728:INFO:SubProcess create_model() called ==================================
2024-04-13 20:07:07,729:INFO:Initializing create_model()
2024-04-13 20:07:07,729:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC533E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:07:07,729:INFO:Checking exceptions
2024-04-13 20:07:07,729:INFO:Importing libraries
2024-04-13 20:07:07,729:INFO:Copying training dataset
2024-04-13 20:07:07,736:INFO:Defining folds
2024-04-13 20:07:07,736:INFO:Declaring metric variables
2024-04-13 20:07:07,738:INFO:Importing untrained model
2024-04-13 20:07:07,743:INFO:Logistic Regression Imported successfully
2024-04-13 20:07:07,748:INFO:Starting cross validation
2024-04-13 20:07:07,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:07:07,919:INFO:Calculating mean and std
2024-04-13 20:07:07,919:INFO:Creating metrics dataframe
2024-04-13 20:07:07,921:INFO:Uploading results into container
2024-04-13 20:07:07,921:INFO:Uploading model into container now
2024-04-13 20:07:07,921:INFO:_master_model_container: 1
2024-04-13 20:07:07,921:INFO:_display_container: 2
2024-04-13 20:07:07,922:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6362, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:07:07,922:INFO:create_model() successfully completed......................................
2024-04-13 20:07:08,134:INFO:SubProcess create_model() end ==================================
2024-04-13 20:07:08,134:INFO:Creating metrics dataframe
2024-04-13 20:07:08,139:INFO:Initializing Decision Tree Classifier
2024-04-13 20:07:08,139:INFO:Total runtime is 0.006879138946533203 minutes
2024-04-13 20:07:08,142:INFO:SubProcess create_model() called ==================================
2024-04-13 20:07:08,142:INFO:Initializing create_model()
2024-04-13 20:07:08,142:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232AC533E50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:07:08,142:INFO:Checking exceptions
2024-04-13 20:07:08,142:INFO:Importing libraries
2024-04-13 20:07:08,143:INFO:Copying training dataset
2024-04-13 20:07:08,148:INFO:Defining folds
2024-04-13 20:07:08,148:INFO:Declaring metric variables
2024-04-13 20:07:08,150:INFO:Importing untrained model
2024-04-13 20:07:08,153:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:07:08,157:INFO:Starting cross validation
2024-04-13 20:07:08,158:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:07:09,901:INFO:Calculating mean and std
2024-04-13 20:07:09,902:INFO:Creating metrics dataframe
2024-04-13 20:07:09,904:INFO:Uploading results into container
2024-04-13 20:07:09,905:INFO:Uploading model into container now
2024-04-13 20:07:09,905:INFO:_master_model_container: 2
2024-04-13 20:07:09,905:INFO:_display_container: 2
2024-04-13 20:07:09,905:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best')
2024-04-13 20:07:09,906:INFO:create_model() successfully completed......................................
2024-04-13 20:07:10,075:INFO:SubProcess create_model() end ==================================
2024-04-13 20:07:10,075:INFO:Creating metrics dataframe
2024-04-13 20:07:10,081:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-13 20:07:10,086:INFO:Initializing create_model()
2024-04-13 20:07:10,086:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:07:10,086:INFO:Checking exceptions
2024-04-13 20:07:10,087:INFO:Importing libraries
2024-04-13 20:07:10,087:INFO:Copying training dataset
2024-04-13 20:07:10,092:INFO:Defining folds
2024-04-13 20:07:10,092:INFO:Declaring metric variables
2024-04-13 20:07:10,093:INFO:Importing untrained model
2024-04-13 20:07:10,093:INFO:Declaring custom model
2024-04-13 20:07:10,093:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:07:10,094:INFO:Cross validation set to False
2024-04-13 20:07:10,094:INFO:Fitting Model
2024-04-13 20:07:10,135:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best')
2024-04-13 20:07:10,135:INFO:create_model() successfully completed......................................
2024-04-13 20:07:10,287:INFO:Initializing create_model()
2024-04-13 20:07:10,287:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6362, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:07:10,287:INFO:Checking exceptions
2024-04-13 20:07:10,288:INFO:Importing libraries
2024-04-13 20:07:10,289:INFO:Copying training dataset
2024-04-13 20:07:10,294:INFO:Defining folds
2024-04-13 20:07:10,294:INFO:Declaring metric variables
2024-04-13 20:07:10,294:INFO:Importing untrained model
2024-04-13 20:07:10,294:INFO:Declaring custom model
2024-04-13 20:07:10,294:INFO:Logistic Regression Imported successfully
2024-04-13 20:07:10,295:INFO:Cross validation set to False
2024-04-13 20:07:10,295:INFO:Fitting Model
2024-04-13 20:07:10,306:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6362, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-04-13 20:07:10,306:INFO:create_model() successfully completed......................................
2024-04-13 20:07:10,471:INFO:_master_model_container: 2
2024-04-13 20:07:10,471:INFO:_display_container: 2
2024-04-13 20:07:10,472:INFO:[DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best'), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6362, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)]
2024-04-13 20:07:10,472:INFO:compare_models() successfully completed......................................
2024-04-13 20:07:10,472:INFO:Initializing predict_model()
2024-04-13 20:07:10,472:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6362, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AC471BD0>)
2024-04-13 20:07:10,472:INFO:Checking exceptions
2024-04-13 20:07:10,473:INFO:Preloading libraries
2024-04-13 20:07:11,852:INFO:Initializing predict_model()
2024-04-13 20:07:11,852:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AE4F4E50>)
2024-04-13 20:07:11,852:INFO:Checking exceptions
2024-04-13 20:07:11,852:INFO:Preloading libraries
2024-04-13 20:07:12,406:INFO:Initializing tune_model()
2024-04-13 20:07:12,406:INFO:tune_model(estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best'), fold=None, round=4, n_iter=4, custom_grid=None, optimize=f1, custom_scorer=None, search_library=scikit-learn, search_algorithm=random, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>)
2024-04-13 20:07:12,406:INFO:Checking exceptions
2024-04-13 20:07:12,417:INFO:Copying training dataset
2024-04-13 20:07:12,422:INFO:Checking base model
2024-04-13 20:07:12,422:INFO:Base model : Decision Tree Classifier
2024-04-13 20:07:12,425:INFO:Declaring metric variables
2024-04-13 20:07:12,428:INFO:Defining Hyperparameters
2024-04-13 20:07:12,581:INFO:Tuning with n_jobs=-1
2024-04-13 20:07:12,581:INFO:Initializing RandomizedSearchCV
2024-04-13 20:07:13,537:INFO:best_params: {'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.002, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 15, 'actual_estimator__criterion': 'gini'}
2024-04-13 20:07:13,537:INFO:Hyperparameter search completed
2024-04-13 20:07:13,537:INFO:SubProcess create_model() called ==================================
2024-04-13 20:07:13,538:INFO:Initializing create_model()
2024-04-13 20:07:13,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000232ACAE2BF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 10, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.002, 'max_features': 1.0, 'max_depth': 15, 'criterion': 'gini'})
2024-04-13 20:07:13,538:INFO:Checking exceptions
2024-04-13 20:07:13,538:INFO:Importing libraries
2024-04-13 20:07:13,538:INFO:Copying training dataset
2024-04-13 20:07:13,544:INFO:Defining folds
2024-04-13 20:07:13,544:INFO:Declaring metric variables
2024-04-13 20:07:13,546:INFO:Importing untrained model
2024-04-13 20:07:13,546:INFO:Declaring custom model
2024-04-13 20:07:13,549:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:07:13,553:INFO:Starting cross validation
2024-04-13 20:07:13,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:07:13,631:INFO:Calculating mean and std
2024-04-13 20:07:13,631:INFO:Creating metrics dataframe
2024-04-13 20:07:13,635:INFO:Finalizing model
2024-04-13 20:07:13,651:INFO:Uploading results into container
2024-04-13 20:07:13,651:INFO:Uploading model into container now
2024-04-13 20:07:13,652:INFO:_master_model_container: 3
2024-04-13 20:07:13,652:INFO:_display_container: 5
2024-04-13 20:07:13,652:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=15, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best')
2024-04-13 20:07:13,652:INFO:create_model() successfully completed......................................
2024-04-13 20:07:13,815:INFO:SubProcess create_model() end ==================================
2024-04-13 20:07:13,815:INFO:choose_better activated
2024-04-13 20:07:13,817:INFO:SubProcess create_model() called ==================================
2024-04-13 20:07:13,818:INFO:Initializing create_model()
2024-04-13 20:07:13,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:07:13,818:INFO:Checking exceptions
2024-04-13 20:07:13,819:INFO:Importing libraries
2024-04-13 20:07:13,820:INFO:Copying training dataset
2024-04-13 20:07:13,825:INFO:Defining folds
2024-04-13 20:07:13,825:INFO:Declaring metric variables
2024-04-13 20:07:13,825:INFO:Importing untrained model
2024-04-13 20:07:13,825:INFO:Declaring custom model
2024-04-13 20:07:13,825:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:07:13,825:INFO:Starting cross validation
2024-04-13 20:07:13,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-13 20:07:13,932:INFO:Calculating mean and std
2024-04-13 20:07:13,932:INFO:Creating metrics dataframe
2024-04-13 20:07:13,934:INFO:Finalizing model
2024-04-13 20:07:13,974:INFO:Uploading results into container
2024-04-13 20:07:13,974:INFO:Uploading model into container now
2024-04-13 20:07:13,975:INFO:_master_model_container: 4
2024-04-13 20:07:13,975:INFO:_display_container: 6
2024-04-13 20:07:13,975:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best')
2024-04-13 20:07:13,975:INFO:create_model() successfully completed......................................
2024-04-13 20:07:14,128:INFO:SubProcess create_model() end ==================================
2024-04-13 20:07:14,128:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best') result for F1 is 0.5462
2024-04-13 20:07:14,129:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=15, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.002, min_samples_leaf=5,
                       min_samples_split=10, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best') result for F1 is 0.4421
2024-04-13 20:07:14,129:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best') is best model
2024-04-13 20:07:14,129:INFO:choose_better completed
2024-04-13 20:07:14,129:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-04-13 20:07:14,137:INFO:_master_model_container: 4
2024-04-13 20:07:14,137:INFO:_display_container: 5
2024-04-13 20:07:14,137:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best')
2024-04-13 20:07:14,137:INFO:tune_model() successfully completed......................................
2024-04-13 20:07:14,295:INFO:Initializing predict_model()
2024-04-13 20:07:14,295:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000232AE4F4790>)
2024-04-13 20:07:14,295:INFO:Checking exceptions
2024-04-13 20:07:14,296:INFO:Preloading libraries
2024-04-13 20:07:14,529:INFO:Initializing finalize_model()
2024-04-13 20:07:14,529:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-13 20:07:14,530:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best')
2024-04-13 20:07:14,533:INFO:Initializing create_model()
2024-04-13 20:07:14,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000232A97DB310>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6362, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-13 20:07:14,533:INFO:Checking exceptions
2024-04-13 20:07:14,534:INFO:Importing libraries
2024-04-13 20:07:14,534:INFO:Copying training dataset
2024-04-13 20:07:14,534:INFO:Defining folds
2024-04-13 20:07:14,534:INFO:Declaring metric variables
2024-04-13 20:07:14,534:INFO:Importing untrained model
2024-04-13 20:07:14,534:INFO:Declaring custom model
2024-04-13 20:07:14,535:INFO:Decision Tree Classifier Imported successfully
2024-04-13 20:07:14,535:INFO:Cross validation set to False
2024-04-13 20:07:14,535:INFO:Fitting Model
2024-04-13 20:07:14,586:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6362,
                                        splitter='best'))],
         verbose=False)
2024-04-13 20:07:14,586:INFO:create_model() successfully completed......................................
2024-04-13 20:07:14,749:INFO:_master_model_container: 4
2024-04-13 20:07:14,749:INFO:_display_container: 6
2024-04-13 20:07:14,753:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6362,
                                        splitter='best'))],
         verbose=False)
2024-04-13 20:07:14,754:INFO:finalize_model() successfully completed......................................
2024-04-13 20:07:14,931:INFO:Initializing save_model()
2024-04-13 20:07:14,931:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6362,
                                        splitter='best'))],
         verbose=False), model_name=./model_kobe, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\eduar\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-13 20:07:14,931:INFO:Adding model into prep_pipe
2024-04-13 20:07:14,931:WARNING:Only Model saved as it was a pipeline.
2024-04-13 20:07:14,934:INFO:./model_kobe.pkl saved in current working directory
2024-04-13 20:07:14,938:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=6362,
                                        splitter='best'))],
         verbose=False)
2024-04-13 20:07:14,938:INFO:save_model() successfully completed......................................
2024-04-13 20:07:15,101:INFO:Initializing load_model()
2024-04-13 20:07:15,101:INFO:load_model(model_name=./model_kobe, platform=None, authentication=None, verbose=True)
2024-04-13 20:07:15,151:WARNING:C:\Users\eduar\miniconda3\envs\infnet\lib\site-packages\mlflow\types\utils.py:393: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2024-04-13 20:07:17,586:WARNING:C:\Users\eduar\AppData\Local\Temp\ipykernel_11376\1182809228.py:84: FutureWarning: ``mlflow.tracking.client.MlflowClient.get_latest_versions`` is deprecated since 2.9.0. Model registry stages will be removed in a future major release. To learn more about the deprecation of model registry stages, see our migration guide here: https://mlflow.org/docs/2.11.3/model-registry.html#migrating-from-stages
  model_version = client.get_latest_versions(registered_model_name)[-1].version

